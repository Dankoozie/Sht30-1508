

Microchip Technology PIC LITE Macro Assembler V1.35 build -356382666 
                                                                                               Fri Nov 13 00:25:27 2015

Microchip Technology Omniscient Code Generator v1.35 (Free mode) build 201507080246
     1                           	processor	16F1508
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2
    10                           	psect	text2,local,class=CODE,merge=1,delta=2
    11                           	psect	text3,local,class=CODE,merge=1,delta=2
    12                           	psect	text4,local,class=CODE,merge=1,delta=2
    13                           	psect	text5,local,class=CODE,merge=1,delta=2
    14                           	psect	text6,local,class=CODE,merge=1,delta=2
    15                           	psect	text7,local,class=CODE,merge=1,delta=2
    16                           	psect	text8,local,class=CODE,merge=1,delta=2
    17                           	psect	text9,local,class=CODE,merge=1,delta=2
    18                           	psect	text10,local,class=CODE,merge=1,delta=2
    19                           	psect	text11,local,class=CODE,merge=1,delta=2
    20                           	psect	text12,local,class=CODE,merge=1,delta=2
    21                           	psect	text13,local,class=CODE,merge=1,delta=2
    22                           	dabs	1,0x7E,2
    23  0000                     	;# 
    24  0001                     	;# 
    25  0002                     	;# 
    26  0003                     	;# 
    27  0004                     	;# 
    28  0005                     	;# 
    29  0006                     	;# 
    30  0007                     	;# 
    31  0008                     	;# 
    32  0009                     	;# 
    33  000A                     	;# 
    34  000B                     	;# 
    35  000C                     	;# 
    36  000D                     	;# 
    37  000E                     	;# 
    38  0011                     	;# 
    39  0012                     	;# 
    40  0013                     	;# 
    41  0015                     	;# 
    42  0016                     	;# 
    43  0016                     	;# 
    44  0017                     	;# 
    45  0018                     	;# 
    46  0019                     	;# 
    47  001A                     	;# 
    48  001B                     	;# 
    49  001C                     	;# 
    50  008C                     	;# 
    51  008D                     	;# 
    52  008E                     	;# 
    53  0091                     	;# 
    54  0092                     	;# 
    55  0093                     	;# 
    56  0095                     	;# 
    57  0096                     	;# 
    58  0097                     	;# 
    59  0099                     	;# 
    60  009A                     	;# 
    61  009B                     	;# 
    62  009B                     	;# 
    63  009C                     	;# 
    64  009D                     	;# 
    65  009E                     	;# 
    66  009F                     	;# 
    67  010C                     	;# 
    68  010D                     	;# 
    69  010E                     	;# 
    70  0111                     	;# 
    71  0112                     	;# 
    72  0113                     	;# 
    73  0114                     	;# 
    74  0115                     	;# 
    75  0116                     	;# 
    76  0117                     	;# 
    77  0118                     	;# 
    78  0119                     	;# 
    79  011D                     	;# 
    80  018C                     	;# 
    81  018D                     	;# 
    82  018E                     	;# 
    83  0191                     	;# 
    84  0191                     	;# 
    85  0192                     	;# 
    86  0193                     	;# 
    87  0193                     	;# 
    88  0194                     	;# 
    89  0195                     	;# 
    90  0196                     	;# 
    91  0197                     	;# 
    92  0199                     	;# 
    93  019A                     	;# 
    94  019B                     	;# 
    95  019B                     	;# 
    96  019C                     	;# 
    97  019D                     	;# 
    98  019E                     	;# 
    99  019F                     	;# 
   100  020C                     	;# 
   101  020D                     	;# 
   102  0211                     	;# 
   103  0211                     	;# 
   104  0212                     	;# 
   105  0212                     	;# 
   106  0213                     	;# 
   107  0213                     	;# 
   108  0214                     	;# 
   109  0214                     	;# 
   110  0215                     	;# 
   111  0215                     	;# 
   112  0215                     	;# 
   113  0216                     	;# 
   114  0216                     	;# 
   115  0217                     	;# 
   116  0217                     	;# 
   117  0391                     	;# 
   118  0392                     	;# 
   119  0393                     	;# 
   120  0394                     	;# 
   121  0395                     	;# 
   122  0396                     	;# 
   123  0498                     	;# 
   124  0498                     	;# 
   125  0499                     	;# 
   126  049A                     	;# 
   127  049B                     	;# 
   128  049B                     	;# 
   129  049C                     	;# 
   130  049D                     	;# 
   131  049E                     	;# 
   132  049F                     	;# 
   133  0611                     	;# 
   134  0612                     	;# 
   135  0613                     	;# 
   136  0613                     	;# 
   137  0614                     	;# 
   138  0615                     	;# 
   139  0616                     	;# 
   140  0616                     	;# 
   141  0617                     	;# 
   142  0618                     	;# 
   143  0619                     	;# 
   144  0619                     	;# 
   145  061A                     	;# 
   146  061B                     	;# 
   147  061C                     	;# 
   148  061C                     	;# 
   149  0691                     	;# 
   150  0692                     	;# 
   151  0693                     	;# 
   152  0694                     	;# 
   153  0695                     	;# 
   154  0F0F                     	;# 
   155  0F10                     	;# 
   156  0F11                     	;# 
   157  0F12                     	;# 
   158  0F13                     	;# 
   159  0F14                     	;# 
   160  0F15                     	;# 
   161  0F16                     	;# 
   162  0F17                     	;# 
   163  0F18                     	;# 
   164  0F19                     	;# 
   165  0F1A                     	;# 
   166  0F1B                     	;# 
   167  0F1C                     	;# 
   168  0F1D                     	;# 
   169  0F1E                     	;# 
   170  0F1F                     	;# 
   171  0F20                     	;# 
   172  0F21                     	;# 
   173  0F22                     	;# 
   174  0F23                     	;# 
   175  0F24                     	;# 
   176  0F25                     	;# 
   177  0F26                     	;# 
   178  0F27                     	;# 
   179  0F28                     	;# 
   180  0F29                     	;# 
   181  0F2A                     	;# 
   182  0F2B                     	;# 
   183  0F2C                     	;# 
   184  0F2D                     	;# 
   185  0F2E                     	;# 
   186  0F2F                     	;# 
   187  0F8C                     	;# 
   188  0F8D                     	;# 
   189  0F91                     	;# 
   190  0F95                     	;# 
   191  0F96                     	;# 
   192  0F97                     	;# 
   193  0F9C                     	;# 
   194  0F9D                     	;# 
   195  0F9E                     	;# 
   196  0FE3                     	;# 
   197  0FE4                     	;# 
   198  0FE5                     	;# 
   199  0FE6                     	;# 
   200  0FE7                     	;# 
   201  0FE8                     	;# 
   202  0FE9                     	;# 
   203  0FEA                     	;# 
   204  0FEB                     	;# 
   205  0FED                     	;# 
   206  0FEE                     	;# 
   207  0FEF                     	;# 
   208  0000                     	;# 
   209  0001                     	;# 
   210  0002                     	;# 
   211  0003                     	;# 
   212  0004                     	;# 
   213  0005                     	;# 
   214  0006                     	;# 
   215  0007                     	;# 
   216  0008                     	;# 
   217  0009                     	;# 
   218  000A                     	;# 
   219  000B                     	;# 
   220  000C                     	;# 
   221  000D                     	;# 
   222  000E                     	;# 
   223  0011                     	;# 
   224  0012                     	;# 
   225  0013                     	;# 
   226  0015                     	;# 
   227  0016                     	;# 
   228  0016                     	;# 
   229  0017                     	;# 
   230  0018                     	;# 
   231  0019                     	;# 
   232  001A                     	;# 
   233  001B                     	;# 
   234  001C                     	;# 
   235  008C                     	;# 
   236  008D                     	;# 
   237  008E                     	;# 
   238  0091                     	;# 
   239  0092                     	;# 
   240  0093                     	;# 
   241  0095                     	;# 
   242  0096                     	;# 
   243  0097                     	;# 
   244  0099                     	;# 
   245  009A                     	;# 
   246  009B                     	;# 
   247  009B                     	;# 
   248  009C                     	;# 
   249  009D                     	;# 
   250  009E                     	;# 
   251  009F                     	;# 
   252  010C                     	;# 
   253  010D                     	;# 
   254  010E                     	;# 
   255  0111                     	;# 
   256  0112                     	;# 
   257  0113                     	;# 
   258  0114                     	;# 
   259  0115                     	;# 
   260  0116                     	;# 
   261  0117                     	;# 
   262  0118                     	;# 
   263  0119                     	;# 
   264  011D                     	;# 
   265  018C                     	;# 
   266  018D                     	;# 
   267  018E                     	;# 
   268  0191                     	;# 
   269  0191                     	;# 
   270  0192                     	;# 
   271  0193                     	;# 
   272  0193                     	;# 
   273  0194                     	;# 
   274  0195                     	;# 
   275  0196                     	;# 
   276  0197                     	;# 
   277  0199                     	;# 
   278  019A                     	;# 
   279  019B                     	;# 
   280  019B                     	;# 
   281  019C                     	;# 
   282  019D                     	;# 
   283  019E                     	;# 
   284  019F                     	;# 
   285  020C                     	;# 
   286  020D                     	;# 
   287  0211                     	;# 
   288  0211                     	;# 
   289  0212                     	;# 
   290  0212                     	;# 
   291  0213                     	;# 
   292  0213                     	;# 
   293  0214                     	;# 
   294  0214                     	;# 
   295  0215                     	;# 
   296  0215                     	;# 
   297  0215                     	;# 
   298  0216                     	;# 
   299  0216                     	;# 
   300  0217                     	;# 
   301  0217                     	;# 
   302  0391                     	;# 
   303  0392                     	;# 
   304  0393                     	;# 
   305  0394                     	;# 
   306  0395                     	;# 
   307  0396                     	;# 
   308  0498                     	;# 
   309  0498                     	;# 
   310  0499                     	;# 
   311  049A                     	;# 
   312  049B                     	;# 
   313  049B                     	;# 
   314  049C                     	;# 
   315  049D                     	;# 
   316  049E                     	;# 
   317  049F                     	;# 
   318  0611                     	;# 
   319  0612                     	;# 
   320  0613                     	;# 
   321  0613                     	;# 
   322  0614                     	;# 
   323  0615                     	;# 
   324  0616                     	;# 
   325  0616                     	;# 
   326  0617                     	;# 
   327  0618                     	;# 
   328  0619                     	;# 
   329  0619                     	;# 
   330  061A                     	;# 
   331  061B                     	;# 
   332  061C                     	;# 
   333  061C                     	;# 
   334  0691                     	;# 
   335  0692                     	;# 
   336  0693                     	;# 
   337  0694                     	;# 
   338  0695                     	;# 
   339  0F0F                     	;# 
   340  0F10                     	;# 
   341  0F11                     	;# 
   342  0F12                     	;# 
   343  0F13                     	;# 
   344  0F14                     	;# 
   345  0F15                     	;# 
   346  0F16                     	;# 
   347  0F17                     	;# 
   348  0F18                     	;# 
   349  0F19                     	;# 
   350  0F1A                     	;# 
   351  0F1B                     	;# 
   352  0F1C                     	;# 
   353  0F1D                     	;# 
   354  0F1E                     	;# 
   355  0F1F                     	;# 
   356  0F20                     	;# 
   357  0F21                     	;# 
   358  0F22                     	;# 
   359  0F23                     	;# 
   360  0F24                     	;# 
   361  0F25                     	;# 
   362  0F26                     	;# 
   363  0F27                     	;# 
   364  0F28                     	;# 
   365  0F29                     	;# 
   366  0F2A                     	;# 
   367  0F2B                     	;# 
   368  0F2C                     	;# 
   369  0F2D                     	;# 
   370  0F2E                     	;# 
   371  0F2F                     	;# 
   372  0F8C                     	;# 
   373  0F8D                     	;# 
   374  0F91                     	;# 
   375  0F95                     	;# 
   376  0F96                     	;# 
   377  0F97                     	;# 
   378  0F9C                     	;# 
   379  0F9D                     	;# 
   380  0F9E                     	;# 
   381  0FE3                     	;# 
   382  0FE4                     	;# 
   383  0FE5                     	;# 
   384  0FE6                     	;# 
   385  0FE7                     	;# 
   386  0FE8                     	;# 
   387  0FE9                     	;# 
   388  0FEA                     	;# 
   389  0FEB                     	;# 
   390  0FED                     	;# 
   391  0FEE                     	;# 
   392  0FEF                     	;# 
   393  000B                     _INTCONbits	set	11
   394  0011                     _PIR1bits	set	17
   395  0095                     _OPTION_REGbits	set	149
   396  0099                     _OSCCONbits	set	153
   397  0091                     _PIE1bits	set	145
   398  008C                     _TRISA	set	140
   399  008C                     _TRISAbits	set	140
   400  008D                     _TRISB	set	141
   401  008D                     _TRISBbits	set	141
   402  008E                     _TRISCbits	set	142
   403  010E                     _LATCbits	set	270
   404  018C                     _ANSELA	set	396
   405  018D                     _ANSELB	set	397
   406  018E                     _ANSELC	set	398
   407  019D                     _RCSTAbits	set	413
   408  019C                     _SPBRGH	set	412
   409  019B                     _SPBRGL	set	411
   410  019A                     _TXREG	set	410
   411  019E                     _TXSTAbits	set	414
   412  0212                     _SSP1ADD	set	530
   413  0211                     _SSP1BUF	set	529
   414  0216                     _SSP1CON2bits	set	534
   415  0214                     _SSP1STAT	set	532
   416  0214                     _SSP1STATbits	set	532
   417  0212                     _SSPADD	set	530
   418  0211                     _SSPBUF	set	529
   419  0215                     _SSPCON	set	533
   420  0216                     _SSPCON2	set	534
   421  0216                     _SSPCON2bits	set	534
   422  0215                     _SSPCONbits	set	533
   423  0214                     _SSPSTAT	set	532
   424  0214                     _SSPSTATbits	set	532
   425  10B5                     _ACKDT	set	4277
   426  10B4                     _ACKEN	set	4276
   427  10A0                     _BF	set	4256
   428  10B2                     _PEN	set	4274
   429  10B3                     _RCEN	set	4275
   430  10B1                     _RSEN	set	4273
   431                           
   432                           ; #config settings
   433  0000                     
   434                           	psect	cinit
   435  07F2                     start_initialization:	
   436  07F2                     __initialization:	
   437                           
   438                           ; Clear objects allocated to COMMON
   439  07F2  01F0               	clrf	__pbssCOMMON& (0+127)
   440  07F3  01F1               	clrf	(__pbssCOMMON+1)& (0+127)
   441  07F4  01F2               	clrf	(__pbssCOMMON+2)& (0+127)
   442  07F5  01F3               	clrf	(__pbssCOMMON+3)& (0+127)
   443  07F6  01F4               	clrf	(__pbssCOMMON+4)& (0+127)
   444  07F7  01F5               	clrf	(__pbssCOMMON+5)& (0+127)
   445  07F8  01F6               	clrf	(__pbssCOMMON+6)& (0+127)
   446                           
   447                           ; Clear objects allocated to BANK0
   448  07F9  01A0               	clrf	__pbssBANK0& (0+127)
   449  07FA  01A1               	clrf	(__pbssBANK0+1)& (0+127)
   450  07FB  01A2               	clrf	(__pbssBANK0+2)& (0+127)
   451  07FC  01A3               	clrf	(__pbssBANK0+3)& (0+127)
   452  07FD                     end_of_initialization:	
   453                           ;End of C runtime variable initialization code
   454                           
   455  07FD                     __end_of__initialization:	
   456  07FD  0020               	movlb	0
   457  07FE  3187  2F2B         	ljmp	_main	;jump to C main() function
   458                           
   459                           	psect	bssCOMMON
   460  0070                     __pbssCOMMON:	
   461  0070                     _byte:	
   462  0070                     	ds	1
   463  0071                     _kirk:	
   464  0071                     	ds	1
   465  0072                     _kirk2:	
   466  0072                     	ds	1
   467  0073                     _tb1:	
   468  0073                     	ds	1
   469  0074                     _tb2:	
   470  0074                     	ds	1
   471  0075                     _tempbyte1:	
   472  0075                     	ds	1
   473  0076                     _tempbyte2:	
   474  0076                     	ds	1
   475                           
   476                           	psect	bssBANK0
   477  0020                     __pbssBANK0:	
   478  0020                     _ACK_bit:	
   479  0020                     	ds	2
   480  0022                     _i:	
   481  0022                     	ds	2
   482                           
   483                           	psect	cstackCOMMON
   484  0077                     __pcstackCOMMON:	
   485  0077                     ?_init_io:	
   486  0077                     ??_init_io:	
   487                           ; 0 bytes @ 0x0
   488                           
   489  0077                     ?_uart_xmit:	
   490                           ; 0 bytes @ 0x0
   491                           
   492  0077                     ?_serial_init:	
   493                           ; 0 bytes @ 0x0
   494                           
   495  0077                     ?_I2C_ACK:	
   496                           ; 0 bytes @ 0x0
   497                           
   498  0077                     ??_I2C_ACK:	
   499                           ; 0 bytes @ 0x0
   500                           
   501  0077                     ?_Send_I2C_Data:	
   502                           ; 0 bytes @ 0x0
   503                           
   504  0077                     ??_RX_I2C_Data:	
   505                           ; 0 bytes @ 0x0
   506                           
   507  0077                     ?_I2C_Control_Write:	
   508                           ; 0 bytes @ 0x0
   509                           
   510  0077                     ??_I2C_Control_Write:	
   511                           ; 0 bytes @ 0x0
   512                           
   513  0077                     ?_I2C_Control_Read:	
   514                           ; 0 bytes @ 0x0
   515                           
   516  0077                     ??_I2C_Control_Read:	
   517                           ; 0 bytes @ 0x0
   518                           
   519  0077                     ?_I2C_Start_Bit:	
   520                           ; 0 bytes @ 0x0
   521                           
   522  0077                     ??_I2C_Start_Bit:	
   523                           ; 0 bytes @ 0x0
   524                           
   525  0077                     ?_I2C_check_idle:	
   526                           ; 0 bytes @ 0x0
   527                           
   528  0077                     ??_I2C_check_idle:	
   529                           ; 0 bytes @ 0x0
   530                           
   531  0077                     ?_I2C_restart:	
   532                           ; 0 bytes @ 0x0
   533                           
   534  0077                     ?_I2C_Stop_Bit:	
   535                           ; 0 bytes @ 0x0
   536                           
   537  0077                     ??_I2C_Stop_Bit:	
   538                           ; 0 bytes @ 0x0
   539                           
   540  0077                     ?_I2C_NAK:	
   541                           ; 0 bytes @ 0x0
   542                           
   543  0077                     ??_I2C_NAK:	
   544                           ; 0 bytes @ 0x0
   545                           
   546  0077                     ?_RX_I2C_Data:	
   547                           ; 0 bytes @ 0x0
   548                           
   549  0077                     ?_main:	
   550                           ; 1 bytes @ 0x0
   551                           
   552  0077                     uart_xmit@mydata_byte:	
   553                           ; 2 bytes @ 0x0
   554                           
   555  0077                     Send_I2C_Data@databyte:	
   556                           ; 2 bytes @ 0x0
   557                           
   558                           
   559                           ; 2 bytes @ 0x0
   560  0077                     	ds	1
   561  0078                     I2C_check_idle@byte1:	
   562                           
   563                           ; 1 bytes @ 0x1
   564  0078                     	ds	1
   565  0079                     ??_uart_xmit:	
   566  0079                     ??_serial_init:	
   567                           ; 0 bytes @ 0x2
   568                           
   569  0079                     ??_Send_I2C_Data:	
   570                           ; 0 bytes @ 0x2
   571                           
   572  0079                     I2C_check_idle@byte2:	
   573                           ; 0 bytes @ 0x2
   574                           
   575                           
   576                           ; 1 bytes @ 0x2
   577  0079                     	ds	1
   578  007A                     ??_I2C_restart:	
   579                           
   580                           ; 0 bytes @ 0x3
   581  007A                     	ds	1
   582  007B                     ??_main:	
   583                           
   584                           ; 0 bytes @ 0x4
   585  007B                     	ds	3
   586                           
   587                           	psect	maintext
   588  072B                     __pmaintext:	
   589 ;;
   590 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   591 ;;
   592 ;; *************** function _main *****************
   593 ;; Defined at:
   594 ;;		line 239 in file "main.c"
   595 ;; Parameters:    Size  Location     Type
   596 ;;		None
   597 ;; Auto vars:     Size  Location     Type
   598 ;;		None
   599 ;; Return value:  Size  Location     Type
   600 ;;                  2  154[None  ] int 
   601 ;; Registers used:
   602 ;;		wreg, status,2, status,0, pclath, cstack
   603 ;; Tracked objects:
   604 ;;		On entry : B1F/0
   605 ;;		On exit  : 0/0
   606 ;;		Unchanged: 0/0
   607 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   608 ;;      Params:         0       0       0       0
   609 ;;      Locals:         0       0       0       0
   610 ;;      Temps:          3       0       0       0
   611 ;;      Totals:         3       0       0       0
   612 ;;Total ram usage:        3 bytes
   613 ;; Hardware stack levels required when called:    2
   614 ;; This function calls:
   615 ;;		_I2C_ACK
   616 ;;		_I2C_Control_Read
   617 ;;		_I2C_Control_Write
   618 ;;		_I2C_NAK
   619 ;;		_I2C_Start_Bit
   620 ;;		_I2C_Stop_Bit
   621 ;;		_I2C_restart
   622 ;;		_RX_I2C_Data
   623 ;;		_Send_I2C_Data
   624 ;;		_init_io
   625 ;;		_serial_init
   626 ;;		_uart_xmit
   627 ;; This function is called by:
   628 ;;		Startup code after reset
   629 ;; This function uses a non-reentrant model
   630 ;;
   631                           
   632                           
   633                           ;psect for function _main
   634  072B                     _main:	
   635                           
   636                           ;main.c: 241: OSCCONbits.IRCF = 0x0d;
   637                           
   638                           ;incstack = 0
   639                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   640  072B  0021               	movlb	1	; select bank1
   641  072C  0819               	movf	25,w	;volatile
   642  072D  3987               	andlw	-121
   643  072E  3868               	iorlw	104
   644  072F  0099               	movwf	25	;volatile
   645                           
   646                           ;main.c: 242: OSCCONbits.SCS = 0x02;
   647  0730  0819               	movf	25,w	;volatile
   648  0731  39FC               	andlw	-4
   649  0732  3802               	iorlw	2
   650  0733  0099               	movwf	25	;volatile
   651                           
   652                           ;main.c: 243: OPTION_REGbits.nWPUEN = 0;
   653  0734  1395               	bcf	21,7	;volatile
   654                           
   655                           ;main.c: 245: init_io();
   656  0735  3186  26E1  3187   	fcall	_init_io
   657                           
   658                           ;main.c: 246: serial_init();
   659  0738  3186  26FD  3187   	fcall	_serial_init
   660                           
   661                           ;main.c: 248: SSPCONbits.SSPM=0x08;
   662  073B  0024               	movlb	4	; select bank4
   663  073C  0815               	movf	21,w	;volatile
   664  073D  39F0               	andlw	-16
   665  073E  3808               	iorlw	8
   666  073F  0095               	movwf	21	;volatile
   667                           
   668                           ;main.c: 249: SSPCONbits.SSPEN=1;
   669  0740  1695               	bsf	21,5	;volatile
   670                           
   671                           ;main.c: 250: SSPADD = 0x09;
   672  0741  3009               	movlw	9
   673  0742  0092               	movwf	18	;volatile
   674                           
   675                           ;main.c: 251: SSP1ADD = 0x09;
   676  0743  3009               	movlw	9
   677  0744  0092               	movwf	18	;volatile
   678                           
   679                           ;main.c: 254: _delay((unsigned long)((50)*(4000000/4000.0)));
   680  0745  3041               	movlw	65
   681  0746  00FC               	movwf	??_main+1
   682  0747  30EE               	movlw	238
   683  0748  00FB               	movwf	??_main
   684  0749                     u317:	
   685  0749  0BFB               	decfsz	??_main,f
   686  074A  2F49               	goto	u317
   687  074B  0BFC               	decfsz	??_main+1,f
   688  074C  2F49               	goto	u317
   689  074D  0000               	nop
   690                           
   691                           ;main.c: 256: I2C_Start_Bit();
   692  074E  3186  26A2  3187   	fcall	_I2C_Start_Bit
   693                           
   694                           ;main.c: 257: I2C_Control_Write();
   695  0751  3186  26C1  3187   	fcall	_I2C_Control_Write
   696                           
   697                           ;main.c: 259: if (!SSP1CON2bits.ACKSTAT)
   698  0754  0024               	movlb	4	; select bank4
   699  0755  1B16               	btfsc	22,6	;volatile
   700  0756  2F59               	goto	l934
   701                           
   702                           ;main.c: 260: LATCbits.LATC1 = 0;
   703  0757  0022               	movlb	2	; select bank2
   704  0758  108E               	bcf	14,1	;volatile
   705  0759                     l934:	
   706                           
   707                           ;main.c: 262: Send_I2C_Data(0x2C);
   708  0759  302C               	movlw	44
   709  075A  00F7               	movwf	Send_I2C_Data@databyte
   710  075B  3000               	movlw	0
   711  075C  00F8               	movwf	Send_I2C_Data@databyte+1
   712  075D  3186  2673  3187   	fcall	_Send_I2C_Data
   713                           
   714                           ;main.c: 263: Send_I2C_Data(0x06);
   715  0760  3006               	movlw	6
   716  0761  00F7               	movwf	Send_I2C_Data@databyte
   717  0762  3000               	movlw	0
   718  0763  00F8               	movwf	Send_I2C_Data@databyte+1
   719  0764  3186  2673  3187   	fcall	_Send_I2C_Data
   720                           
   721                           ;main.c: 264: I2C_Stop_Bit();
   722  0767  3186  2687  3187   	fcall	_I2C_Stop_Bit
   723                           
   724                           ;main.c: 266: _delay((unsigned long)((15)*(4000000/4000.0)));
   725  076A  3014               	movlw	20
   726  076B  00FC               	movwf	??_main+1
   727  076C  3079               	movlw	121
   728  076D  00FB               	movwf	??_main
   729  076E                     u327:	
   730  076E  0BFB               	decfsz	??_main,f
   731  076F  2F6E               	goto	u327
   732  0770  0BFC               	decfsz	??_main+1,f
   733  0771  2F6E               	goto	u327
   734  0772  3200               	nop2
   735                           
   736                           ;main.c: 274: I2C_restart();
   737  0773  3186  2662  3187   	fcall	_I2C_restart
   738                           
   739                           ;main.c: 275: I2C_Control_Read();
   740  0776  3186  26B1  3187   	fcall	_I2C_Control_Read
   741                           
   742                           ;main.c: 276: RX_I2C_Data();
   743  0779  3186  267C  3187   	fcall	_RX_I2C_Data
   744                           
   745                           ;main.c: 277: tempbyte1=byte;
   746  077C  0870               	movf	_byte,w
   747  077D  00FB               	movwf	??_main
   748  077E  087B               	movf	??_main,w
   749  077F  00F5               	movwf	_tempbyte1
   750                           
   751                           ;main.c: 278: I2C_ACK();
   752  0780  3186  266A  3187   	fcall	_I2C_ACK
   753                           
   754                           ;main.c: 279: RX_I2C_Data();
   755  0783  3186  267C  3187   	fcall	_RX_I2C_Data
   756                           
   757                           ;main.c: 280: tempbyte2=byte;
   758  0786  0870               	movf	_byte,w
   759  0787  00FB               	movwf	??_main
   760  0788  087B               	movf	??_main,w
   761  0789  00F6               	movwf	_tempbyte2
   762                           
   763                           ;main.c: 282: I2C_ACK();
   764  078A  3186  266A  3187   	fcall	_I2C_ACK
   765                           
   766                           ;main.c: 283: RX_I2C_Data();
   767  078D  3186  267C  3187   	fcall	_RX_I2C_Data
   768                           
   769                           ;main.c: 284: kirk=byte;
   770  0790  0870               	movf	_byte,w
   771  0791  00FB               	movwf	??_main
   772  0792  087B               	movf	??_main,w
   773  0793  00F1               	movwf	_kirk
   774                           
   775                           ;main.c: 286: I2C_ACK();
   776  0794  3186  266A  3187   	fcall	_I2C_ACK
   777                           
   778                           ;main.c: 287: RX_I2C_Data();
   779  0797  3186  267C  3187   	fcall	_RX_I2C_Data
   780                           
   781                           ;main.c: 288: tb1=byte;
   782  079A  0870               	movf	_byte,w
   783  079B  00FB               	movwf	??_main
   784  079C  087B               	movf	??_main,w
   785  079D  00F3               	movwf	_tb1
   786                           
   787                           ;main.c: 290: I2C_ACK();
   788  079E  3186  266A  3187   	fcall	_I2C_ACK
   789                           
   790                           ;main.c: 291: RX_I2C_Data();
   791  07A1  3186  267C  3187   	fcall	_RX_I2C_Data
   792                           
   793                           ;main.c: 292: tb2=byte;
   794  07A4  0870               	movf	_byte,w
   795  07A5  00FB               	movwf	??_main
   796  07A6  087B               	movf	??_main,w
   797  07A7  00F4               	movwf	_tb2
   798                           
   799                           ;main.c: 294: I2C_ACK();
   800  07A8  3186  266A  3187   	fcall	_I2C_ACK
   801                           
   802                           ;main.c: 295: RX_I2C_Data();
   803  07AB  3186  267C  3187   	fcall	_RX_I2C_Data
   804                           
   805                           ;main.c: 296: kirk2=byte;
   806  07AE  0870               	movf	_byte,w
   807  07AF  00FB               	movwf	??_main
   808  07B0  087B               	movf	??_main,w
   809  07B1  00F2               	movwf	_kirk2
   810                           
   811                           ;main.c: 300: I2C_NAK();
   812  07B2  3186  2694  3187   	fcall	_I2C_NAK
   813                           
   814                           ;main.c: 303: I2C_Stop_Bit();
   815  07B5  3186  2687  3187   	fcall	_I2C_Stop_Bit
   816                           
   817                           ;main.c: 308: uart_xmit(tempbyte1);
   818  07B8  0875               	movf	_tempbyte1,w
   819  07B9  00FB               	movwf	??_main
   820  07BA  01FC               	clrf	??_main+1
   821  07BB  087B               	movf	??_main,w
   822  07BC  00F7               	movwf	uart_xmit@mydata_byte
   823  07BD  087C               	movf	??_main+1,w
   824  07BE  00F8               	movwf	uart_xmit@mydata_byte+1
   825  07BF  3186  265C  3187   	fcall	_uart_xmit
   826                           
   827                           ;main.c: 309: uart_xmit(tempbyte2);
   828  07C2  0876               	movf	_tempbyte2,w
   829  07C3  00FB               	movwf	??_main
   830  07C4  01FC               	clrf	??_main+1
   831  07C5  087B               	movf	??_main,w
   832  07C6  00F7               	movwf	uart_xmit@mydata_byte
   833  07C7  087C               	movf	??_main+1,w
   834  07C8  00F8               	movwf	uart_xmit@mydata_byte+1
   835  07C9  3186  265C  3187   	fcall	_uart_xmit
   836                           
   837                           ;main.c: 311: _delay((unsigned long)((1)*(4000000/4000.0)));
   838  07CC  30F9               	movlw	249
   839  07CD  00FB               	movwf	??_main
   840  07CE                     u337:	
   841  07CE  0000               	nop
   842  07CF  0BFB               	decfsz	??_main,f
   843  07D0  2FCE               	goto	u337
   844  07D1  3200               	nop2	;nop
   845  07D2  0000               	nop
   846  07D3                     l970:	
   847                           ;main.c: 313: while (1) {
   848                           
   849                           
   850                           ;main.c: 314: _delay((unsigned long)((500)*(4000000/4000.0)));
   851  07D3  3003               	movlw	3
   852  07D4  00FD               	movwf	??_main+2
   853  07D5  308A               	movlw	138
   854  07D6  00FC               	movwf	??_main+1
   855  07D7  3056               	movlw	86
   856  07D8  00FB               	movwf	??_main
   857  07D9                     u347:	
   858  07D9  0BFB               	decfsz	??_main,f
   859  07DA  2FD9               	goto	u347
   860  07DB  0BFC               	decfsz	??_main+1,f
   861  07DC  2FD9               	goto	u347
   862  07DD  0BFD               	decfsz	??_main+2,f
   863  07DE  2FD9               	goto	u347
   864  07DF  3200               	nop2
   865                           
   866                           ;main.c: 315: LATCbits.LATC0 = 1;
   867  07E0  0022               	movlb	2	; select bank2
   868  07E1  140E               	bsf	14,0	;volatile
   869                           
   870                           ;main.c: 316: _delay((unsigned long)((500)*(4000000/4000.0)));
   871  07E2  3003               	movlw	3
   872  07E3  00FD               	movwf	??_main+2
   873  07E4  308A               	movlw	138
   874  07E5  00FC               	movwf	??_main+1
   875  07E6  3056               	movlw	86
   876  07E7  00FB               	movwf	??_main
   877  07E8                     u357:	
   878  07E8  0BFB               	decfsz	??_main,f
   879  07E9  2FE8               	goto	u357
   880  07EA  0BFC               	decfsz	??_main+1,f
   881  07EB  2FE8               	goto	u357
   882  07EC  0BFD               	decfsz	??_main+2,f
   883  07ED  2FE8               	goto	u357
   884  07EE  3200               	nop2
   885                           
   886                           ;main.c: 317: LATCbits.LATC0 = 0;
   887  07EF  0022               	movlb	2	; select bank2
   888  07F0  100E               	bcf	14,0	;volatile
   889  07F1  2FD3               	goto	l970
   890  07F2                     __end_of_main:	
   891                           ;main.c: 318: }
   892                           ;main.c: 319: return;
   893                           
   894                           
   895                           	psect	text1
   896  06FD                     __ptext1:	
   897 ;; *************** function _serial_init *****************
   898 ;; Defined at:
   899 ;;		line 102 in file "main.c"
   900 ;; Parameters:    Size  Location     Type
   901 ;;		None
   902 ;; Auto vars:     Size  Location     Type
   903 ;;		None
   904 ;; Return value:  Size  Location     Type
   905 ;;		None               void
   906 ;; Registers used:
   907 ;;		wreg, status,2, status,0, pclath, cstack
   908 ;; Tracked objects:
   909 ;;		On entry : 0/0
   910 ;;		On exit  : 0/0
   911 ;;		Unchanged: 0/0
   912 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   913 ;;      Params:         0       0       0       0
   914 ;;      Locals:         0       0       0       0
   915 ;;      Temps:          2       0       0       0
   916 ;;      Totals:         2       0       0       0
   917 ;;Total ram usage:        2 bytes
   918 ;; Hardware stack levels used:    1
   919 ;; Hardware stack levels required when called:    1
   920 ;; This function calls:
   921 ;;		_uart_xmit
   922 ;; This function is called by:
   923 ;;		_main
   924 ;; This function uses a non-reentrant model
   925 ;;
   926                           
   927                           
   928                           ;psect for function _serial_init
   929  06FD                     _serial_init:	
   930                           
   931                           ;main.c: 110: TXSTAbits.BRGH=1;
   932                           
   933                           ;incstack = 0
   934                           ; Regs used in _serial_init: [wreg+status,2+status,0+pclath+cstack]
   935  06FD  0023               	movlb	3	; select bank3
   936  06FE  151E               	bsf	30,2	;volatile
   937                           
   938                           ;main.c: 111: TXSTAbits.TX9=0;
   939  06FF  131E               	bcf	30,6	;volatile
   940                           
   941                           ;main.c: 112: TXSTAbits.TXEN = 1;
   942  0700  169E               	bsf	30,5	;volatile
   943                           
   944                           ;main.c: 114: RCSTAbits.SPEN=1;
   945  0701  179D               	bsf	29,7	;volatile
   946                           
   947                           ;main.c: 115: RCSTAbits.RX9=0;
   948  0702  131D               	bcf	29,6	;volatile
   949                           
   950                           ;main.c: 116: RCSTAbits.CREN=1;
   951  0703  161D               	bsf	29,4	;volatile
   952                           
   953                           ;main.c: 118: SPBRGL=25;
   954  0704  3019               	movlw	25
   955  0705  009B               	movwf	27	;volatile
   956                           
   957                           ;main.c: 119: SPBRGH=0;
   958  0706  019C               	clrf	28	;volatile
   959                           
   960                           ;main.c: 121: PIR1bits.RCIF=0;
   961  0707  0020               	movlb	0	; select bank0
   962  0708  1291               	bcf	17,5	;volatile
   963                           
   964                           ;main.c: 122: PIE1bits.RCIE=1;
   965  0709  0021               	movlb	1	; select bank1
   966  070A  1691               	bsf	17,5	;volatile
   967                           
   968                           ;main.c: 123: INTCONbits.PEIE = 1;
   969  070B  170B               	bsf	11,6	;volatile
   970                           
   971                           ;main.c: 124: INTCONbits.GIE = 1;
   972  070C  178B               	bsf	11,7	;volatile
   973                           
   974                           ;main.c: 126: _delay((unsigned long)((50)*(4000000/4000.0)));
   975  070D  3041               	movlw	65
   976  070E  00FA               	movwf	??_serial_init+1
   977  070F  30EE               	movlw	238
   978  0710  00F9               	movwf	??_serial_init
   979  0711                     u367:	
   980  0711  0BF9               	decfsz	??_serial_init,f
   981  0712  2F11               	goto	u367
   982  0713  0BFA               	decfsz	??_serial_init+1,f
   983  0714  2F11               	goto	u367
   984  0715  0000               	nop
   985                           
   986                           ;main.c: 128: uart_xmit('R');
   987  0716  3052               	movlw	82
   988  0717  00F7               	movwf	uart_xmit@mydata_byte
   989  0718  3000               	movlw	0
   990  0719  00F8               	movwf	uart_xmit@mydata_byte+1
   991  071A  3186  265C  3186   	fcall	_uart_xmit
   992                           
   993                           ;main.c: 129: uart_xmit('S');
   994  071D  3053               	movlw	83
   995  071E  00F7               	movwf	uart_xmit@mydata_byte
   996  071F  3000               	movlw	0
   997  0720  00F8               	movwf	uart_xmit@mydata_byte+1
   998  0721  3186  265C  3186   	fcall	_uart_xmit
   999                           
  1000                           ;main.c: 130: uart_xmit('T');
  1001  0724  3054               	movlw	84
  1002  0725  00F7               	movwf	uart_xmit@mydata_byte
  1003  0726  3000               	movlw	0
  1004  0727  00F8               	movwf	uart_xmit@mydata_byte+1
  1005  0728  3186  265C         	fcall	_uart_xmit
  1006  072A  0008               	return
  1007  072B                     __end_of_serial_init:	
  1008                           
  1009                           	psect	text2
  1010  065C                     __ptext2:	
  1011 ;; *************** function _uart_xmit *****************
  1012 ;; Defined at:
  1013 ;;		line 97 in file "main.c"
  1014 ;; Parameters:    Size  Location     Type
  1015 ;;  mydata_byte     2    0[COMMON] unsigned int 
  1016 ;; Auto vars:     Size  Location     Type
  1017 ;;		None
  1018 ;; Return value:  Size  Location     Type
  1019 ;;		None               void
  1020 ;; Registers used:
  1021 ;;		wreg
  1022 ;; Tracked objects:
  1023 ;;		On entry : 0/0
  1024 ;;		On exit  : 0/0
  1025 ;;		Unchanged: 0/0
  1026 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1027 ;;      Params:         2       0       0       0
  1028 ;;      Locals:         0       0       0       0
  1029 ;;      Temps:          0       0       0       0
  1030 ;;      Totals:         2       0       0       0
  1031 ;;Total ram usage:        2 bytes
  1032 ;; Hardware stack levels used:    1
  1033 ;; This function calls:
  1034 ;;		Nothing
  1035 ;; This function is called by:
  1036 ;;		_serial_init
  1037 ;;		_main
  1038 ;; This function uses a non-reentrant model
  1039 ;;
  1040                           
  1041                           
  1042                           ;psect for function _uart_xmit
  1043  065C                     _uart_xmit:	
  1044  065C                     l84:	
  1045                           ;main.c: 99: while(!TXSTAbits.TRMT);
  1046                           
  1047                           ;incstack = 0
  1048                           ; Regs used in _uart_xmit: [wreg]
  1049                           
  1050  065C  0023               	movlb	3	; select bank3
  1051  065D  1C9E               	btfss	30,1	;volatile
  1052  065E  2E5C               	goto	l84
  1053                           
  1054                           ;main.c: 100: TXREG = mydata_byte;
  1055  065F  0877               	movf	uart_xmit@mydata_byte,w
  1056  0660  009A               	movwf	26	;volatile
  1057  0661  0008               	return
  1058  0662                     __end_of_uart_xmit:	
  1059                           
  1060                           	psect	text3
  1061  06E1                     __ptext3:	
  1062 ;; *************** function _init_io *****************
  1063 ;; Defined at:
  1064 ;;		line 65 in file "main.c"
  1065 ;; Parameters:    Size  Location     Type
  1066 ;;		None
  1067 ;; Auto vars:     Size  Location     Type
  1068 ;;		None
  1069 ;; Return value:  Size  Location     Type
  1070 ;;		None               void
  1071 ;; Registers used:
  1072 ;;		status,2
  1073 ;; Tracked objects:
  1074 ;;		On entry : 0/0
  1075 ;;		On exit  : 0/0
  1076 ;;		Unchanged: 0/0
  1077 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1078 ;;      Params:         0       0       0       0
  1079 ;;      Locals:         0       0       0       0
  1080 ;;      Temps:          0       0       0       0
  1081 ;;      Totals:         0       0       0       0
  1082 ;;Total ram usage:        0 bytes
  1083 ;; Hardware stack levels used:    1
  1084 ;; This function calls:
  1085 ;;		Nothing
  1086 ;; This function is called by:
  1087 ;;		_main
  1088 ;; This function uses a non-reentrant model
  1089 ;;
  1090                           
  1091                           
  1092                           ;psect for function _init_io
  1093  06E1                     _init_io:	
  1094                           
  1095                           ;main.c: 67: ANSELA = 0x00;
  1096                           
  1097                           ;incstack = 0
  1098                           ; Regs used in _init_io: [status,2]
  1099  06E1  0023               	movlb	3	; select bank3
  1100  06E2  018C               	clrf	12	;volatile
  1101                           
  1102                           ;main.c: 68: ANSELB = 0x00;
  1103  06E3  018D               	clrf	13	;volatile
  1104                           
  1105                           ;main.c: 69: ANSELC = 0x00;
  1106  06E4  018E               	clrf	14	;volatile
  1107                           
  1108                           ;main.c: 71: TRISAbits.TRISA0 = 1;
  1109  06E5  0021               	movlb	1	; select bank1
  1110  06E6  140C               	bsf	12,0	;volatile
  1111                           
  1112                           ;main.c: 72: TRISAbits.TRISA1 = 1;
  1113  06E7  148C               	bsf	12,1	;volatile
  1114                           
  1115                           ;main.c: 73: TRISAbits.TRISA2 = 1;
  1116  06E8  150C               	bsf	12,2	;volatile
  1117                           
  1118                           ;main.c: 74: TRISAbits.TRISA3 = 1;
  1119  06E9  158C               	bsf	12,3	;volatile
  1120                           
  1121                           ;main.c: 75: TRISAbits.TRISA4 = 1;
  1122  06EA  160C               	bsf	12,4	;volatile
  1123                           
  1124                           ;main.c: 76: TRISAbits.TRISA5 = 1;
  1125  06EB  168C               	bsf	12,5	;volatile
  1126                           
  1127                           ;main.c: 78: TRISBbits.TRISB4 = 1;
  1128  06EC  160D               	bsf	13,4	;volatile
  1129                           
  1130                           ;main.c: 79: TRISBbits.TRISB5 = 1;
  1131  06ED  168D               	bsf	13,5	;volatile
  1132                           
  1133                           ;main.c: 80: TRISBbits.TRISB6 = 1;
  1134  06EE  170D               	bsf	13,6	;volatile
  1135                           
  1136                           ;main.c: 81: TRISBbits.TRISB7 = 0;
  1137  06EF  138D               	bcf	13,7	;volatile
  1138                           
  1139                           ;main.c: 83: TRISCbits.TRISC0 = 0;
  1140  06F0  100E               	bcf	14,0	;volatile
  1141                           
  1142                           ;main.c: 84: TRISCbits.TRISC1 = 0;
  1143  06F1  108E               	bcf	14,1	;volatile
  1144                           
  1145                           ;main.c: 85: TRISCbits.TRISC2 = 0;
  1146  06F2  110E               	bcf	14,2	;volatile
  1147                           
  1148                           ;main.c: 86: TRISCbits.TRISC3 = 0;
  1149  06F3  118E               	bcf	14,3	;volatile
  1150                           
  1151                           ;main.c: 87: TRISCbits.TRISC4 = 0;
  1152  06F4  120E               	bcf	14,4	;volatile
  1153                           
  1154                           ;main.c: 88: TRISCbits.TRISC5 = 0;
  1155  06F5  128E               	bcf	14,5	;volatile
  1156                           
  1157                           ;main.c: 89: TRISCbits.TRISC6 = 0;
  1158  06F6  130E               	bcf	14,6	;volatile
  1159                           
  1160                           ;main.c: 90: TRISCbits.TRISC7 = 0;
  1161  06F7  138E               	bcf	14,7	;volatile
  1162                           
  1163                           ;main.c: 92: LATCbits.LATC0 = 1;
  1164  06F8  0022               	movlb	2	; select bank2
  1165  06F9  140E               	bsf	14,0	;volatile
  1166                           
  1167                           ;main.c: 93: LATCbits.LATC1 = 0;
  1168  06FA  108E               	bcf	14,1	;volatile
  1169                           
  1170                           ;main.c: 94: LATCbits.LATC2 = 0;
  1171  06FB  110E               	bcf	14,2	;volatile
  1172  06FC  0008               	return
  1173  06FD                     __end_of_init_io:	
  1174                           
  1175                           	psect	text4
  1176  0673                     __ptext4:	
  1177 ;; *************** function _Send_I2C_Data *****************
  1178 ;; Defined at:
  1179 ;;		line 142 in file "main.c"
  1180 ;; Parameters:    Size  Location     Type
  1181 ;;  databyte        2    0[COMMON] unsigned int 
  1182 ;; Auto vars:     Size  Location     Type
  1183 ;;		None
  1184 ;; Return value:  Size  Location     Type
  1185 ;;		None               void
  1186 ;; Registers used:
  1187 ;;		wreg
  1188 ;; Tracked objects:
  1189 ;;		On entry : 0/0
  1190 ;;		On exit  : 0/0
  1191 ;;		Unchanged: 0/0
  1192 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1193 ;;      Params:         2       0       0       0
  1194 ;;      Locals:         0       0       0       0
  1195 ;;      Temps:          0       0       0       0
  1196 ;;      Totals:         2       0       0       0
  1197 ;;Total ram usage:        2 bytes
  1198 ;; Hardware stack levels used:    1
  1199 ;; This function calls:
  1200 ;;		Nothing
  1201 ;; This function is called by:
  1202 ;;		_main
  1203 ;; This function uses a non-reentrant model
  1204 ;;
  1205                           
  1206                           
  1207                           ;psect for function _Send_I2C_Data
  1208  0673                     _Send_I2C_Data:	
  1209                           
  1210                           ;main.c: 144: PIR1bits.SSP1IF=0;
  1211                           
  1212                           ;incstack = 0
  1213                           ; Regs used in _Send_I2C_Data: [wreg]
  1214  0673  0020               	movlb	0	; select bank0
  1215  0674  1191               	bcf	17,3	;volatile
  1216                           
  1217                           ;main.c: 145: SSPBUF = databyte;
  1218  0675  0877               	movf	Send_I2C_Data@databyte,w
  1219  0676  0024               	movlb	4	; select bank4
  1220  0677  0091               	movwf	17	;volatile
  1221  0678                     l99:	
  1222                           ;main.c: 146: while(!PIR1bits.SSP1IF);
  1223                           
  1224  0678  0020               	movlb	0	; select bank0
  1225  0679  1991               	btfsc	17,3	;volatile
  1226  067A  0008               	return
  1227  067B  2E78               	goto	l99
  1228  067C                     __end_of_Send_I2C_Data:	
  1229                           
  1230                           	psect	text5
  1231  067C                     __ptext5:	
  1232 ;; *************** function _RX_I2C_Data *****************
  1233 ;; Defined at:
  1234 ;;		line 149 in file "main.c"
  1235 ;; Parameters:    Size  Location     Type
  1236 ;;		None
  1237 ;; Auto vars:     Size  Location     Type
  1238 ;;		None
  1239 ;; Return value:  Size  Location     Type
  1240 ;;                  1    wreg      unsigned char 
  1241 ;; Registers used:
  1242 ;;		wreg
  1243 ;; Tracked objects:
  1244 ;;		On entry : 0/0
  1245 ;;		On exit  : 0/0
  1246 ;;		Unchanged: 0/0
  1247 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1248 ;;      Params:         0       0       0       0
  1249 ;;      Locals:         0       0       0       0
  1250 ;;      Temps:          1       0       0       0
  1251 ;;      Totals:         1       0       0       0
  1252 ;;Total ram usage:        1 bytes
  1253 ;; Hardware stack levels used:    1
  1254 ;; This function calls:
  1255 ;;		Nothing
  1256 ;; This function is called by:
  1257 ;;		_main
  1258 ;; This function uses a non-reentrant model
  1259 ;;
  1260                           
  1261                           
  1262                           ;psect for function _RX_I2C_Data
  1263  067C                     _RX_I2C_Data:	
  1264                           
  1265                           ;main.c: 152: RCEN = 1;
  1266                           
  1267                           ;incstack = 0
  1268                           ; Regs used in _RX_I2C_Data: [wreg]
  1269  067C  0024               	movlb	4	; select bank4
  1270  067D  1596               	bsf	22,3	;volatile
  1271  067E                     l105:	
  1272                           ;main.c: 153: while( RCEN ) continue;
  1273                           
  1274  067E  1996               	btfsc	22,3	;volatile
  1275  067F  2E7E               	goto	l105
  1276  0680                     l108:	
  1277                           ;main.c: 154: while( !BF ) continue;
  1278                           
  1279  0680  1C14               	btfss	20,0	;volatile
  1280  0681  2E80               	goto	l108
  1281                           
  1282                           ;main.c: 155: byte = SSPBUF;
  1283  0682  0811               	movf	17,w	;volatile
  1284  0683  00F7               	movwf	??_RX_I2C_Data
  1285  0684  0877               	movf	??_RX_I2C_Data,w
  1286  0685  00F0               	movwf	_byte
  1287  0686  0008               	return
  1288  0687                     __end_of_RX_I2C_Data:	
  1289                           ;main.c: 156: return byte;
  1290                           ;	Return value of _RX_I2C_Data is never used
  1291                           
  1292                           
  1293                           	psect	text6
  1294  0662                     __ptext6:	
  1295 ;; *************** function _I2C_restart *****************
  1296 ;; Defined at:
  1297 ;;		line 210 in file "main.c"
  1298 ;; Parameters:    Size  Location     Type
  1299 ;;		None
  1300 ;; Auto vars:     Size  Location     Type
  1301 ;;		None
  1302 ;; Return value:  Size  Location     Type
  1303 ;;		None               void
  1304 ;; Registers used:
  1305 ;;		wreg, status,2, status,0, pclath, cstack
  1306 ;; Tracked objects:
  1307 ;;		On entry : 0/0
  1308 ;;		On exit  : 0/0
  1309 ;;		Unchanged: 0/0
  1310 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1311 ;;      Params:         0       0       0       0
  1312 ;;      Locals:         0       0       0       0
  1313 ;;      Temps:          0       0       0       0
  1314 ;;      Totals:         0       0       0       0
  1315 ;;Total ram usage:        0 bytes
  1316 ;; Hardware stack levels used:    1
  1317 ;; Hardware stack levels required when called:    1
  1318 ;; This function calls:
  1319 ;;		_I2C_check_idle
  1320 ;; This function is called by:
  1321 ;;		_main
  1322 ;; This function uses a non-reentrant model
  1323 ;;
  1324                           
  1325                           
  1326                           ;psect for function _I2C_restart
  1327  0662                     _I2C_restart:	
  1328                           
  1329                           ;main.c: 212: I2C_check_idle();
  1330                           
  1331                           ;incstack = 0
  1332                           ; Regs used in _I2C_restart: [wreg+status,2+status,0+pclath+cstack]
  1333  0662  3186  26D1  3186   	fcall	_I2C_check_idle
  1334                           
  1335                           ;main.c: 213: RSEN = 1;
  1336  0665  0024               	movlb	4	; select bank4
  1337  0666  1496               	bsf	22,1	;volatile
  1338  0667                     l137:	
  1339                           ;main.c: 214: while( RSEN ) continue;
  1340                           
  1341  0667  1C96               	btfss	22,1	;volatile
  1342  0668  0008               	return
  1343  0669  2E67               	goto	l137
  1344  066A                     __end_of_I2C_restart:	
  1345                           
  1346                           	psect	text7
  1347  06D1                     __ptext7:	
  1348 ;; *************** function _I2C_check_idle *****************
  1349 ;; Defined at:
  1350 ;;		line 196 in file "main.c"
  1351 ;; Parameters:    Size  Location     Type
  1352 ;;		None
  1353 ;; Auto vars:     Size  Location     Type
  1354 ;;  byte2           1    2[COMMON] unsigned char 
  1355 ;;  byte1           1    1[COMMON] unsigned char 
  1356 ;; Return value:  Size  Location     Type
  1357 ;;		None               void
  1358 ;; Registers used:
  1359 ;;		wreg, status,2, status,0
  1360 ;; Tracked objects:
  1361 ;;		On entry : 0/0
  1362 ;;		On exit  : 0/0
  1363 ;;		Unchanged: 0/0
  1364 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1365 ;;      Params:         0       0       0       0
  1366 ;;      Locals:         2       0       0       0
  1367 ;;      Temps:          1       0       0       0
  1368 ;;      Totals:         3       0       0       0
  1369 ;;Total ram usage:        3 bytes
  1370 ;; Hardware stack levels used:    1
  1371 ;; This function calls:
  1372 ;;		Nothing
  1373 ;; This function is called by:
  1374 ;;		_I2C_restart
  1375 ;; This function uses a non-reentrant model
  1376 ;;
  1377                           
  1378                           
  1379                           ;psect for function _I2C_check_idle
  1380  06D1                     _I2C_check_idle:	
  1381  06D1                     l132:	
  1382                           ;incstack = 0
  1383                           ; Regs used in _I2C_check_idle: [wreg+status,2+status,0]
  1384                           ;main.c: 198: unsigned char byte1;
  1385                           ;main.c: 199: unsigned char byte2;
  1386                           ;main.c: 201: do
  1387                           
  1388                           
  1389                           ;main.c: 202: {
  1390                           ;main.c: 203: byte1 = SSPSTAT & 0x04;
  1391  06D1  0024               	movlb	4	; select bank4
  1392  06D2  0814               	movf	20,w	;volatile
  1393  06D3  3904               	andlw	4
  1394  06D4  00F7               	movwf	??_I2C_check_idle
  1395  06D5  0877               	movf	??_I2C_check_idle,w
  1396  06D6  00F8               	movwf	I2C_check_idle@byte1
  1397                           
  1398                           ;main.c: 204: byte2 = SSPCON2 & 0x1F;
  1399  06D7  0816               	movf	22,w	;volatile
  1400  06D8  391F               	andlw	31
  1401  06D9  00F7               	movwf	??_I2C_check_idle
  1402  06DA  0877               	movf	??_I2C_check_idle,w
  1403  06DB  00F9               	movwf	I2C_check_idle@byte2
  1404                           
  1405                           ;main.c: 205: } while( byte1 | byte2 );
  1406  06DC  0878               	movf	I2C_check_idle@byte1,w
  1407  06DD  0479               	iorwf	I2C_check_idle@byte2,w
  1408  06DE  1903               	btfsc	3,2
  1409  06DF  0008               	return
  1410  06E0  2ED1               	goto	l132
  1411  06E1                     __end_of_I2C_check_idle:	
  1412                           
  1413                           	psect	text8
  1414  0687                     __ptext8:	
  1415 ;; *************** function _I2C_Stop_Bit *****************
  1416 ;; Defined at:
  1417 ;;		line 217 in file "main.c"
  1418 ;; Parameters:    Size  Location     Type
  1419 ;;		None
  1420 ;; Auto vars:     Size  Location     Type
  1421 ;;		None
  1422 ;; Return value:  Size  Location     Type
  1423 ;;		None               void
  1424 ;; Registers used:
  1425 ;;		wreg
  1426 ;; Tracked objects:
  1427 ;;		On entry : 0/0
  1428 ;;		On exit  : 0/0
  1429 ;;		Unchanged: 0/0
  1430 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1431 ;;      Params:         0       0       0       0
  1432 ;;      Locals:         0       0       0       0
  1433 ;;      Temps:          0       0       0       0
  1434 ;;      Totals:         0       0       0       0
  1435 ;;Total ram usage:        0 bytes
  1436 ;; Hardware stack levels used:    1
  1437 ;; This function calls:
  1438 ;;		Nothing
  1439 ;; This function is called by:
  1440 ;;		_main
  1441 ;; This function uses a non-reentrant model
  1442 ;;
  1443                           
  1444                           
  1445                           ;psect for function _I2C_Stop_Bit
  1446  0687                     _I2C_Stop_Bit:	
  1447                           
  1448                           ;main.c: 219: PIR1bits.SSP1IF=0;
  1449                           
  1450                           ;incstack = 0
  1451                           ; Regs used in _I2C_Stop_Bit: [wreg]
  1452  0687  0020               	movlb	0	; select bank0
  1453  0688  1191               	bcf	17,3	;volatile
  1454                           
  1455                           ;main.c: 220: SSPCON2bits.PEN=1;
  1456  0689  0024               	movlb	4	; select bank4
  1457  068A  1516               	bsf	22,2	;volatile
  1458  068B                     l906:	
  1459                           ;main.c: 221: while(!PIR1bits.SSP1IF)
  1460                           
  1461  068B  0020               	movlb	0	; select bank0
  1462  068C  1991               	btfsc	17,3	;volatile
  1463  068D  0008               	return
  1464                           
  1465                           ;main.c: 222: {
  1466                           ;main.c: 223: i = 1;
  1467  068E  3001               	movlw	1
  1468  068F  0020               	movlb	0	; select bank0
  1469  0690  00A2               	movwf	_i
  1470  0691  3000               	movlw	0
  1471  0692  00A3               	movwf	_i+1
  1472  0693  2E8B               	goto	l906
  1473  0694                     __end_of_I2C_Stop_Bit:	
  1474                           
  1475                           	psect	text9
  1476  06A2                     __ptext9:	
  1477 ;; *************** function _I2C_Start_Bit *****************
  1478 ;; Defined at:
  1479 ;;		line 185 in file "main.c"
  1480 ;; Parameters:    Size  Location     Type
  1481 ;;		None
  1482 ;; Auto vars:     Size  Location     Type
  1483 ;;		None
  1484 ;; Return value:  Size  Location     Type
  1485 ;;		None               void
  1486 ;; Registers used:
  1487 ;;		wreg
  1488 ;; Tracked objects:
  1489 ;;		On entry : 0/0
  1490 ;;		On exit  : 0/0
  1491 ;;		Unchanged: 0/0
  1492 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1493 ;;      Params:         0       0       0       0
  1494 ;;      Locals:         0       0       0       0
  1495 ;;      Temps:          0       0       0       0
  1496 ;;      Totals:         0       0       0       0
  1497 ;;Total ram usage:        0 bytes
  1498 ;; Hardware stack levels used:    1
  1499 ;; This function calls:
  1500 ;;		Nothing
  1501 ;; This function is called by:
  1502 ;;		_main
  1503 ;; This function uses a non-reentrant model
  1504 ;;
  1505                           
  1506                           
  1507                           ;psect for function _I2C_Start_Bit
  1508  06A2                     _I2C_Start_Bit:	
  1509                           
  1510                           ;main.c: 187: PIR1bits.SSP1IF=0;
  1511                           
  1512                           ;incstack = 0
  1513                           ; Regs used in _I2C_Start_Bit: [wreg]
  1514  06A2  0020               	movlb	0	; select bank0
  1515  06A3  1191               	bcf	17,3	;volatile
  1516                           
  1517                           ;main.c: 188: SSPCON2bits.SEN=1;
  1518  06A4  0024               	movlb	4	; select bank4
  1519  06A5  1416               	bsf	22,0	;volatile
  1520  06A6                     l900:	
  1521                           ;main.c: 189: while(!PIR1bits.SSP1IF)
  1522                           
  1523  06A6  0020               	movlb	0	; select bank0
  1524  06A7  1991               	btfsc	17,3	;volatile
  1525  06A8  2EAF               	goto	l128
  1526                           
  1527                           ;main.c: 190: {
  1528                           ;main.c: 191: i = 1;
  1529  06A9  3001               	movlw	1
  1530  06AA  0020               	movlb	0	; select bank0
  1531  06AB  00A2               	movwf	_i
  1532  06AC  3000               	movlw	0
  1533  06AD  00A3               	movwf	_i+1
  1534  06AE  2EA6               	goto	l900
  1535  06AF                     l128:	
  1536                           
  1537                           ;main.c: 192: }
  1538                           ;main.c: 193: PIR1bits.SSP1IF=0;
  1539  06AF  1191               	bcf	17,3	;volatile
  1540  06B0  0008               	return
  1541  06B1                     __end_of_I2C_Start_Bit:	
  1542                           
  1543                           	psect	text10
  1544  0694                     __ptext10:	
  1545 ;; *************** function _I2C_NAK *****************
  1546 ;; Defined at:
  1547 ;;		line 228 in file "main.c"
  1548 ;; Parameters:    Size  Location     Type
  1549 ;;		None
  1550 ;; Auto vars:     Size  Location     Type
  1551 ;;		None
  1552 ;; Return value:  Size  Location     Type
  1553 ;;		None               void
  1554 ;; Registers used:
  1555 ;;		wreg
  1556 ;; Tracked objects:
  1557 ;;		On entry : 0/0
  1558 ;;		On exit  : 0/0
  1559 ;;		Unchanged: 0/0
  1560 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1561 ;;      Params:         0       0       0       0
  1562 ;;      Locals:         0       0       0       0
  1563 ;;      Temps:          0       0       0       0
  1564 ;;      Totals:         0       0       0       0
  1565 ;;Total ram usage:        0 bytes
  1566 ;; Hardware stack levels used:    1
  1567 ;; This function calls:
  1568 ;;		Nothing
  1569 ;; This function is called by:
  1570 ;;		_main
  1571 ;; This function uses a non-reentrant model
  1572 ;;
  1573                           
  1574                           
  1575                           ;psect for function _I2C_NAK
  1576  0694                     _I2C_NAK:	
  1577                           
  1578                           ;main.c: 230: PIR1bits.SSP1IF=0;
  1579                           
  1580                           ;incstack = 0
  1581                           ; Regs used in _I2C_NAK: [wreg]
  1582  0694  0020               	movlb	0	; select bank0
  1583  0695  1191               	bcf	17,3	;volatile
  1584                           
  1585                           ;main.c: 231: SSP1CON2bits.ACKDT=1;
  1586  0696  0024               	movlb	4	; select bank4
  1587  0697  1696               	bsf	22,5	;volatile
  1588                           
  1589                           ;main.c: 232: SSP1CON2bits.ACKEN=1;
  1590  0698  1616               	bsf	22,4	;volatile
  1591  0699                     l912:	
  1592                           ;main.c: 233: while(!PIR1bits.SSP1IF)
  1593                           
  1594  0699  0020               	movlb	0	; select bank0
  1595  069A  1991               	btfsc	17,3	;volatile
  1596  069B  0008               	return
  1597                           
  1598                           ;main.c: 234: {
  1599                           ;main.c: 235: i = 1;
  1600  069C  3001               	movlw	1
  1601  069D  0020               	movlb	0	; select bank0
  1602  069E  00A2               	movwf	_i
  1603  069F  3000               	movlw	0
  1604  06A0  00A3               	movwf	_i+1
  1605  06A1  2E99               	goto	l912
  1606  06A2                     __end_of_I2C_NAK:	
  1607                           
  1608                           	psect	text11
  1609  06C1                     __ptext11:	
  1610 ;; *************** function _I2C_Control_Write *****************
  1611 ;; Defined at:
  1612 ;;		line 159 in file "main.c"
  1613 ;; Parameters:    Size  Location     Type
  1614 ;;		None
  1615 ;; Auto vars:     Size  Location     Type
  1616 ;;		None
  1617 ;; Return value:  Size  Location     Type
  1618 ;;		None               void
  1619 ;; Registers used:
  1620 ;;		wreg
  1621 ;; Tracked objects:
  1622 ;;		On entry : 0/0
  1623 ;;		On exit  : 0/0
  1624 ;;		Unchanged: 0/0
  1625 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1626 ;;      Params:         0       0       0       0
  1627 ;;      Locals:         0       0       0       0
  1628 ;;      Temps:          0       0       0       0
  1629 ;;      Totals:         0       0       0       0
  1630 ;;Total ram usage:        0 bytes
  1631 ;; Hardware stack levels used:    1
  1632 ;; This function calls:
  1633 ;;		Nothing
  1634 ;; This function is called by:
  1635 ;;		_main
  1636 ;; This function uses a non-reentrant model
  1637 ;;
  1638                           
  1639                           
  1640                           ;psect for function _I2C_Control_Write
  1641  06C1                     _I2C_Control_Write:	
  1642                           
  1643                           ;main.c: 161: PIR1bits.SSP1IF=0;
  1644                           
  1645                           ;incstack = 0
  1646                           ; Regs used in _I2C_Control_Write: [wreg]
  1647  06C1  0020               	movlb	0	; select bank0
  1648  06C2  1191               	bcf	17,3	;volatile
  1649                           
  1650                           ;main.c: 162: SSP1BUF = 0x44 << 1;
  1651  06C3  3088               	movlw	136
  1652  06C4  0024               	movlb	4	; select bank4
  1653  06C5  0091               	movwf	17	;volatile
  1654  06C6                     l886:	
  1655                           ;main.c: 163: while(!PIR1bits.SSP1IF)
  1656                           
  1657  06C6  0020               	movlb	0	; select bank0
  1658  06C7  1991               	btfsc	17,3	;volatile
  1659  06C8  2ECF               	goto	l116
  1660                           
  1661                           ;main.c: 164: {
  1662                           ;main.c: 165: i = 1;
  1663  06C9  3001               	movlw	1
  1664  06CA  0020               	movlb	0	; select bank0
  1665  06CB  00A2               	movwf	_i
  1666  06CC  3000               	movlw	0
  1667  06CD  00A3               	movwf	_i+1
  1668  06CE  2EC6               	goto	l886
  1669  06CF                     l116:	
  1670                           
  1671                           ;main.c: 167: }
  1672                           ;main.c: 168: PIR1bits.SSP1IF=0;
  1673  06CF  1191               	bcf	17,3	;volatile
  1674  06D0  0008               	return
  1675  06D1                     __end_of_I2C_Control_Write:	
  1676                           
  1677                           	psect	text12
  1678  06B1                     __ptext12:	
  1679 ;; *************** function _I2C_Control_Read *****************
  1680 ;; Defined at:
  1681 ;;		line 172 in file "main.c"
  1682 ;; Parameters:    Size  Location     Type
  1683 ;;		None
  1684 ;; Auto vars:     Size  Location     Type
  1685 ;;		None
  1686 ;; Return value:  Size  Location     Type
  1687 ;;		None               void
  1688 ;; Registers used:
  1689 ;;		wreg
  1690 ;; Tracked objects:
  1691 ;;		On entry : 0/0
  1692 ;;		On exit  : 0/0
  1693 ;;		Unchanged: 0/0
  1694 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1695 ;;      Params:         0       0       0       0
  1696 ;;      Locals:         0       0       0       0
  1697 ;;      Temps:          0       0       0       0
  1698 ;;      Totals:         0       0       0       0
  1699 ;;Total ram usage:        0 bytes
  1700 ;; Hardware stack levels used:    1
  1701 ;; This function calls:
  1702 ;;		Nothing
  1703 ;; This function is called by:
  1704 ;;		_main
  1705 ;; This function uses a non-reentrant model
  1706 ;;
  1707                           
  1708                           
  1709                           ;psect for function _I2C_Control_Read
  1710  06B1                     _I2C_Control_Read:	
  1711                           
  1712                           ;main.c: 174: PIR1bits.SSP1IF=0;
  1713                           
  1714                           ;incstack = 0
  1715                           ; Regs used in _I2C_Control_Read: [wreg]
  1716  06B1  0020               	movlb	0	; select bank0
  1717  06B2  1191               	bcf	17,3	;volatile
  1718                           
  1719                           ;main.c: 175: SSP1BUF = (0x44 << 1) + 1;
  1720  06B3  3089               	movlw	137
  1721  06B4  0024               	movlb	4	; select bank4
  1722  06B5  0091               	movwf	17	;volatile
  1723  06B6                     l894:	
  1724                           ;main.c: 176: while(!PIR1bits.SSP1IF){
  1725                           
  1726  06B6  0020               	movlb	0	; select bank0
  1727  06B7  1991               	btfsc	17,3	;volatile
  1728  06B8  2EBF               	goto	l122
  1729                           
  1730                           ;main.c: 177: i = 1;
  1731  06B9  3001               	movlw	1
  1732  06BA  0020               	movlb	0	; select bank0
  1733  06BB  00A2               	movwf	_i
  1734  06BC  3000               	movlw	0
  1735  06BD  00A3               	movwf	_i+1
  1736  06BE  2EB6               	goto	l894
  1737  06BF                     l122:	
  1738                           
  1739                           ;main.c: 178: }
  1740                           ;main.c: 182: PIR1bits.SSP1IF=0;
  1741  06BF  1191               	bcf	17,3	;volatile
  1742  06C0  0008               	return
  1743  06C1                     __end_of_I2C_Control_Read:	
  1744                           
  1745                           	psect	text13
  1746  066A                     __ptext13:	
  1747 ;; *************** function _I2C_ACK *****************
  1748 ;; Defined at:
  1749 ;;		line 134 in file "main.c"
  1750 ;; Parameters:    Size  Location     Type
  1751 ;;		None
  1752 ;; Auto vars:     Size  Location     Type
  1753 ;;		None
  1754 ;; Return value:  Size  Location     Type
  1755 ;;		None               void
  1756 ;; Registers used:
  1757 ;;		None
  1758 ;; Tracked objects:
  1759 ;;		On entry : 0/0
  1760 ;;		On exit  : 0/0
  1761 ;;		Unchanged: 0/0
  1762 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1763 ;;      Params:         0       0       0       0
  1764 ;;      Locals:         0       0       0       0
  1765 ;;      Temps:          0       0       0       0
  1766 ;;      Totals:         0       0       0       0
  1767 ;;Total ram usage:        0 bytes
  1768 ;; Hardware stack levels used:    1
  1769 ;; This function calls:
  1770 ;;		Nothing
  1771 ;; This function is called by:
  1772 ;;		_main
  1773 ;; This function uses a non-reentrant model
  1774 ;;
  1775                           
  1776                           
  1777                           ;psect for function _I2C_ACK
  1778  066A                     _I2C_ACK:	
  1779                           
  1780                           ;main.c: 136: PIR1bits.SSP1IF=0;
  1781                           
  1782                           ;incstack = 0
  1783                           ; Regs used in _I2C_ACK: []
  1784  066A  0020               	movlb	0	; select bank0
  1785  066B  1191               	bcf	17,3	;volatile
  1786                           
  1787                           ;main.c: 137: SSP1CON2bits.ACKDT=0;
  1788  066C  0024               	movlb	4	; select bank4
  1789  066D  1296               	bcf	22,5	;volatile
  1790                           
  1791                           ;main.c: 138: SSP1CON2bits.ACKEN=1;
  1792  066E  1616               	bsf	22,4	;volatile
  1793  066F                     l93:	
  1794                           ;main.c: 139: while(!PIR1bits.SSP1IF);
  1795                           
  1796  066F  0020               	movlb	0	; select bank0
  1797  0670  1991               	btfsc	17,3	;volatile
  1798  0671  0008               	return
  1799  0672  2E6F               	goto	l93
  1800  0673                     __end_of_I2C_ACK:	
  1801  007E                     btemp	set	126	;btemp
  1802  007E                     wtemp	set	126
  1803  007E                     wtemp0	set	126
  1804  0080                     wtemp1	set	128
  1805  0082                     wtemp2	set	130
  1806  0084                     wtemp3	set	132
  1807  0086                     wtemp4	set	134
  1808  0088                     wtemp5	set	136
  1809  007F                     wtemp6	set	127
  1810  007E                     ttemp	set	126
  1811  007E                     ttemp0	set	126
  1812  0081                     ttemp1	set	129
  1813  0084                     ttemp2	set	132
  1814  0087                     ttemp3	set	135
  1815  007F                     ttemp4	set	127
  1816  007E                     ltemp	set	126
  1817  007E                     ltemp0	set	126
  1818  0082                     ltemp1	set	130
  1819  0086                     ltemp2	set	134
  1820  0080                     ltemp3	set	128


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         11
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      7      14
    BANK0            80      0       4
    BANK1            80      0       0
    BANK2            64      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_serial_init
    _serial_init->_uart_xmit
    _I2C_restart->_I2C_check_idle

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0     612
                                              4 COMMON     3     3      0
                            _I2C_ACK
                   _I2C_Control_Read
                  _I2C_Control_Write
                            _I2C_NAK
                      _I2C_Start_Bit
                       _I2C_Stop_Bit
                        _I2C_restart
                        _RX_I2C_Data
                      _Send_I2C_Data
                            _init_io
                        _serial_init
                          _uart_xmit
 ---------------------------------------------------------------------------------
 (1) _serial_init                                          2     2      0     237
                                              2 COMMON     2     2      0
                          _uart_xmit
 ---------------------------------------------------------------------------------
 (1) _uart_xmit                                            2     0      2     237
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (1) _init_io                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Send_I2C_Data                                        2     0      2     108
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (1) _RX_I2C_Data                                          1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _I2C_restart                                          0     0      0      30
                     _I2C_check_idle
 ---------------------------------------------------------------------------------
 (2) _I2C_check_idle                                       3     3      0      30
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _I2C_Stop_Bit                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _I2C_Start_Bit                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _I2C_NAK                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _I2C_Control_Write                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _I2C_Control_Read                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _I2C_ACK                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_ACK
   _I2C_Control_Read
   _I2C_Control_Write
   _I2C_NAK
   _I2C_Start_Bit
   _I2C_Stop_Bit
   _I2C_restart
     _I2C_check_idle
   _RX_I2C_Data
   _Send_I2C_Data
   _init_io
   _serial_init
     _uart_xmit
   _uart_xmit

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM              E0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      7       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      12       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50      0       4       6        5.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            40      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               40      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
DATA                 0      0      12      11        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.35 build -356382666 
Symbol Table                                                                                   Fri Nov 13 00:25:27 2015

                         _i 0022                 __CFG_CP$OFF 0000                 _SSPSTATbits 0214  
                        _BF 10A0                          l84 065C                          l93 066F  
                        l99 0678                 __CFG_LVP$ON 0000                         l105 067E  
                       l122 06BF                         l116 06CF                         l132 06D1  
                       l108 0680                         l128 06AF                         l137 0667  
                       l900 06A6                         l912 0699                         l906 068B  
                       l934 0759                         l970 07D3                         l894 06B6  
                       l886 06C6                         u317 0749                         u327 076E  
                       _PEN 10B2                         u337 07CE                         u347 07D9  
                       u357 07E8                         u367 0711             __end_of_I2C_ACK 0673  
           __end_of_I2C_NAK 06A2                         _tb1 0073                         _tb2 0074  
              __CFG_BORV$LO 0000                __CFG_IESO$ON 0000                 _RX_I2C_Data 067C  
                      _RCEN 10B3                        _RSEN 10B1           ?_I2C_Control_Read 0077  
              __CFG_WRT$OFF 0000               __CFG_FCMEN$ON 0000                        _main 072B  
                      _byte 0070                        _kirk 0071                        btemp 007E  
        ??_I2C_Control_Read 0077               __CFG_BOREN$ON 0000                        ltemp 007E  
                      start 0003                        ttemp 007E                        wtemp 007E  
             __CFG_MCLRE$ON 0000        __size_of_I2C_restart 0008               __CFG_LPBOR$ON 0000  
     __size_of_I2C_Stop_Bit 000D                       ?_main 0077                       _ACKEN 10B4  
                     _ACKDT 10B5           _I2C_Control_Write 06C1                       _TRISA 008C  
                     _TRISB 008D                       _TXREG 019A          ?_I2C_Control_Write 0077  
                     _kirk2 0072             __end_of_init_io 06FD                       ltemp0 007E  
                     ltemp1 0082                       ltemp2 0086                       ltemp3 0080  
       ??_I2C_Control_Write 0077                       ttemp0 007E                       ttemp1 0081  
                     ttemp2 0084                       ttemp3 0087                       ttemp4 007F  
                     status 0003                       wtemp0 007E                       wtemp1 0080  
                     wtemp2 0082                       wtemp3 0084                       wtemp4 0086  
                     wtemp5 0088                       wtemp6 007F                _I2C_Stop_Bit 0687  
           __initialization 07F2                __end_of_main 07F2                   ??_I2C_ACK 0077  
                 ??_I2C_NAK 0077   __end_of_I2C_Control_Write 06D1                      ??_main 007B  
    __size_of_I2C_Start_Bit 000F                      _ANSELA 018C                      _ANSELB 018D  
                    _ANSELC 018E                      _SPBRGH 019C                      _SPBRGL 019B  
                    _SSPADD 0212                      _SSPCON 0215                      _SSPBUF 0211  
            __CFG_PWRTE$OFF 0000                ?_serial_init 0077      __size_of_Send_I2C_Data 0009  
            __CFG_STVREN$ON 0000                   ??_init_io 0077       Send_I2C_Data@databyte 0077  
   __end_of__initialization 07FD               _I2C_Start_Bit 06A2              __pcstackCOMMON 0077  
__size_of_I2C_Control_Write 0010              _OPTION_REGbits 0095               _Send_I2C_Data 0673  
              ?_RX_I2C_Data 0077                  __pbssBANK0 0020              ?_I2C_Start_Bit 0077  
                __pmaintext 072B                     _I2C_ACK 066A   __size_of_I2C_Control_Read 0010  
                   _I2C_NAK 0694                     _ACK_bit 0020          __size_of_uart_xmit 0006  
            ?_Send_I2C_Data 0077                     _SSP1ADD 0212                     _SSP1BUF 0211  
                   _SSPCON2 0216                     _SSPSTAT 0214     __size_of_I2C_check_idle 0010  
             ??_I2C_restart 007A        __size_of_serial_init 002E                     __ptext1 06FD  
                   __ptext2 065C                     __ptext3 06E1                     __ptext4 0673  
                   __ptext5 067C                     __ptext6 0662                     __ptext7 06D1  
                   __ptext8 0687                     __ptext9 06A2                     _init_io 06E1  
           ??_I2C_Start_Bit 0077        end_of_initialization 07FD           __end_of_uart_xmit 0662  
                 _RCSTAbits 019D         __end_of_I2C_restart 066A             ??_Send_I2C_Data 0079  
          __CFG_FOSC$INTOSC 0000                   _TRISAbits 008C                   _TRISBbits 008D  
                 _TRISCbits 008E        uart_xmit@mydata_byte 0077        __size_of_RX_I2C_Data 000B  
                 _TXSTAbits 019E            _I2C_Control_Read 06B1         start_initialization 07F2  
            _I2C_check_idle 06D1         I2C_check_idle@byte1 0078         I2C_check_idle@byte2 0079  
               _I2C_restart 0662                    ?_I2C_ACK 0077                    ?_I2C_NAK 0077  
               __pbssCOMMON 0070                   ___latbits 0001      __end_of_I2C_check_idle 06E1  
             ?_I2C_Stop_Bit 0077                    ?_init_io 0077            __CFG_WDTE$NSLEEP 0000  
           ?_I2C_check_idle 0077                    _LATCbits 010E              ??_I2C_Stop_Bit 0077  
                  _PIE1bits 0091                    _PIR1bits 0011               ??_serial_init 0079  
                 _tempbyte1 0075                   _tempbyte2 0076                   _uart_xmit 065C  
                  _SSP1STAT 0214            __size_of_I2C_ACK 0009            __size_of_I2C_NAK 000E  
  __end_of_I2C_Control_Read 06C1       __end_of_I2C_Start_Bit 06B1                  ?_uart_xmit 0077  
       __end_of_serial_init 072B            __size_of_init_io 001C       __end_of_Send_I2C_Data 067C  
                  __ptext10 0694                    __ptext11 06C1                    __ptext12 06B1  
                  __ptext13 066A               ??_RX_I2C_Data 0077                _SSP1CON2bits 0216  
             __size_of_main 00C7                ?_I2C_restart 0077                _SSP1STATbits 0214  
                _INTCONbits 000B        __end_of_I2C_Stop_Bit 0694           __CFG_CLKOUTEN$OFF 0000  
       __end_of_RX_I2C_Data 0687                  _OSCCONbits 0099                 _serial_init 06FD  
               ??_uart_xmit 0079            ??_I2C_check_idle 0077                 _SSPCON2bits 0216  
                _SSPCONbits 0215  
