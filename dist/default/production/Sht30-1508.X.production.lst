

Microchip Technology PIC LITE Macro Assembler V1.35 build -356382666 
                                                                                               Sun Nov 22 22:46:28 2015

Microchip Technology Omniscient Code Generator v1.35 (Free mode) build 201507080246
     1                           	processor	16F1508
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	stringtext,global,class=STRCODE,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    10                           	psect	text1,local,class=CODE,merge=1,delta=2
    11                           	psect	text2,local,class=CODE,merge=1,delta=2
    12                           	psect	text3,local,class=CODE,merge=1,delta=2
    13                           	psect	text4,local,class=CODE,merge=1,delta=2
    14                           	psect	text5,local,class=CODE,merge=1,delta=2
    15                           	psect	text6,local,class=CODE,merge=1,delta=2
    16                           	psect	text7,local,class=CODE,merge=1,delta=2
    17                           	psect	text8,local,class=CODE,merge=1,delta=2
    18                           	psect	text9,local,class=CODE,merge=1,delta=2
    19                           	psect	text10,local,class=CODE,merge=1,delta=2
    20                           	psect	text11,local,class=CODE,merge=1,delta=2
    21                           	psect	text12,local,class=CODE,merge=1,delta=2
    22                           	psect	text13,local,class=CODE,merge=1,delta=2
    23                           	psect	text14,local,class=CODE,merge=1,delta=2
    24                           	psect	text15,local,class=CODE,merge=1,delta=2
    25                           	psect	text16,local,class=CODE,merge=1,delta=2
    26                           	psect	text17,local,class=CODE,merge=1,delta=2
    27                           	psect	text18,local,class=CODE,merge=1,delta=2
    28                           	psect	text19,local,class=CODE,merge=1,delta=2
    29                           	psect	text20,local,class=CODE,merge=1,delta=2
    30                           	psect	text21,local,class=CODE,merge=1,delta=2
    31                           	psect	text22,local,class=CODE,merge=1,delta=2
    32                           	psect	text23,local,class=CODE,merge=1,delta=2
    33                           	psect	text24,local,class=CODE,merge=1,delta=2
    34                           	psect	text25,local,class=CODE,merge=1,delta=2
    35                           	psect	text26,local,class=CODE,merge=1,delta=2
    36                           	psect	text27,local,class=CODE,merge=1,delta=2
    37                           	psect	text28,local,class=CODE,merge=1,delta=2
    38                           	psect	text29,local,class=CODE,merge=1,delta=2
    39                           	dabs	1,0x7E,2
    40  0000                     	;# 
    41  0001                     	;# 
    42  0002                     	;# 
    43  0003                     	;# 
    44  0004                     	;# 
    45  0005                     	;# 
    46  0006                     	;# 
    47  0007                     	;# 
    48  0008                     	;# 
    49  0009                     	;# 
    50  000A                     	;# 
    51  000B                     	;# 
    52  000C                     	;# 
    53  000D                     	;# 
    54  000E                     	;# 
    55  0011                     	;# 
    56  0012                     	;# 
    57  0013                     	;# 
    58  0015                     	;# 
    59  0016                     	;# 
    60  0016                     	;# 
    61  0017                     	;# 
    62  0018                     	;# 
    63  0019                     	;# 
    64  001A                     	;# 
    65  001B                     	;# 
    66  001C                     	;# 
    67  008C                     	;# 
    68  008D                     	;# 
    69  008E                     	;# 
    70  0091                     	;# 
    71  0092                     	;# 
    72  0093                     	;# 
    73  0095                     	;# 
    74  0096                     	;# 
    75  0097                     	;# 
    76  0099                     	;# 
    77  009A                     	;# 
    78  009B                     	;# 
    79  009B                     	;# 
    80  009C                     	;# 
    81  009D                     	;# 
    82  009E                     	;# 
    83  009F                     	;# 
    84  010C                     	;# 
    85  010D                     	;# 
    86  010E                     	;# 
    87  0111                     	;# 
    88  0112                     	;# 
    89  0113                     	;# 
    90  0114                     	;# 
    91  0115                     	;# 
    92  0116                     	;# 
    93  0117                     	;# 
    94  0118                     	;# 
    95  0119                     	;# 
    96  011D                     	;# 
    97  018C                     	;# 
    98  018D                     	;# 
    99  018E                     	;# 
   100  0191                     	;# 
   101  0191                     	;# 
   102  0192                     	;# 
   103  0193                     	;# 
   104  0193                     	;# 
   105  0194                     	;# 
   106  0195                     	;# 
   107  0196                     	;# 
   108  0197                     	;# 
   109  0199                     	;# 
   110  019A                     	;# 
   111  019B                     	;# 
   112  019B                     	;# 
   113  019C                     	;# 
   114  019D                     	;# 
   115  019E                     	;# 
   116  019F                     	;# 
   117  020C                     	;# 
   118  020D                     	;# 
   119  0211                     	;# 
   120  0211                     	;# 
   121  0212                     	;# 
   122  0212                     	;# 
   123  0213                     	;# 
   124  0213                     	;# 
   125  0214                     	;# 
   126  0214                     	;# 
   127  0215                     	;# 
   128  0215                     	;# 
   129  0215                     	;# 
   130  0216                     	;# 
   131  0216                     	;# 
   132  0217                     	;# 
   133  0217                     	;# 
   134  0391                     	;# 
   135  0392                     	;# 
   136  0393                     	;# 
   137  0394                     	;# 
   138  0395                     	;# 
   139  0396                     	;# 
   140  0498                     	;# 
   141  0498                     	;# 
   142  0499                     	;# 
   143  049A                     	;# 
   144  049B                     	;# 
   145  049B                     	;# 
   146  049C                     	;# 
   147  049D                     	;# 
   148  049E                     	;# 
   149  049F                     	;# 
   150  0611                     	;# 
   151  0612                     	;# 
   152  0613                     	;# 
   153  0613                     	;# 
   154  0614                     	;# 
   155  0615                     	;# 
   156  0616                     	;# 
   157  0616                     	;# 
   158  0617                     	;# 
   159  0618                     	;# 
   160  0619                     	;# 
   161  0619                     	;# 
   162  061A                     	;# 
   163  061B                     	;# 
   164  061C                     	;# 
   165  061C                     	;# 
   166  0691                     	;# 
   167  0692                     	;# 
   168  0693                     	;# 
   169  0694                     	;# 
   170  0695                     	;# 
   171  0F0F                     	;# 
   172  0F10                     	;# 
   173  0F11                     	;# 
   174  0F12                     	;# 
   175  0F13                     	;# 
   176  0F14                     	;# 
   177  0F15                     	;# 
   178  0F16                     	;# 
   179  0F17                     	;# 
   180  0F18                     	;# 
   181  0F19                     	;# 
   182  0F1A                     	;# 
   183  0F1B                     	;# 
   184  0F1C                     	;# 
   185  0F1D                     	;# 
   186  0F1E                     	;# 
   187  0F1F                     	;# 
   188  0F20                     	;# 
   189  0F21                     	;# 
   190  0F22                     	;# 
   191  0F23                     	;# 
   192  0F24                     	;# 
   193  0F25                     	;# 
   194  0F26                     	;# 
   195  0F27                     	;# 
   196  0F28                     	;# 
   197  0F29                     	;# 
   198  0F2A                     	;# 
   199  0F2B                     	;# 
   200  0F2C                     	;# 
   201  0F2D                     	;# 
   202  0F2E                     	;# 
   203  0F2F                     	;# 
   204  0F8C                     	;# 
   205  0F8D                     	;# 
   206  0F91                     	;# 
   207  0F95                     	;# 
   208  0F96                     	;# 
   209  0F97                     	;# 
   210  0F9C                     	;# 
   211  0F9D                     	;# 
   212  0F9E                     	;# 
   213  0FE3                     	;# 
   214  0FE4                     	;# 
   215  0FE5                     	;# 
   216  0FE6                     	;# 
   217  0FE7                     	;# 
   218  0FE8                     	;# 
   219  0FE9                     	;# 
   220  0FEA                     	;# 
   221  0FEB                     	;# 
   222  0FED                     	;# 
   223  0FEE                     	;# 
   224  0FEF                     	;# 
   225  0000                     	;# 
   226  0001                     	;# 
   227  0002                     	;# 
   228  0003                     	;# 
   229  0004                     	;# 
   230  0005                     	;# 
   231  0006                     	;# 
   232  0007                     	;# 
   233  0008                     	;# 
   234  0009                     	;# 
   235  000A                     	;# 
   236  000B                     	;# 
   237  000C                     	;# 
   238  000D                     	;# 
   239  000E                     	;# 
   240  0011                     	;# 
   241  0012                     	;# 
   242  0013                     	;# 
   243  0015                     	;# 
   244  0016                     	;# 
   245  0016                     	;# 
   246  0017                     	;# 
   247  0018                     	;# 
   248  0019                     	;# 
   249  001A                     	;# 
   250  001B                     	;# 
   251  001C                     	;# 
   252  008C                     	;# 
   253  008D                     	;# 
   254  008E                     	;# 
   255  0091                     	;# 
   256  0092                     	;# 
   257  0093                     	;# 
   258  0095                     	;# 
   259  0096                     	;# 
   260  0097                     	;# 
   261  0099                     	;# 
   262  009A                     	;# 
   263  009B                     	;# 
   264  009B                     	;# 
   265  009C                     	;# 
   266  009D                     	;# 
   267  009E                     	;# 
   268  009F                     	;# 
   269  010C                     	;# 
   270  010D                     	;# 
   271  010E                     	;# 
   272  0111                     	;# 
   273  0112                     	;# 
   274  0113                     	;# 
   275  0114                     	;# 
   276  0115                     	;# 
   277  0116                     	;# 
   278  0117                     	;# 
   279  0118                     	;# 
   280  0119                     	;# 
   281  011D                     	;# 
   282  018C                     	;# 
   283  018D                     	;# 
   284  018E                     	;# 
   285  0191                     	;# 
   286  0191                     	;# 
   287  0192                     	;# 
   288  0193                     	;# 
   289  0193                     	;# 
   290  0194                     	;# 
   291  0195                     	;# 
   292  0196                     	;# 
   293  0197                     	;# 
   294  0199                     	;# 
   295  019A                     	;# 
   296  019B                     	;# 
   297  019B                     	;# 
   298  019C                     	;# 
   299  019D                     	;# 
   300  019E                     	;# 
   301  019F                     	;# 
   302  020C                     	;# 
   303  020D                     	;# 
   304  0211                     	;# 
   305  0211                     	;# 
   306  0212                     	;# 
   307  0212                     	;# 
   308  0213                     	;# 
   309  0213                     	;# 
   310  0214                     	;# 
   311  0214                     	;# 
   312  0215                     	;# 
   313  0215                     	;# 
   314  0215                     	;# 
   315  0216                     	;# 
   316  0216                     	;# 
   317  0217                     	;# 
   318  0217                     	;# 
   319  0391                     	;# 
   320  0392                     	;# 
   321  0393                     	;# 
   322  0394                     	;# 
   323  0395                     	;# 
   324  0396                     	;# 
   325  0498                     	;# 
   326  0498                     	;# 
   327  0499                     	;# 
   328  049A                     	;# 
   329  049B                     	;# 
   330  049B                     	;# 
   331  049C                     	;# 
   332  049D                     	;# 
   333  049E                     	;# 
   334  049F                     	;# 
   335  0611                     	;# 
   336  0612                     	;# 
   337  0613                     	;# 
   338  0613                     	;# 
   339  0614                     	;# 
   340  0615                     	;# 
   341  0616                     	;# 
   342  0616                     	;# 
   343  0617                     	;# 
   344  0618                     	;# 
   345  0619                     	;# 
   346  0619                     	;# 
   347  061A                     	;# 
   348  061B                     	;# 
   349  061C                     	;# 
   350  061C                     	;# 
   351  0691                     	;# 
   352  0692                     	;# 
   353  0693                     	;# 
   354  0694                     	;# 
   355  0695                     	;# 
   356  0F0F                     	;# 
   357  0F10                     	;# 
   358  0F11                     	;# 
   359  0F12                     	;# 
   360  0F13                     	;# 
   361  0F14                     	;# 
   362  0F15                     	;# 
   363  0F16                     	;# 
   364  0F17                     	;# 
   365  0F18                     	;# 
   366  0F19                     	;# 
   367  0F1A                     	;# 
   368  0F1B                     	;# 
   369  0F1C                     	;# 
   370  0F1D                     	;# 
   371  0F1E                     	;# 
   372  0F1F                     	;# 
   373  0F20                     	;# 
   374  0F21                     	;# 
   375  0F22                     	;# 
   376  0F23                     	;# 
   377  0F24                     	;# 
   378  0F25                     	;# 
   379  0F26                     	;# 
   380  0F27                     	;# 
   381  0F28                     	;# 
   382  0F29                     	;# 
   383  0F2A                     	;# 
   384  0F2B                     	;# 
   385  0F2C                     	;# 
   386  0F2D                     	;# 
   387  0F2E                     	;# 
   388  0F2F                     	;# 
   389  0F8C                     	;# 
   390  0F8D                     	;# 
   391  0F91                     	;# 
   392  0F95                     	;# 
   393  0F96                     	;# 
   394  0F97                     	;# 
   395  0F9C                     	;# 
   396  0F9D                     	;# 
   397  0F9E                     	;# 
   398  0FE3                     	;# 
   399  0FE4                     	;# 
   400  0FE5                     	;# 
   401  0FE6                     	;# 
   402  0FE7                     	;# 
   403  0FE8                     	;# 
   404  0FE9                     	;# 
   405  0FEA                     	;# 
   406  0FEB                     	;# 
   407  0FED                     	;# 
   408  0FEE                     	;# 
   409  0FEF                     	;# 
   410  0000                     	;# 
   411  0001                     	;# 
   412  0002                     	;# 
   413  0003                     	;# 
   414  0004                     	;# 
   415  0005                     	;# 
   416  0006                     	;# 
   417  0007                     	;# 
   418  0008                     	;# 
   419  0009                     	;# 
   420  000A                     	;# 
   421  000B                     	;# 
   422  000C                     	;# 
   423  000D                     	;# 
   424  000E                     	;# 
   425  0011                     	;# 
   426  0012                     	;# 
   427  0013                     	;# 
   428  0015                     	;# 
   429  0016                     	;# 
   430  0016                     	;# 
   431  0017                     	;# 
   432  0018                     	;# 
   433  0019                     	;# 
   434  001A                     	;# 
   435  001B                     	;# 
   436  001C                     	;# 
   437  008C                     	;# 
   438  008D                     	;# 
   439  008E                     	;# 
   440  0091                     	;# 
   441  0092                     	;# 
   442  0093                     	;# 
   443  0095                     	;# 
   444  0096                     	;# 
   445  0097                     	;# 
   446  0099                     	;# 
   447  009A                     	;# 
   448  009B                     	;# 
   449  009B                     	;# 
   450  009C                     	;# 
   451  009D                     	;# 
   452  009E                     	;# 
   453  009F                     	;# 
   454  010C                     	;# 
   455  010D                     	;# 
   456  010E                     	;# 
   457  0111                     	;# 
   458  0112                     	;# 
   459  0113                     	;# 
   460  0114                     	;# 
   461  0115                     	;# 
   462  0116                     	;# 
   463  0117                     	;# 
   464  0118                     	;# 
   465  0119                     	;# 
   466  011D                     	;# 
   467  018C                     	;# 
   468  018D                     	;# 
   469  018E                     	;# 
   470  0191                     	;# 
   471  0191                     	;# 
   472  0192                     	;# 
   473  0193                     	;# 
   474  0193                     	;# 
   475  0194                     	;# 
   476  0195                     	;# 
   477  0196                     	;# 
   478  0197                     	;# 
   479  0199                     	;# 
   480  019A                     	;# 
   481  019B                     	;# 
   482  019B                     	;# 
   483  019C                     	;# 
   484  019D                     	;# 
   485  019E                     	;# 
   486  019F                     	;# 
   487  020C                     	;# 
   488  020D                     	;# 
   489  0211                     	;# 
   490  0211                     	;# 
   491  0212                     	;# 
   492  0212                     	;# 
   493  0213                     	;# 
   494  0213                     	;# 
   495  0214                     	;# 
   496  0214                     	;# 
   497  0215                     	;# 
   498  0215                     	;# 
   499  0215                     	;# 
   500  0216                     	;# 
   501  0216                     	;# 
   502  0217                     	;# 
   503  0217                     	;# 
   504  0391                     	;# 
   505  0392                     	;# 
   506  0393                     	;# 
   507  0394                     	;# 
   508  0395                     	;# 
   509  0396                     	;# 
   510  0498                     	;# 
   511  0498                     	;# 
   512  0499                     	;# 
   513  049A                     	;# 
   514  049B                     	;# 
   515  049B                     	;# 
   516  049C                     	;# 
   517  049D                     	;# 
   518  049E                     	;# 
   519  049F                     	;# 
   520  0611                     	;# 
   521  0612                     	;# 
   522  0613                     	;# 
   523  0613                     	;# 
   524  0614                     	;# 
   525  0615                     	;# 
   526  0616                     	;# 
   527  0616                     	;# 
   528  0617                     	;# 
   529  0618                     	;# 
   530  0619                     	;# 
   531  0619                     	;# 
   532  061A                     	;# 
   533  061B                     	;# 
   534  061C                     	;# 
   535  061C                     	;# 
   536  0691                     	;# 
   537  0692                     	;# 
   538  0693                     	;# 
   539  0694                     	;# 
   540  0695                     	;# 
   541  0F0F                     	;# 
   542  0F10                     	;# 
   543  0F11                     	;# 
   544  0F12                     	;# 
   545  0F13                     	;# 
   546  0F14                     	;# 
   547  0F15                     	;# 
   548  0F16                     	;# 
   549  0F17                     	;# 
   550  0F18                     	;# 
   551  0F19                     	;# 
   552  0F1A                     	;# 
   553  0F1B                     	;# 
   554  0F1C                     	;# 
   555  0F1D                     	;# 
   556  0F1E                     	;# 
   557  0F1F                     	;# 
   558  0F20                     	;# 
   559  0F21                     	;# 
   560  0F22                     	;# 
   561  0F23                     	;# 
   562  0F24                     	;# 
   563  0F25                     	;# 
   564  0F26                     	;# 
   565  0F27                     	;# 
   566  0F28                     	;# 
   567  0F29                     	;# 
   568  0F2A                     	;# 
   569  0F2B                     	;# 
   570  0F2C                     	;# 
   571  0F2D                     	;# 
   572  0F2E                     	;# 
   573  0F2F                     	;# 
   574  0F8C                     	;# 
   575  0F8D                     	;# 
   576  0F91                     	;# 
   577  0F95                     	;# 
   578  0F96                     	;# 
   579  0F97                     	;# 
   580  0F9C                     	;# 
   581  0F9D                     	;# 
   582  0F9E                     	;# 
   583  0FE3                     	;# 
   584  0FE4                     	;# 
   585  0FE5                     	;# 
   586  0FE6                     	;# 
   587  0FE7                     	;# 
   588  0FE8                     	;# 
   589  0FE9                     	;# 
   590  0FEA                     	;# 
   591  0FEB                     	;# 
   592  0FED                     	;# 
   593  0FEE                     	;# 
   594  0FEF                     	;# 
   595                           
   596 ;; Function _GetStatus is unused but had its address taken
   597  0000                     
   598                           	psect	stringtext
   599  0800                     __pstringtext:	
   600  0800                     _CommandB1:	
   601  0800  342C               	retlw	44
   602  0801                     __end_of_CommandB1:	
   603  0801                     _CommandB2:	
   604  0801  3406               	retlw	6
   605  0802                     __end_of_CommandB2:	
   606  000B                     _INTCONbits	set	11
   607  0011                     _PIR1bits	set	17
   608  0095                     _OPTION_REGbits	set	149
   609  0099                     _OSCCONbits	set	153
   610  0091                     _PIE1bits	set	145
   611  008C                     _TRISAbits	set	140
   612  008D                     _TRISBbits	set	141
   613  008E                     _TRISCbits	set	142
   614  010E                     _LATCbits	set	270
   615  018C                     _ANSELA	set	396
   616  018D                     _ANSELB	set	397
   617  018E                     _ANSELC	set	398
   618  019D                     _RCSTAbits	set	413
   619  019C                     _SPBRGH	set	412
   620  019B                     _SPBRGL	set	411
   621  019A                     _TXREG	set	410
   622  019E                     _TXSTAbits	set	414
   623  0212                     _SSP1ADD	set	530
   624  0211                     _SSP1BUF	set	529
   625  0216                     _SSP1CON2bits	set	534
   626  0212                     _SSPADD	set	530
   627  0211                     _SSPBUF	set	529
   628  0216                     _SSPCON2	set	534
   629  0216                     _SSPCON2bits	set	534
   630  0215                     _SSPCONbits	set	533
   631  0214                     _SSPSTAT	set	532
   632  10A0                     _BF	set	4256
   633  10B3                     _RCEN	set	4275
   634  10B1                     _RSEN	set	4273
   635  0802                     STR_1:	
   636  0802  3454               	retlw	84	;'T'
   637  0803  3465               	retlw	101	;'e'
   638  0804  346D               	retlw	109	;'m'
   639  0805  3470               	retlw	112	;'p'
   640  0806  3465               	retlw	101	;'e'
   641  0807  3472               	retlw	114	;'r'
   642  0808  3461               	retlw	97	;'a'
   643  0809  3474               	retlw	116	;'t'
   644  080A  3475               	retlw	117	;'u'
   645  080B  3472               	retlw	114	;'r'
   646  080C  3465               	retlw	101	;'e'
   647  080D  343A               	retlw	58	;':'
   648  080E  3420               	retlw	32	;' '
   649  080F  3400               	retlw	0
   650  0810                     STR_2:	
   651  0810  3448               	retlw	72	;'H'
   652  0811  3475               	retlw	117	;'u'
   653  0812  346D               	retlw	109	;'m'
   654  0813  3469               	retlw	105	;'i'
   655  0814  3464               	retlw	100	;'d'
   656  0815  3469               	retlw	105	;'i'
   657  0816  3474               	retlw	116	;'t'
   658  0817  3479               	retlw	121	;'y'
   659  0818  343A               	retlw	58	;':'
   660  0819  3420               	retlw	32	;' '
   661  081A  3400               	retlw	0
   662  081B                     STR_3:	
   663  081B  3453               	retlw	83	;'S'
   664  081C  3474               	retlw	116	;'t'
   665  081D  3461               	retlw	97	;'a'
   666  081E  3474               	retlw	116	;'t'
   667  081F  3475               	retlw	117	;'u'
   668  0820  3473               	retlw	115	;'s'
   669  0821  343A               	retlw	58	;':'
   670  0822  3420               	retlw	32	;' '
   671  0823  3400               	retlw	0
   672  0824                     STR_4:	
   673  0824  3443               	retlw	67	;'C'
   674  0825  3452               	retlw	82	;'R'
   675  0826  3443               	retlw	67	;'C'
   676  0827  343A               	retlw	58	;':'
   677  0828  3420               	retlw	32	;' '
   678  0829  3400               	retlw	0
   679                           
   680                           ; #config settings
   681  0000                     
   682                           	psect	cinit
   683  07F9                     start_initialization:	
   684  07F9                     __initialization:	
   685                           
   686                           ; Clear objects allocated to BANK0
   687  07F9  01D0               	clrf	__pbssBANK0& (0+127)
   688  07FA  01D1               	clrf	(__pbssBANK0+1)& (0+127)
   689  07FB  01D2               	clrf	(__pbssBANK0+2)& (0+127)
   690  07FC  01D3               	clrf	(__pbssBANK0+3)& (0+127)
   691  07FD                     end_of_initialization:	
   692                           ;End of C runtime variable initialization code
   693                           
   694  07FD                     __end_of__initialization:	
   695  07FD  0020               	movlb	0
   696  07FE  3186  2EFA         	ljmp	_main	;jump to C main() function
   697                           
   698                           	psect	bssBANK0
   699  0050                     __pbssBANK0:	
   700  0050                     _ACK_bit:	
   701  0050                     	ds	2
   702  0052                     _i:	
   703  0052                     	ds	2
   704                           
   705                           	psect	cstackCOMMON
   706  0070                     __pcstackCOMMON:	
   707  0070                     ?_I2C_restart:	
   708  0070                     ?_I2C_Control_Read:	
   709                           ; 0 bytes @ 0x0
   710                           
   711  0070                     ??_I2C_Control_Read:	
   712                           ; 0 bytes @ 0x0
   713                           
   714  0070                     ??_RX_I2C_Data:	
   715                           ; 0 bytes @ 0x0
   716                           
   717  0070                     ?_I2C_ACK:	
   718                           ; 0 bytes @ 0x0
   719                           
   720  0070                     ??_I2C_ACK:	
   721                           ; 0 bytes @ 0x0
   722                           
   723  0070                     ?_doCRC:	
   724                           ; 0 bytes @ 0x0
   725                           
   726  0070                     ?_I2C_NAK:	
   727                           ; 0 bytes @ 0x0
   728                           
   729  0070                     ??_I2C_NAK:	
   730                           ; 0 bytes @ 0x0
   731                           
   732  0070                     ?_I2C_Stop_Bit:	
   733                           ; 0 bytes @ 0x0
   734                           
   735  0070                     ??_I2C_Stop_Bit:	
   736                           ; 0 bytes @ 0x0
   737                           
   738  0070                     ?_I2C_Init:	
   739                           ; 0 bytes @ 0x0
   740                           
   741  0070                     ??_I2C_Init:	
   742                           ; 0 bytes @ 0x0
   743                           
   744  0070                     ?_init_io:	
   745                           ; 0 bytes @ 0x0
   746                           
   747  0070                     ??_init_io:	
   748                           ; 0 bytes @ 0x0
   749                           
   750  0070                     ?_uart_xmit:	
   751                           ; 0 bytes @ 0x0
   752                           
   753  0070                     ?_serial_init:	
   754                           ; 0 bytes @ 0x0
   755                           
   756  0070                     ??_serial_init:	
   757                           ; 0 bytes @ 0x0
   758                           
   759  0070                     ?_Send_I2C_Data:	
   760                           ; 0 bytes @ 0x0
   761                           
   762  0070                     ?_I2C_Control_Write:	
   763                           ; 0 bytes @ 0x0
   764                           
   765  0070                     ??_I2C_Control_Write:	
   766                           ; 0 bytes @ 0x0
   767                           
   768  0070                     ?_I2C_Start_Bit:	
   769                           ; 0 bytes @ 0x0
   770                           
   771  0070                     ??_I2C_Start_Bit:	
   772                           ; 0 bytes @ 0x0
   773                           
   774  0070                     ?_I2C_check_idle:	
   775                           ; 0 bytes @ 0x0
   776                           
   777  0070                     ??_I2C_check_idle:	
   778                           ; 0 bytes @ 0x0
   779                           
   780  0070                     ?_RX_I2C_Data:	
   781                           ; 0 bytes @ 0x0
   782                           
   783  0070                     ?_CalcTemp:	
   784                           ; 1 bytes @ 0x0
   785                           
   786  0070                     ?_main:	
   787                           ; 2 bytes @ 0x0
   788                           
   789  0070                     ?___lwdiv:	
   790                           ; 2 bytes @ 0x0
   791                           
   792  0070                     ?___lwmod:	
   793                           ; 2 bytes @ 0x0
   794                           
   795  0070                     ?___ftpack:	
   796                           ; 2 bytes @ 0x0
   797                           
   798  0070                     ?___fttol:	
   799                           ; 3 bytes @ 0x0
   800                           
   801  0070                     doCRC@crc:	
   802                           ; 4 bytes @ 0x0
   803                           
   804  0070                     uart_xmit@mydata_byte:	
   805                           ; 1 bytes @ 0x0
   806                           
   807  0070                     CalcTemp@rcv_val:	
   808                           ; 2 bytes @ 0x0
   809                           
   810  0070                     Send_I2C_Data@databyte:	
   811                           ; 2 bytes @ 0x0
   812                           
   813  0070                     ___lwdiv@divisor:	
   814                           ; 2 bytes @ 0x0
   815                           
   816  0070                     ___lwmod@divisor:	
   817                           ; 2 bytes @ 0x0
   818                           
   819  0070                     ___ftpack@arg:	
   820                           ; 2 bytes @ 0x0
   821                           
   822  0070                     ___fttol@f1:	
   823                           ; 3 bytes @ 0x0
   824                           
   825                           
   826                           ; 3 bytes @ 0x0
   827  0070                     	ds	1
   828  0071                     ??_doCRC:	
   829  0071                     RX_I2C_Data@byt:	
   830                           ; 0 bytes @ 0x1
   831                           
   832  0071                     I2C_check_idle@byte1:	
   833                           ; 1 bytes @ 0x1
   834                           
   835                           
   836                           ; 1 bytes @ 0x1
   837  0071                     	ds	1
   838  0072                     ?_I2C_Cmd:	
   839  0072                     ??_CalcTemp:	
   840                           ; 0 bytes @ 0x2
   841                           
   842  0072                     ??_uart_xmit:	
   843                           ; 0 bytes @ 0x2
   844                           
   845  0072                     ?_UART_String:	
   846                           ; 0 bytes @ 0x2
   847                           
   848  0072                     ??_Send_I2C_Data:	
   849                           ; 0 bytes @ 0x2
   850                           
   851  0072                     doCRC@ch:	
   852                           ; 0 bytes @ 0x2
   853                           
   854  0072                     I2C_check_idle@byte2:	
   855                           ; 1 bytes @ 0x2
   856                           
   857  0072                     I2C_Cmd@b2:	
   858                           ; 1 bytes @ 0x2
   859                           
   860  0072                     UART_String@letters:	
   861                           ; 1 bytes @ 0x2
   862                           
   863  0072                     ___lwdiv@dividend:	
   864                           ; 2 bytes @ 0x2
   865                           
   866  0072                     ___lwmod@dividend:	
   867                           ; 2 bytes @ 0x2
   868                           
   869                           
   870                           ; 2 bytes @ 0x2
   871  0072                     	ds	1
   872  0073                     ??_I2C_Cmd:	
   873  0073                     ??_I2C_restart:	
   874                           ; 0 bytes @ 0x3
   875                           
   876  0073                     doCRC@b7:	
   877                           ; 0 bytes @ 0x3
   878                           
   879  0073                     ___ftpack@exp:	
   880                           ; 1 bytes @ 0x3
   881                           
   882                           
   883                           ; 1 bytes @ 0x3
   884  0073                     	ds	1
   885  0074                     ??_UART_String:	
   886  0074                     ??___fttol:	
   887                           ; 0 bytes @ 0x4
   888                           
   889  0074                     ??___lwdiv:	
   890                           ; 0 bytes @ 0x4
   891                           
   892  0074                     ??___lwmod:	
   893                           ; 0 bytes @ 0x4
   894                           
   895  0074                     ___ftpack@sign:	
   896                           ; 0 bytes @ 0x4
   897                           
   898  0074                     doCRC@ix:	
   899                           ; 1 bytes @ 0x4
   900                           
   901                           
   902                           ; 2 bytes @ 0x4
   903  0074                     	ds	1
   904  0075                     ??___ftpack:	
   905  0075                     I2C_Cmd@b1:	
   906                           ; 0 bytes @ 0x5
   907                           
   908  0075                     ___lwmod@counter:	
   909                           ; 1 bytes @ 0x5
   910                           
   911  0075                     ___lwdiv@quotient:	
   912                           ; 1 bytes @ 0x5
   913                           
   914                           
   915                           ; 2 bytes @ 0x5
   916  0075                     	ds	1
   917  0076                     ?_GetReading:	
   918  0076                     UART_String@i:	
   919                           ; 8 bytes @ 0x6
   920                           
   921                           
   922                           ; 2 bytes @ 0x6
   923  0076                     	ds	1
   924  0077                     ___lwdiv@counter:	
   925                           
   926                           ; 1 bytes @ 0x7
   927  0077                     	ds	1
   928  0078                     ?_utoa:	
   929  0078                     ?___ftmul:	
   930                           ; 1 bytes @ 0x8
   931                           
   932  0078                     ?___lwtoft:	
   933                           ; 3 bytes @ 0x8
   934                           
   935  0078                     ___fttol@sign1:	
   936                           ; 3 bytes @ 0x8
   937                           
   938  0078                     utoa@val:	
   939                           ; 1 bytes @ 0x8
   940                           
   941  0078                     ___lwtoft@c:	
   942                           ; 2 bytes @ 0x8
   943                           
   944  0078                     ___ftmul@f1:	
   945                           ; 2 bytes @ 0x8
   946                           
   947                           
   948                           ; 3 bytes @ 0x8
   949  0078                     	ds	1
   950  0079                     ___fttol@lval:	
   951                           
   952                           ; 4 bytes @ 0x9
   953  0079                     	ds	1
   954  007A                     utoa@base:	
   955                           
   956                           ; 2 bytes @ 0xA
   957  007A                     	ds	1
   958  007B                     ??___lwtoft:	
   959  007B                     ___ftmul@f2:	
   960                           ; 0 bytes @ 0xB
   961                           
   962                           
   963                           ; 3 bytes @ 0xB
   964  007B                     	ds	1
   965  007C                     ??_utoa:	
   966                           
   967                           ; 0 bytes @ 0xC
   968  007C                     	ds	1
   969  007D                     ___fttol@exp1:	
   970                           
   971                           ; 1 bytes @ 0xD
   972  007D                     	ds	1
   973  007E                     ??_CalcHumid:	
   974                           
   975                           	psect	cstackBANK0
   976  0020                     __pcstackBANK0:	
   977                           ; 0 bytes @ 0xE
   978                           
   979  0020                     ??_GetReading:	
   980  0020                     ??___ftmul:	
   981                           ; 0 bytes @ 0x0
   982                           
   983  0020                     ?___ftdiv:	
   984                           ; 0 bytes @ 0x0
   985                           
   986  0020                     utoa@v:	
   987                           ; 3 bytes @ 0x0
   988                           
   989  0020                     ___ftdiv@f2:	
   990                           ; 2 bytes @ 0x0
   991                           
   992                           
   993                           ; 3 bytes @ 0x0
   994  0020                     	ds	2
   995  0022                     utoa@c:	
   996                           
   997                           ; 1 bytes @ 0x2
   998  0022                     	ds	1
   999  0023                     utoa@buf:	
  1000  0023                     ___ftdiv@f1:	
  1001                           ; 1 bytes @ 0x3
  1002                           
  1003                           
  1004                           ; 3 bytes @ 0x3
  1005  0023                     	ds	1
  1006  0024                     ___ftmul@exp:	
  1007                           
  1008                           ; 1 bytes @ 0x4
  1009  0024                     	ds	1
  1010  0025                     GetReading@bh:	
  1011  0025                     ___ftmul@f3_as_product:	
  1012                           ; 1 bytes @ 0x5
  1013                           
  1014                           
  1015                           ; 3 bytes @ 0x5
  1016  0025                     	ds	1
  1017  0026                     ??___ftdiv:	
  1018  0026                     GetReading@bl:	
  1019                           ; 0 bytes @ 0x6
  1020                           
  1021                           
  1022                           ; 1 bytes @ 0x6
  1023  0026                     	ds	1
  1024  0027                     GetReading@crc_gen:	
  1025                           
  1026                           ; 1 bytes @ 0x7
  1027  0027                     	ds	1
  1028  0028                     ___ftmul@cntr:	
  1029  0028                     GetReading@local:	
  1030                           ; 1 bytes @ 0x8
  1031                           
  1032                           
  1033                           ; 8 bytes @ 0x8
  1034  0028                     	ds	1
  1035  0029                     ___ftmul@sign:	
  1036                           
  1037                           ; 1 bytes @ 0x9
  1038  0029                     	ds	1
  1039  002A                     ___ftdiv@cntr:	
  1040                           
  1041                           ; 1 bytes @ 0xA
  1042  002A                     	ds	1
  1043  002B                     ___ftdiv@f3:	
  1044                           
  1045                           ; 3 bytes @ 0xB
  1046  002B                     	ds	3
  1047  002E                     ___ftdiv@exp:	
  1048                           
  1049                           ; 1 bytes @ 0xE
  1050  002E                     	ds	1
  1051  002F                     ___ftdiv@sign:	
  1052                           
  1053                           ; 1 bytes @ 0xF
  1054  002F                     	ds	1
  1055  0030                     ?_CalcHumid:	
  1056  0030                     CalcHumid@rcv_val:	
  1057                           ; 2 bytes @ 0x10
  1058                           
  1059                           
  1060                           ; 2 bytes @ 0x10
  1061  0030                     	ds	2
  1062  0032                     CalcHumid@ans:	
  1063                           
  1064                           ; 3 bytes @ 0x12
  1065  0032                     	ds	3
  1066  0035                     ?_itoa:	
  1067  0035                     itoa@val:	
  1068                           ; 1 bytes @ 0x15
  1069                           
  1070                           
  1071                           ; 2 bytes @ 0x15
  1072  0035                     	ds	2
  1073  0037                     itoa@base:	
  1074                           
  1075                           ; 2 bytes @ 0x17
  1076  0037                     	ds	2
  1077  0039                     ??_itoa:	
  1078                           
  1079                           ; 0 bytes @ 0x19
  1080  0039                     	ds	1
  1081  003A                     itoa@cp:	
  1082                           
  1083                           ; 1 bytes @ 0x1A
  1084  003A                     	ds	1
  1085  003B                     itoa@buf:	
  1086                           
  1087                           ; 1 bytes @ 0x1B
  1088  003B                     	ds	1
  1089  003C                     ??_main:	
  1090                           
  1091                           ; 0 bytes @ 0x1C
  1092  003C                     	ds	3
  1093  003F                     main@buf:	
  1094                           
  1095                           ; 9 bytes @ 0x1F
  1096  003F                     	ds	9
  1097  0048                     main@received:	
  1098                           
  1099                           ; 8 bytes @ 0x28
  1100  0048                     	ds	8
  1101                           
  1102                           	psect	maintext
  1103  06FA                     __pmaintext:	
  1104 ;;
  1105 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
  1106 ;;
  1107 ;; *************** function _main *****************
  1108 ;; Defined at:
  1109 ;;		line 222 in file "main.c"
  1110 ;; Parameters:    Size  Location     Type
  1111 ;;		None
  1112 ;; Auto vars:     Size  Location     Type
  1113 ;;  buf             9   31[BANK0 ] unsigned char [9]
  1114 ;;  received        8   40[BANK0 ] struct sht_return
  1115 ;;  gah             2    0        unsigned int 
  1116 ;; Return value:  Size  Location     Type
  1117 ;;                  2   96[None  ] int 
  1118 ;; Registers used:
  1119 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1120 ;; Tracked objects:
  1121 ;;		On entry : B1F/0
  1122 ;;		On exit  : 0/0
  1123 ;;		Unchanged: 0/0
  1124 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1125 ;;      Params:         0       0       0       0
  1126 ;;      Locals:         0      17       0       0
  1127 ;;      Temps:          0       3       0       0
  1128 ;;      Totals:         0      20       0       0
  1129 ;;Total ram usage:       20 bytes
  1130 ;; Hardware stack levels required when called:    3
  1131 ;; This function calls:
  1132 ;;		_CalcHumid
  1133 ;;		_CalcTemp
  1134 ;;		_GetReading
  1135 ;;		_I2C_Init
  1136 ;;		_UART_String
  1137 ;;		_init_io
  1138 ;;		_itoa
  1139 ;;		_serial_init
  1140 ;;		_uart_xmit
  1141 ;; This function is called by:
  1142 ;;		Startup code after reset
  1143 ;; This function uses a non-reentrant model
  1144 ;;
  1145                           
  1146                           
  1147                           ;psect for function _main
  1148  06FA                     _main:	
  1149                           
  1150                           ;main.c: 223: Sht_rtn received;
  1151                           ;main.c: 224: unsigned int gah;
  1152                           ;main.c: 225: char buf[9];
  1153                           ;main.c: 228: OSCCONbits.IRCF = 0x0d;
  1154                           
  1155                           ;incstack = 0
  1156                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1157  06FA  0021               	movlb	1	; select bank1
  1158  06FB  0819               	movf	25,w	;volatile
  1159  06FC  3987               	andlw	-121
  1160  06FD  3868               	iorlw	104
  1161  06FE  0099               	movwf	25	;volatile
  1162                           
  1163                           ;main.c: 229: OSCCONbits.SCS = 0x02;
  1164  06FF  0819               	movf	25,w	;volatile
  1165  0700  39FC               	andlw	-4
  1166  0701  3802               	iorlw	2
  1167  0702  0099               	movwf	25	;volatile
  1168                           
  1169                           ;main.c: 230: OPTION_REGbits.nWPUEN = 0;
  1170  0703  1395               	bcf	21,7	;volatile
  1171                           
  1172                           ;main.c: 232: init_io();
  1173  0704  3182  2242  3186   	fcall	_init_io
  1174                           
  1175                           ;main.c: 233: serial_init();
  1176  0707  3182  221E  3186   	fcall	_serial_init
  1177                           
  1178                           ;main.c: 234: I2C_Init();
  1179  070A  3181  2192  3186   	fcall	_I2C_Init
  1180                           
  1181                           ;main.c: 236: SSPCONbits.SSPM=0x08;
  1182  070D  0024               	movlb	4	; select bank4
  1183  070E  0815               	movf	21,w	;volatile
  1184  070F  39F0               	andlw	-16
  1185  0710  3808               	iorlw	8
  1186  0711  0095               	movwf	21	;volatile
  1187                           
  1188                           ;main.c: 237: SSPCONbits.SSPEN=1;
  1189  0712  1695               	bsf	21,5	;volatile
  1190                           
  1191                           ;main.c: 238: SSPADD = 0x09;
  1192  0713  3009               	movlw	9
  1193  0714  0092               	movwf	18	;volatile
  1194                           
  1195                           ;main.c: 239: SSP1ADD = 0x09;
  1196  0715  3009               	movlw	9
  1197  0716  0092               	movwf	18	;volatile
  1198  0717                     l1689:	
  1199                           ;main.c: 243: while(1){
  1200                           
  1201                           
  1202                           ;main.c: 244: _delay((unsigned long)((50)*(4000000/4000.0)));
  1203  0717  3041               	movlw	65
  1204  0718  0020               	movlb	0	; select bank0
  1205  0719  00BD               	movwf	??_main+1
  1206  071A  30EE               	movlw	238
  1207  071B  00BC               	movwf	??_main
  1208  071C                     u1617:	
  1209  071C  0BBC               	decfsz	??_main,f
  1210  071D  2F1C               	goto	u1617
  1211  071E  0BBD               	decfsz	??_main+1,f
  1212  071F  2F1C               	goto	u1617
  1213  0720  0000               	nop
  1214                           
  1215                           ;main.c: 247: received = GetReading();
  1216  0721  3186  2636  3186   	fcall	_GetReading
  1217  0724  3076               	movlw	low ?_GetReading
  1218  0725  0086               	movwf	6
  1219  0726  3000               	movlw	high ?_GetReading
  1220  0727  0087               	movwf	7
  1221  0728  3048               	movlw	low main@received
  1222  0729  0084               	movwf	4
  1223  072A  3000               	movlw	high main@received
  1224  072B  0085               	movwf	5
  1225  072C  3008               	movlw	8
  1226  072D  0020               	movlb	0	; select bank0
  1227  072E  00BC               	movwf	??_main
  1228  072F                     u1600:	
  1229  072F  0016               	moviw fsr1++
  1230  0730  001A               	movwi fsr0++
  1231  0731  0BBC               	decfsz	??_main,f
  1232  0732  2F2F               	goto	u1600
  1233                           
  1234                           ;main.c: 253: UART_String("Temperature: ");
  1235  0733  3002               	movlw	low (STR_1| (0+32768))
  1236  0734  00F2               	movwf	UART_String@letters
  1237  0735  3088               	movlw	high (STR_1| (0+32768))
  1238  0736  00F3               	movwf	UART_String@letters+1
  1239  0737  3182  225A  3186   	fcall	_UART_String
  1240                           
  1241                           ;main.c: 254: itoa(buf,CalcTemp(received.raw_t),10);
  1242  073A  0020               	movlb	0	; select bank0
  1243  073B  0849               	movf	main@received+1,w
  1244  073C  00F1               	movwf	CalcTemp@rcv_val+1
  1245  073D  0848               	movf	main@received,w
  1246  073E  00F0               	movwf	CalcTemp@rcv_val
  1247  073F  3181  2191  3186   	fcall	_CalcTemp
  1248  0742  0871               	movf	?_CalcTemp+1,w
  1249  0743  0020               	movlb	0	; select bank0
  1250  0744  00B6               	movwf	itoa@val+1
  1251  0745  0870               	movf	?_CalcTemp,w
  1252  0746  00B5               	movwf	itoa@val
  1253  0747  300A               	movlw	10
  1254  0748  00B7               	movwf	itoa@base
  1255  0749  3000               	movlw	0
  1256  074A  00B8               	movwf	itoa@base+1
  1257  074B  303F               	movlw	(low (main@buf| 0))& (0+255)
  1258  074C  3182  229D  3186   	fcall	_itoa
  1259                           
  1260                           ;main.c: 255: UART_String(buf);
  1261  074F  303F               	movlw	low main@buf
  1262  0750  00F2               	movwf	UART_String@letters
  1263  0751  3000               	movlw	high main@buf
  1264  0752  00F3               	movwf	UART_String@letters+1
  1265  0753  3182  225A  3186   	fcall	_UART_String
  1266                           
  1267                           ;main.c: 256: uart_xmit(10);
  1268  0756  300A               	movlw	10
  1269  0757  00F0               	movwf	uart_xmit@mydata_byte
  1270  0758  3000               	movlw	0
  1271  0759  00F1               	movwf	uart_xmit@mydata_byte+1
  1272  075A  3181  2198  3186   	fcall	_uart_xmit
  1273                           
  1274                           ;main.c: 257: uart_xmit(13);
  1275  075D  300D               	movlw	13
  1276  075E  00F0               	movwf	uart_xmit@mydata_byte
  1277  075F  3000               	movlw	0
  1278  0760  00F1               	movwf	uart_xmit@mydata_byte+1
  1279  0761  3181  2198  3186   	fcall	_uart_xmit
  1280                           
  1281                           ;main.c: 259: UART_String("Humidity: ");
  1282  0764  3010               	movlw	low (STR_2| (0+32768))
  1283  0765  00F2               	movwf	UART_String@letters
  1284  0766  3088               	movlw	high (STR_2| (0+32768))
  1285  0767  00F3               	movwf	UART_String@letters+1
  1286  0768  3182  225A  3186   	fcall	_UART_String
  1287                           
  1288                           ;main.c: 260: itoa(buf,CalcHumid(received.raw_h),10);
  1289  076B  0020               	movlb	0	; select bank0
  1290  076C  084B               	movf	main@received+3,w
  1291  076D  00B1               	movwf	CalcHumid@rcv_val+1
  1292  076E  084A               	movf	main@received+2,w
  1293  076F  00B0               	movwf	CalcHumid@rcv_val
  1294  0770  3183  234B  3186   	fcall	_CalcHumid
  1295  0773  0020               	movlb	0	; select bank0
  1296  0774  0831               	movf	?_CalcHumid+1,w
  1297  0775  00B6               	movwf	itoa@val+1
  1298  0776  0830               	movf	?_CalcHumid,w
  1299  0777  00B5               	movwf	itoa@val
  1300  0778  300A               	movlw	10
  1301  0779  00B7               	movwf	itoa@base
  1302  077A  3000               	movlw	0
  1303  077B  00B8               	movwf	itoa@base+1
  1304  077C  303F               	movlw	(low (main@buf| 0))& (0+255)
  1305  077D  3182  229D  3186   	fcall	_itoa
  1306                           
  1307                           ;main.c: 261: UART_String(buf);
  1308  0780  303F               	movlw	low main@buf
  1309  0781  00F2               	movwf	UART_String@letters
  1310  0782  3000               	movlw	high main@buf
  1311  0783  00F3               	movwf	UART_String@letters+1
  1312  0784  3182  225A  3186   	fcall	_UART_String
  1313                           
  1314                           ;main.c: 262: uart_xmit(10);
  1315  0787  300A               	movlw	10
  1316  0788  00F0               	movwf	uart_xmit@mydata_byte
  1317  0789  3000               	movlw	0
  1318  078A  00F1               	movwf	uart_xmit@mydata_byte+1
  1319  078B  3181  2198  3186   	fcall	_uart_xmit
  1320                           
  1321                           ;main.c: 263: uart_xmit(13);
  1322  078E  300D               	movlw	13
  1323  078F  00F0               	movwf	uart_xmit@mydata_byte
  1324  0790  3000               	movlw	0
  1325  0791  00F1               	movwf	uart_xmit@mydata_byte+1
  1326  0792  3181  2198  3186   	fcall	_uart_xmit
  1327                           
  1328                           ;main.c: 265: UART_String("Status: ");
  1329  0795  301B               	movlw	low (STR_3| (0+32768))
  1330  0796  00F2               	movwf	UART_String@letters
  1331  0797  3088               	movlw	high (STR_3| (0+32768))
  1332  0798  00F3               	movwf	UART_String@letters+1
  1333  0799  3182  225A  3186   	fcall	_UART_String
  1334                           
  1335                           ;main.c: 266: itoa(buf,GetStatus,16);
  1336  079C  3000               	movlw	0
  1337  079D  0020               	movlb	0	; select bank0
  1338  079E  00B5               	movwf	itoa@val
  1339  079F  3000               	movlw	0
  1340  07A0  00B6               	movwf	itoa@val+1
  1341  07A1  3010               	movlw	16
  1342  07A2  00B7               	movwf	itoa@base
  1343  07A3  3000               	movlw	0
  1344  07A4  00B8               	movwf	itoa@base+1
  1345  07A5  303F               	movlw	(low (main@buf| 0))& (0+255)
  1346  07A6  3182  229D  3186   	fcall	_itoa
  1347                           
  1348                           ;main.c: 267: UART_String(buf);
  1349  07A9  303F               	movlw	low main@buf
  1350  07AA  00F2               	movwf	UART_String@letters
  1351  07AB  3000               	movlw	high main@buf
  1352  07AC  00F3               	movwf	UART_String@letters+1
  1353  07AD  3182  225A  3186   	fcall	_UART_String
  1354                           
  1355                           ;main.c: 268: uart_xmit(10);
  1356  07B0  300A               	movlw	10
  1357  07B1  00F0               	movwf	uart_xmit@mydata_byte
  1358  07B2  3000               	movlw	0
  1359  07B3  00F1               	movwf	uart_xmit@mydata_byte+1
  1360  07B4  3181  2198  3186   	fcall	_uart_xmit
  1361                           
  1362                           ;main.c: 269: uart_xmit(13);
  1363  07B7  300D               	movlw	13
  1364  07B8  00F0               	movwf	uart_xmit@mydata_byte
  1365  07B9  3000               	movlw	0
  1366  07BA  00F1               	movwf	uart_xmit@mydata_byte+1
  1367  07BB  3181  2198  3186   	fcall	_uart_xmit
  1368                           
  1369                           ;main.c: 272: UART_String("CRC: ");
  1370  07BE  3024               	movlw	low (STR_4| (0+32768))
  1371  07BF  00F2               	movwf	UART_String@letters
  1372  07C0  3088               	movlw	high (STR_4| (0+32768))
  1373  07C1  00F3               	movwf	UART_String@letters+1
  1374  07C2  3182  225A  3186   	fcall	_UART_String
  1375                           
  1376                           ;main.c: 273: itoa(buf,received.crc_temp,16);
  1377  07C5  0020               	movlb	0	; select bank0
  1378  07C6  084C               	movf	main@received+4,w
  1379  07C7  00BC               	movwf	??_main
  1380  07C8  01BD               	clrf	??_main+1
  1381  07C9  083C               	movf	??_main,w
  1382  07CA  00B5               	movwf	itoa@val
  1383  07CB  083D               	movf	??_main+1,w
  1384  07CC  00B6               	movwf	itoa@val+1
  1385  07CD  3010               	movlw	16
  1386  07CE  00B7               	movwf	itoa@base
  1387  07CF  3000               	movlw	0
  1388  07D0  00B8               	movwf	itoa@base+1
  1389  07D1  303F               	movlw	(low (main@buf| 0))& (0+255)
  1390  07D2  3182  229D  3186   	fcall	_itoa
  1391                           
  1392                           ;main.c: 274: UART_String(buf);
  1393  07D5  303F               	movlw	low main@buf
  1394  07D6  00F2               	movwf	UART_String@letters
  1395  07D7  3000               	movlw	high main@buf
  1396  07D8  00F3               	movwf	UART_String@letters+1
  1397  07D9  3182  225A  3186   	fcall	_UART_String
  1398                           
  1399                           ;main.c: 275: uart_xmit(10);
  1400  07DC  300A               	movlw	10
  1401  07DD  00F0               	movwf	uart_xmit@mydata_byte
  1402  07DE  3000               	movlw	0
  1403  07DF  00F1               	movwf	uart_xmit@mydata_byte+1
  1404  07E0  3181  2198  3186   	fcall	_uart_xmit
  1405                           
  1406                           ;main.c: 276: uart_xmit(13);
  1407  07E3  300D               	movlw	13
  1408  07E4  00F0               	movwf	uart_xmit@mydata_byte
  1409  07E5  3000               	movlw	0
  1410  07E6  00F1               	movwf	uart_xmit@mydata_byte+1
  1411  07E7  3181  2198  3186   	fcall	_uart_xmit
  1412                           
  1413                           ;main.c: 279: _delay((unsigned long)((5000)*(4000000/4000.0)));
  1414  07EA  301A               	movlw	26
  1415  07EB  0020               	movlb	0	; select bank0
  1416  07EC  00BE               	movwf	??_main+2
  1417  07ED  305E               	movlw	94
  1418  07EE  00BD               	movwf	??_main+1
  1419  07EF  3086               	movlw	134
  1420  07F0  00BC               	movwf	??_main
  1421  07F1                     u1627:	
  1422  07F1  0BBC               	decfsz	??_main,f
  1423  07F2  2FF1               	goto	u1627
  1424  07F3  0BBD               	decfsz	??_main+1,f
  1425  07F4  2FF1               	goto	u1627
  1426  07F5  0BBE               	decfsz	??_main+2,f
  1427  07F6  2FF1               	goto	u1627
  1428  07F7  0000               	nop
  1429  07F8  2F17               	goto	l1689
  1430  07F9                     __end_of_main:	
  1431                           
  1432                           	psect	text1
  1433  021E                     __ptext1:	
  1434 ;; *************** function _serial_init *****************
  1435 ;; Defined at:
  1436 ;;		line 94 in file "main.c"
  1437 ;; Parameters:    Size  Location     Type
  1438 ;;		None
  1439 ;; Auto vars:     Size  Location     Type
  1440 ;;		None
  1441 ;; Return value:  Size  Location     Type
  1442 ;;		None               void
  1443 ;; Registers used:
  1444 ;;		wreg, status,2
  1445 ;; Tracked objects:
  1446 ;;		On entry : 0/0
  1447 ;;		On exit  : 0/0
  1448 ;;		Unchanged: 0/0
  1449 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1450 ;;      Params:         0       0       0       0
  1451 ;;      Locals:         0       0       0       0
  1452 ;;      Temps:          0       0       0       0
  1453 ;;      Totals:         0       0       0       0
  1454 ;;Total ram usage:        0 bytes
  1455 ;; Hardware stack levels used:    1
  1456 ;; This function calls:
  1457 ;;		Nothing
  1458 ;; This function is called by:
  1459 ;;		_main
  1460 ;; This function uses a non-reentrant model
  1461 ;;
  1462                           
  1463                           
  1464                           ;psect for function _serial_init
  1465  021E                     _serial_init:	
  1466                           
  1467                           ;main.c: 102: TXSTAbits.BRGH=1;
  1468                           
  1469                           ;incstack = 0
  1470                           ; Regs used in _serial_init: [wreg+status,2]
  1471  021E  0023               	movlb	3	; select bank3
  1472  021F  151E               	bsf	30,2	;volatile
  1473                           
  1474                           ;main.c: 103: TXSTAbits.TX9=0;
  1475  0220  131E               	bcf	30,6	;volatile
  1476                           
  1477                           ;main.c: 104: TXSTAbits.TXEN = 1;
  1478  0221  169E               	bsf	30,5	;volatile
  1479                           
  1480                           ;main.c: 106: RCSTAbits.SPEN=1;
  1481  0222  179D               	bsf	29,7	;volatile
  1482                           
  1483                           ;main.c: 107: RCSTAbits.RX9=0;
  1484  0223  131D               	bcf	29,6	;volatile
  1485                           
  1486                           ;main.c: 108: RCSTAbits.CREN=1;
  1487  0224  161D               	bsf	29,4	;volatile
  1488                           
  1489                           ;main.c: 110: SPBRGL=25;
  1490  0225  3019               	movlw	25
  1491  0226  009B               	movwf	27	;volatile
  1492                           
  1493                           ;main.c: 111: SPBRGH=0;
  1494  0227  019C               	clrf	28	;volatile
  1495                           
  1496                           ;main.c: 113: PIR1bits.RCIF=0;
  1497  0228  0020               	movlb	0	; select bank0
  1498  0229  1291               	bcf	17,5	;volatile
  1499                           
  1500                           ;main.c: 114: PIE1bits.RCIE=1;
  1501  022A  0021               	movlb	1	; select bank1
  1502  022B  1691               	bsf	17,5	;volatile
  1503                           
  1504                           ;main.c: 115: INTCONbits.PEIE = 1;
  1505  022C  170B               	bsf	11,6	;volatile
  1506                           
  1507                           ;main.c: 116: INTCONbits.GIE = 1;
  1508  022D  178B               	bsf	11,7	;volatile
  1509  022E  0008               	return
  1510  022F                     __end_of_serial_init:	
  1511                           
  1512                           	psect	text2
  1513  029D                     __ptext2:	
  1514 ;; *************** function _itoa *****************
  1515 ;; Defined at:
  1516 ;;		line 4 in file "/opt/microchip/xc8/v1.35/sources/common/itoa.c"
  1517 ;; Parameters:    Size  Location     Type
  1518 ;;  buf             1    wreg     PTR unsigned char 
  1519 ;;		 -> main@buf(9), 
  1520 ;;  val             2   21[BANK0 ] int 
  1521 ;;  base            2   23[BANK0 ] int 
  1522 ;; Auto vars:     Size  Location     Type
  1523 ;;  buf             1   27[BANK0 ] PTR unsigned char 
  1524 ;;		 -> main@buf(9), 
  1525 ;;  cp              1   26[BANK0 ] PTR unsigned char 
  1526 ;;		 -> main@buf(9), 
  1527 ;; Return value:  Size  Location     Type
  1528 ;;                  1    wreg      PTR unsigned char 
  1529 ;; Registers used:
  1530 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1531 ;; Tracked objects:
  1532 ;;		On entry : 0/0
  1533 ;;		On exit  : 0/0
  1534 ;;		Unchanged: 0/0
  1535 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1536 ;;      Params:         0       4       0       0
  1537 ;;      Locals:         0       2       0       0
  1538 ;;      Temps:          0       1       0       0
  1539 ;;      Totals:         0       7       0       0
  1540 ;;Total ram usage:        7 bytes
  1541 ;; Hardware stack levels used:    1
  1542 ;; Hardware stack levels required when called:    2
  1543 ;; This function calls:
  1544 ;;		_utoa
  1545 ;; This function is called by:
  1546 ;;		_main
  1547 ;; This function uses a non-reentrant model
  1548 ;;
  1549                           
  1550                           
  1551                           ;psect for function _itoa
  1552  029D                     _itoa:	
  1553                           
  1554                           ;incstack = 0
  1555                           ; Regs used in _itoa: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  1556                           ;itoa@buf stored from wreg
  1557  029D  0020               	movlb	0	; select bank0
  1558  029E  00BB               	movwf	itoa@buf
  1559  029F  083B               	movf	itoa@buf,w
  1560  02A0  00B9               	movwf	??_itoa
  1561  02A1  0839               	movf	??_itoa,w
  1562  02A2  00BA               	movwf	itoa@cp
  1563  02A3  1FB6               	btfss	itoa@val+1,7
  1564  02A4  2AB5               	goto	l1635
  1565  02A5  302D               	movlw	45
  1566  02A6  00B9               	movwf	??_itoa
  1567  02A7  083B               	movf	itoa@buf,w
  1568  02A8  0086               	movwf	6
  1569  02A9  0187               	clrf	7
  1570  02AA  0839               	movf	??_itoa,w
  1571  02AB  0081               	movwf	1
  1572  02AC  3001               	movlw	1
  1573  02AD  00B9               	movwf	??_itoa
  1574  02AE  0839               	movf	??_itoa,w
  1575  02AF  07BB               	addwf	itoa@buf,f
  1576  02B0  09B5               	comf	itoa@val,f
  1577  02B1  09B6               	comf	itoa@val+1,f
  1578  02B2  0AB5               	incf	itoa@val,f
  1579  02B3  1903               	skipnz
  1580  02B4  0AB6               	incf	itoa@val+1,f
  1581  02B5                     l1635:	
  1582  02B5  0836               	movf	itoa@val+1,w
  1583  02B6  00F9               	movwf	utoa@val+1
  1584  02B7  0835               	movf	itoa@val,w
  1585  02B8  00F8               	movwf	utoa@val
  1586  02B9  0838               	movf	itoa@base+1,w
  1587  02BA  00FB               	movwf	utoa@base+1
  1588  02BB  0837               	movf	itoa@base,w
  1589  02BC  00FA               	movwf	utoa@base
  1590  02BD  083B               	movf	itoa@buf,w
  1591  02BE  3183  238E         	fcall	_utoa
  1592  02C0  0008               	return
  1593  02C1                     __end_of_itoa:	
  1594                           ;	Return value of _itoa is never used
  1595                           
  1596                           
  1597                           	psect	text3
  1598  038E                     __ptext3:	
  1599 ;; *************** function _utoa *****************
  1600 ;; Defined at:
  1601 ;;		line 17 in file "/opt/microchip/xc8/v1.35/sources/common/itoa.c"
  1602 ;; Parameters:    Size  Location     Type
  1603 ;;  buf             1    wreg     PTR unsigned char 
  1604 ;;		 -> main@buf(9), 
  1605 ;;  val             2    8[COMMON] unsigned int 
  1606 ;;  base            2   10[COMMON] int 
  1607 ;; Auto vars:     Size  Location     Type
  1608 ;;  buf             1    3[BANK0 ] PTR unsigned char 
  1609 ;;		 -> main@buf(9), 
  1610 ;;  v               2    0[BANK0 ] unsigned int 
  1611 ;;  c               1    2[BANK0 ] unsigned char 
  1612 ;; Return value:  Size  Location     Type
  1613 ;;                  1    wreg      PTR unsigned char 
  1614 ;; Registers used:
  1615 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1616 ;; Tracked objects:
  1617 ;;		On entry : 0/0
  1618 ;;		On exit  : 0/0
  1619 ;;		Unchanged: 0/0
  1620 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1621 ;;      Params:         4       0       0       0
  1622 ;;      Locals:         0       4       0       0
  1623 ;;      Temps:          1       0       0       0
  1624 ;;      Totals:         5       4       0       0
  1625 ;;Total ram usage:        9 bytes
  1626 ;; Hardware stack levels used:    1
  1627 ;; Hardware stack levels required when called:    1
  1628 ;; This function calls:
  1629 ;;		___lwdiv
  1630 ;;		___lwmod
  1631 ;; This function is called by:
  1632 ;;		_itoa
  1633 ;; This function uses a non-reentrant model
  1634 ;;
  1635                           
  1636                           
  1637                           ;psect for function _utoa
  1638  038E                     _utoa:	
  1639                           
  1640                           ;incstack = 0
  1641                           ; Regs used in _utoa: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  1642                           ;utoa@buf stored from wreg
  1643  038E  0020               	movlb	0	; select bank0
  1644  038F  00A3               	movwf	utoa@buf
  1645  0390  0879               	movf	utoa@val+1,w
  1646  0391  00A1               	movwf	utoa@v+1
  1647  0392  0878               	movf	utoa@val,w
  1648  0393  00A0               	movwf	utoa@v
  1649  0394                     l1473:	
  1650  0394  087B               	movf	utoa@base+1,w
  1651  0395  00F1               	movwf	___lwdiv@divisor+1
  1652  0396  087A               	movf	utoa@base,w
  1653  0397  00F0               	movwf	___lwdiv@divisor
  1654  0398  0821               	movf	utoa@v+1,w
  1655  0399  00F3               	movwf	___lwdiv@dividend+1
  1656  039A  0820               	movf	utoa@v,w
  1657  039B  00F2               	movwf	___lwdiv@dividend
  1658  039C  3183  2317  3183   	fcall	___lwdiv
  1659  039F  0871               	movf	?___lwdiv+1,w
  1660  03A0  0020               	movlb	0	; select bank0
  1661  03A1  00A1               	movwf	utoa@v+1
  1662  03A2  0870               	movf	?___lwdiv,w
  1663  03A3  00A0               	movwf	utoa@v
  1664  03A4  3001               	movlw	1
  1665  03A5  00FC               	movwf	??_utoa
  1666  03A6  087C               	movf	??_utoa,w
  1667  03A7  07A3               	addwf	utoa@buf,f
  1668  03A8  0820               	movf	utoa@v,w
  1669  03A9  0421               	iorwf	utoa@v+1,w
  1670  03AA  1D03               	btfss	3,2
  1671  03AB  2B94               	goto	l1473
  1672  03AC  0823               	movf	utoa@buf,w
  1673  03AD  0086               	movwf	6
  1674  03AE  0187               	clrf	7
  1675  03AF  0181               	clrf	1
  1676  03B0  3001               	movlw	1
  1677  03B1  02A3               	subwf	utoa@buf,f
  1678  03B2                     l1483:	
  1679  03B2  087B               	movf	utoa@base+1,w
  1680  03B3  00F1               	movwf	___lwmod@divisor+1
  1681  03B4  087A               	movf	utoa@base,w
  1682  03B5  00F0               	movwf	___lwmod@divisor
  1683  03B6  0879               	movf	utoa@val+1,w
  1684  03B7  00F3               	movwf	___lwmod@dividend+1
  1685  03B8  0878               	movf	utoa@val,w
  1686  03B9  00F2               	movwf	___lwmod@dividend
  1687  03BA  3182  22EB  3183   	fcall	___lwmod
  1688  03BD  0870               	movf	?___lwmod,w
  1689  03BE  00FC               	movwf	??_utoa
  1690  03BF  087C               	movf	??_utoa,w
  1691  03C0  0020               	movlb	0	; select bank0
  1692  03C1  00A2               	movwf	utoa@c
  1693  03C2  087B               	movf	utoa@base+1,w
  1694  03C3  00F1               	movwf	___lwdiv@divisor+1
  1695  03C4  087A               	movf	utoa@base,w
  1696  03C5  00F0               	movwf	___lwdiv@divisor
  1697  03C6  0879               	movf	utoa@val+1,w
  1698  03C7  00F3               	movwf	___lwdiv@dividend+1
  1699  03C8  0878               	movf	utoa@val,w
  1700  03C9  00F2               	movwf	___lwdiv@dividend
  1701  03CA  3183  2317  3183   	fcall	___lwdiv
  1702  03CD  0871               	movf	?___lwdiv+1,w
  1703  03CE  00F9               	movwf	utoa@val+1
  1704  03CF  0870               	movf	?___lwdiv,w
  1705  03D0  00F8               	movwf	utoa@val
  1706  03D1  300A               	movlw	10
  1707  03D2  0020               	movlb	0	; select bank0
  1708  03D3  0222               	subwf	utoa@c,w
  1709  03D4  1C03               	skipc
  1710  03D5  2BDA               	goto	l484
  1711  03D6  3007               	movlw	7
  1712  03D7  00FC               	movwf	??_utoa
  1713  03D8  087C               	movf	??_utoa,w
  1714  03D9  07A2               	addwf	utoa@c,f
  1715  03DA                     l484:	
  1716  03DA  3030               	movlw	48
  1717  03DB  00FC               	movwf	??_utoa
  1718  03DC  087C               	movf	??_utoa,w
  1719  03DD  07A2               	addwf	utoa@c,f
  1720  03DE  0822               	movf	utoa@c,w
  1721  03DF  00FC               	movwf	??_utoa
  1722  03E0  0823               	movf	utoa@buf,w
  1723  03E1  0086               	movwf	6
  1724  03E2  0187               	clrf	7
  1725  03E3  087C               	movf	??_utoa,w
  1726  03E4  0081               	movwf	1
  1727  03E5  3001               	movlw	1
  1728  03E6  02A3               	subwf	utoa@buf,f
  1729  03E7  0878               	movf	utoa@val,w
  1730  03E8  0479               	iorwf	utoa@val+1,w
  1731  03E9  1D03               	btfss	3,2
  1732  03EA  2BB2               	goto	l1483
  1733                           
  1734                           ;	Return value of _utoa is never used
  1735  03EB  3001               	movlw	1
  1736  03EC  00FC               	movwf	??_utoa
  1737  03ED  087C               	movf	??_utoa,w
  1738  03EE  07A3               	addwf	utoa@buf,f
  1739  03EF  0008               	return
  1740  03F0                     __end_of_utoa:	
  1741                           
  1742                           	psect	text4
  1743  02EB                     __ptext4:	
  1744 ;; *************** function ___lwmod *****************
  1745 ;; Defined at:
  1746 ;;		line 6 in file "/opt/microchip/xc8/v1.35/sources/common/lwmod.c"
  1747 ;; Parameters:    Size  Location     Type
  1748 ;;  divisor         2    0[COMMON] unsigned int 
  1749 ;;  dividend        2    2[COMMON] unsigned int 
  1750 ;; Auto vars:     Size  Location     Type
  1751 ;;  counter         1    5[COMMON] unsigned char 
  1752 ;; Return value:  Size  Location     Type
  1753 ;;                  2    0[COMMON] unsigned int 
  1754 ;; Registers used:
  1755 ;;		wreg, status,2, status,0
  1756 ;; Tracked objects:
  1757 ;;		On entry : 0/0
  1758 ;;		On exit  : 0/0
  1759 ;;		Unchanged: 0/0
  1760 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1761 ;;      Params:         4       0       0       0
  1762 ;;      Locals:         1       0       0       0
  1763 ;;      Temps:          1       0       0       0
  1764 ;;      Totals:         6       0       0       0
  1765 ;;Total ram usage:        6 bytes
  1766 ;; Hardware stack levels used:    1
  1767 ;; This function calls:
  1768 ;;		Nothing
  1769 ;; This function is called by:
  1770 ;;		_utoa
  1771 ;; This function uses a non-reentrant model
  1772 ;;
  1773                           
  1774                           
  1775                           ;psect for function ___lwmod
  1776  02EB                     ___lwmod:	
  1777                           
  1778                           ;incstack = 0
  1779                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  1780  02EB  0870               	movf	___lwmod@divisor,w
  1781  02EC  0471               	iorwf	___lwmod@divisor+1,w
  1782  02ED  1903               	btfsc	3,2
  1783  02EE  2B12               	goto	l1275
  1784  02EF  01F5               	clrf	___lwmod@counter
  1785  02F0  0AF5               	incf	___lwmod@counter,f
  1786  02F1                     l1265:	
  1787  02F1  1BF1               	btfsc	___lwmod@divisor+1,7
  1788  02F2  2AFD               	goto	l1267
  1789  02F3  3001               	movlw	1
  1790  02F4                     u1065:	
  1791  02F4  35F0               	lslf	___lwmod@divisor,f
  1792  02F5  0DF1               	rlf	___lwmod@divisor+1,f
  1793  02F6  0B89               	decfsz	9,f
  1794  02F7  2AF4               	goto	u1065
  1795  02F8  3001               	movlw	1
  1796  02F9  00F4               	movwf	??___lwmod
  1797  02FA  0874               	movf	??___lwmod,w
  1798  02FB  07F5               	addwf	___lwmod@counter,f
  1799  02FC  2AF1               	goto	l1265
  1800  02FD                     l1267:	
  1801  02FD  0871               	movf	___lwmod@divisor+1,w
  1802  02FE  0273               	subwf	___lwmod@dividend+1,w
  1803  02FF  1D03               	skipz
  1804  0300  2B03               	goto	u1085
  1805  0301  0870               	movf	___lwmod@divisor,w
  1806  0302  0272               	subwf	___lwmod@dividend,w
  1807  0303                     u1085:	
  1808  0303  1C03               	skipc
  1809  0304  2B09               	goto	l1271
  1810  0305  0870               	movf	___lwmod@divisor,w
  1811  0306  02F2               	subwf	___lwmod@dividend,f
  1812  0307  0871               	movf	___lwmod@divisor+1,w
  1813  0308  3BF3               	subwfb	___lwmod@dividend+1,f
  1814  0309                     l1271:	
  1815  0309  3001               	movlw	1
  1816  030A                     u1095:	
  1817  030A  36F1               	lsrf	___lwmod@divisor+1,f
  1818  030B  0CF0               	rrf	___lwmod@divisor,f
  1819  030C  0B89               	decfsz	9,f
  1820  030D  2B0A               	goto	u1095
  1821  030E  3001               	movlw	1
  1822  030F  02F5               	subwf	___lwmod@counter,f
  1823  0310  1D03               	btfss	3,2
  1824  0311  2AFD               	goto	l1267
  1825  0312                     l1275:	
  1826  0312  0873               	movf	___lwmod@dividend+1,w
  1827  0313  00F1               	movwf	?___lwmod+1
  1828  0314  0872               	movf	___lwmod@dividend,w
  1829  0315  00F0               	movwf	?___lwmod
  1830  0316  0008               	return
  1831  0317                     __end_of___lwmod:	
  1832                           
  1833                           	psect	text5
  1834  0317                     __ptext5:	
  1835 ;; *************** function ___lwdiv *****************
  1836 ;; Defined at:
  1837 ;;		line 6 in file "/opt/microchip/xc8/v1.35/sources/common/lwdiv.c"
  1838 ;; Parameters:    Size  Location     Type
  1839 ;;  divisor         2    0[COMMON] unsigned int 
  1840 ;;  dividend        2    2[COMMON] unsigned int 
  1841 ;; Auto vars:     Size  Location     Type
  1842 ;;  quotient        2    5[COMMON] unsigned int 
  1843 ;;  counter         1    7[COMMON] unsigned char 
  1844 ;; Return value:  Size  Location     Type
  1845 ;;                  2    0[COMMON] unsigned int 
  1846 ;; Registers used:
  1847 ;;		wreg, status,2, status,0
  1848 ;; Tracked objects:
  1849 ;;		On entry : 0/0
  1850 ;;		On exit  : 0/0
  1851 ;;		Unchanged: 0/0
  1852 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1853 ;;      Params:         4       0       0       0
  1854 ;;      Locals:         3       0       0       0
  1855 ;;      Temps:          1       0       0       0
  1856 ;;      Totals:         8       0       0       0
  1857 ;;Total ram usage:        8 bytes
  1858 ;; Hardware stack levels used:    1
  1859 ;; This function calls:
  1860 ;;		Nothing
  1861 ;; This function is called by:
  1862 ;;		_utoa
  1863 ;; This function uses a non-reentrant model
  1864 ;;
  1865                           
  1866                           
  1867                           ;psect for function ___lwdiv
  1868  0317                     ___lwdiv:	
  1869                           
  1870                           ;incstack = 0
  1871                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  1872  0317  01F5               	clrf	___lwdiv@quotient
  1873  0318  01F6               	clrf	___lwdiv@quotient+1
  1874  0319  0870               	movf	___lwdiv@divisor,w
  1875  031A  0471               	iorwf	___lwdiv@divisor+1,w
  1876  031B  1903               	btfsc	3,2
  1877  031C  2B46               	goto	l1253
  1878  031D  01F7               	clrf	___lwdiv@counter
  1879  031E  0AF7               	incf	___lwdiv@counter,f
  1880  031F                     l1241:	
  1881  031F  1BF1               	btfsc	___lwdiv@divisor+1,7
  1882  0320  2B2B               	goto	l1243
  1883  0321  3001               	movlw	1
  1884  0322                     u995:	
  1885  0322  35F0               	lslf	___lwdiv@divisor,f
  1886  0323  0DF1               	rlf	___lwdiv@divisor+1,f
  1887  0324  0B89               	decfsz	9,f
  1888  0325  2B22               	goto	u995
  1889  0326  3001               	movlw	1
  1890  0327  00F4               	movwf	??___lwdiv
  1891  0328  0874               	movf	??___lwdiv,w
  1892  0329  07F7               	addwf	___lwdiv@counter,f
  1893  032A  2B1F               	goto	l1241
  1894  032B                     l1243:	
  1895  032B  3001               	movlw	1
  1896  032C                     u1015:	
  1897  032C  35F5               	lslf	___lwdiv@quotient,f
  1898  032D  0DF6               	rlf	___lwdiv@quotient+1,f
  1899  032E  0B89               	decfsz	9,f
  1900  032F  2B2C               	goto	u1015
  1901  0330  0871               	movf	___lwdiv@divisor+1,w
  1902  0331  0273               	subwf	___lwdiv@dividend+1,w
  1903  0332  1D03               	skipz
  1904  0333  2B36               	goto	u1025
  1905  0334  0870               	movf	___lwdiv@divisor,w
  1906  0335  0272               	subwf	___lwdiv@dividend,w
  1907  0336                     u1025:	
  1908  0336  1C03               	skipc
  1909  0337  2B3D               	goto	l1249
  1910  0338  0870               	movf	___lwdiv@divisor,w
  1911  0339  02F2               	subwf	___lwdiv@dividend,f
  1912  033A  0871               	movf	___lwdiv@divisor+1,w
  1913  033B  3BF3               	subwfb	___lwdiv@dividend+1,f
  1914  033C  1475               	bsf	___lwdiv@quotient,0
  1915  033D                     l1249:	
  1916  033D  3001               	movlw	1
  1917  033E                     u1035:	
  1918  033E  36F1               	lsrf	___lwdiv@divisor+1,f
  1919  033F  0CF0               	rrf	___lwdiv@divisor,f
  1920  0340  0B89               	decfsz	9,f
  1921  0341  2B3E               	goto	u1035
  1922  0342  3001               	movlw	1
  1923  0343  02F7               	subwf	___lwdiv@counter,f
  1924  0344  1D03               	btfss	3,2
  1925  0345  2B2B               	goto	l1243
  1926  0346                     l1253:	
  1927  0346  0876               	movf	___lwdiv@quotient+1,w
  1928  0347  00F1               	movwf	?___lwdiv+1
  1929  0348  0875               	movf	___lwdiv@quotient,w
  1930  0349  00F0               	movwf	?___lwdiv
  1931  034A  0008               	return
  1932  034B                     __end_of___lwdiv:	
  1933                           
  1934                           	psect	text6
  1935  0242                     __ptext6:	
  1936 ;; *************** function _init_io *****************
  1937 ;; Defined at:
  1938 ;;		line 60 in file "main.c"
  1939 ;; Parameters:    Size  Location     Type
  1940 ;;		None
  1941 ;; Auto vars:     Size  Location     Type
  1942 ;;		None
  1943 ;; Return value:  Size  Location     Type
  1944 ;;		None               void
  1945 ;; Registers used:
  1946 ;;		status,2
  1947 ;; Tracked objects:
  1948 ;;		On entry : 0/0
  1949 ;;		On exit  : 0/0
  1950 ;;		Unchanged: 0/0
  1951 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1952 ;;      Params:         0       0       0       0
  1953 ;;      Locals:         0       0       0       0
  1954 ;;      Temps:          0       0       0       0
  1955 ;;      Totals:         0       0       0       0
  1956 ;;Total ram usage:        0 bytes
  1957 ;; Hardware stack levels used:    1
  1958 ;; This function calls:
  1959 ;;		Nothing
  1960 ;; This function is called by:
  1961 ;;		_main
  1962 ;; This function uses a non-reentrant model
  1963 ;;
  1964                           
  1965                           
  1966                           ;psect for function _init_io
  1967  0242                     _init_io:	
  1968                           
  1969                           ;main.c: 62: ANSELA = 0x00;
  1970                           
  1971                           ;incstack = 0
  1972                           ; Regs used in _init_io: [status,2]
  1973  0242  0023               	movlb	3	; select bank3
  1974  0243  018C               	clrf	12	;volatile
  1975                           
  1976                           ;main.c: 63: ANSELB = 0x00;
  1977  0244  018D               	clrf	13	;volatile
  1978                           
  1979                           ;main.c: 64: ANSELC = 0x00;
  1980  0245  018E               	clrf	14	;volatile
  1981                           
  1982                           ;main.c: 66: TRISAbits.TRISA0 = 1;
  1983  0246  0021               	movlb	1	; select bank1
  1984  0247  140C               	bsf	12,0	;volatile
  1985                           
  1986                           ;main.c: 67: TRISAbits.TRISA1 = 1;
  1987  0248  148C               	bsf	12,1	;volatile
  1988                           
  1989                           ;main.c: 68: TRISAbits.TRISA2 = 1;
  1990  0249  150C               	bsf	12,2	;volatile
  1991                           
  1992                           ;main.c: 69: TRISAbits.TRISA3 = 1;
  1993  024A  158C               	bsf	12,3	;volatile
  1994                           
  1995                           ;main.c: 70: TRISAbits.TRISA4 = 1;
  1996  024B  160C               	bsf	12,4	;volatile
  1997                           
  1998                           ;main.c: 71: TRISAbits.TRISA5 = 1;
  1999  024C  168C               	bsf	12,5	;volatile
  2000                           
  2001                           ;main.c: 75: TRISCbits.TRISC0 = 0;
  2002  024D  100E               	bcf	14,0	;volatile
  2003                           
  2004                           ;main.c: 76: TRISCbits.TRISC1 = 0;
  2005  024E  108E               	bcf	14,1	;volatile
  2006                           
  2007                           ;main.c: 77: TRISCbits.TRISC2 = 0;
  2008  024F  110E               	bcf	14,2	;volatile
  2009                           
  2010                           ;main.c: 78: TRISCbits.TRISC3 = 0;
  2011  0250  118E               	bcf	14,3	;volatile
  2012                           
  2013                           ;main.c: 79: TRISCbits.TRISC4 = 0;
  2014  0251  120E               	bcf	14,4	;volatile
  2015                           
  2016                           ;main.c: 80: TRISCbits.TRISC5 = 0;
  2017  0252  128E               	bcf	14,5	;volatile
  2018                           
  2019                           ;main.c: 81: TRISCbits.TRISC6 = 0;
  2020  0253  130E               	bcf	14,6	;volatile
  2021                           
  2022                           ;main.c: 82: TRISCbits.TRISC7 = 0;
  2023  0254  138E               	bcf	14,7	;volatile
  2024                           
  2025                           ;main.c: 84: LATCbits.LATC0 = 1;
  2026  0255  0022               	movlb	2	; select bank2
  2027  0256  140E               	bsf	14,0	;volatile
  2028                           
  2029                           ;main.c: 85: LATCbits.LATC1 = 0;
  2030  0257  108E               	bcf	14,1	;volatile
  2031                           
  2032                           ;main.c: 86: LATCbits.LATC2 = 0;
  2033  0258  110E               	bcf	14,2	;volatile
  2034  0259  0008               	return
  2035  025A                     __end_of_init_io:	
  2036                           
  2037                           	psect	text7
  2038  025A                     __ptext7:	
  2039 ;; *************** function _UART_String *****************
  2040 ;; Defined at:
  2041 ;;		line 215 in file "main.c"
  2042 ;; Parameters:    Size  Location     Type
  2043 ;;  letters         2    2[COMMON] PTR unsigned char 
  2044 ;;		 -> STR_4(6), STR_3(9), STR_2(11), main@buf(9), 
  2045 ;;		 -> STR_1(14), 
  2046 ;; Auto vars:     Size  Location     Type
  2047 ;;  i               2    6[COMMON] int 
  2048 ;; Return value:  Size  Location     Type
  2049 ;;		None               void
  2050 ;; Registers used:
  2051 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2052 ;; Tracked objects:
  2053 ;;		On entry : 0/0
  2054 ;;		On exit  : 0/0
  2055 ;;		Unchanged: 0/0
  2056 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2057 ;;      Params:         2       0       0       0
  2058 ;;      Locals:         2       0       0       0
  2059 ;;      Temps:          2       0       0       0
  2060 ;;      Totals:         6       0       0       0
  2061 ;;Total ram usage:        6 bytes
  2062 ;; Hardware stack levels used:    1
  2063 ;; Hardware stack levels required when called:    1
  2064 ;; This function calls:
  2065 ;;		_uart_xmit
  2066 ;; This function is called by:
  2067 ;;		_main
  2068 ;; This function uses a non-reentrant model
  2069 ;;
  2070                           
  2071                           
  2072                           ;psect for function _UART_String
  2073  025A                     _UART_String:	
  2074                           
  2075                           ;main.c: 216: int i = 0;
  2076                           
  2077                           ;incstack = 0
  2078                           ; Regs used in _UART_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2079  025A  01F6               	clrf	UART_String@i
  2080  025B  01F7               	clrf	UART_String@i+1
  2081  025C                     l1619:	
  2082                           ;main.c: 217: while(letters[i] != 0) {
  2083                           
  2084  025C  0872               	movf	UART_String@letters,w
  2085  025D  0776               	addwf	UART_String@i,w
  2086  025E  0084               	movwf	4
  2087  025F  0873               	movf	UART_String@letters+1,w
  2088  0260  3D77               	addwfc	UART_String@i+1,w
  2089  0261  0085               	movwf	5
  2090  0262  0012               	moviw fsr0++
  2091  0263  1903               	btfsc	3,2
  2092  0264  0008               	return
  2093                           
  2094                           ;main.c: 218: uart_xmit(letters[i++]);
  2095  0265  0872               	movf	UART_String@letters,w
  2096  0266  0776               	addwf	UART_String@i,w
  2097  0267  0084               	movwf	4
  2098  0268  0873               	movf	UART_String@letters+1,w
  2099  0269  3D77               	addwfc	UART_String@i+1,w
  2100  026A  0085               	movwf	5
  2101  026B  0800               	movf	0,w	;code access
  2102  026C  00F4               	movwf	??_UART_String
  2103  026D  01F5               	clrf	??_UART_String+1
  2104  026E  0874               	movf	??_UART_String,w
  2105  026F  00F0               	movwf	uart_xmit@mydata_byte
  2106  0270  0875               	movf	??_UART_String+1,w
  2107  0271  00F1               	movwf	uart_xmit@mydata_byte+1
  2108  0272  3181  2198  3182   	fcall	_uart_xmit
  2109  0275  3001               	movlw	1
  2110  0276  07F6               	addwf	UART_String@i,f
  2111  0277  3000               	movlw	0
  2112  0278  3DF7               	addwfc	UART_String@i+1,f
  2113  0279  2A5C               	goto	l1619
  2114  027A                     __end_of_UART_String:	
  2115                           
  2116                           	psect	text8
  2117  0198                     __ptext8:	
  2118 ;; *************** function _uart_xmit *****************
  2119 ;; Defined at:
  2120 ;;		line 89 in file "main.c"
  2121 ;; Parameters:    Size  Location     Type
  2122 ;;  mydata_byte     2    0[COMMON] unsigned int 
  2123 ;; Auto vars:     Size  Location     Type
  2124 ;;		None
  2125 ;; Return value:  Size  Location     Type
  2126 ;;		None               void
  2127 ;; Registers used:
  2128 ;;		wreg
  2129 ;; Tracked objects:
  2130 ;;		On entry : 0/0
  2131 ;;		On exit  : 0/0
  2132 ;;		Unchanged: 0/0
  2133 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2134 ;;      Params:         2       0       0       0
  2135 ;;      Locals:         0       0       0       0
  2136 ;;      Temps:          0       0       0       0
  2137 ;;      Totals:         2       0       0       0
  2138 ;;Total ram usage:        2 bytes
  2139 ;; Hardware stack levels used:    1
  2140 ;; This function calls:
  2141 ;;		Nothing
  2142 ;; This function is called by:
  2143 ;;		_UART_String
  2144 ;;		_main
  2145 ;; This function uses a non-reentrant model
  2146 ;;
  2147                           
  2148                           
  2149                           ;psect for function _uart_xmit
  2150  0198                     _uart_xmit:	
  2151  0198                     l74:	
  2152                           ;main.c: 91: while(!TXSTAbits.TRMT);
  2153                           
  2154                           ;incstack = 0
  2155                           ; Regs used in _uart_xmit: [wreg]
  2156                           
  2157  0198  0023               	movlb	3	; select bank3
  2158  0199  1C9E               	btfss	30,1	;volatile
  2159  019A  2998               	goto	l74
  2160                           
  2161                           ;main.c: 92: TXREG = mydata_byte;
  2162  019B  0870               	movf	uart_xmit@mydata_byte,w
  2163  019C  009A               	movwf	26	;volatile
  2164  019D  0008               	return
  2165  019E                     __end_of_uart_xmit:	
  2166                           
  2167                           	psect	text9
  2168  0192                     __ptext9:	
  2169 ;; *************** function _I2C_Init *****************
  2170 ;; Defined at:
  2171 ;;		line 6 in file "i2c.c"
  2172 ;; Parameters:    Size  Location     Type
  2173 ;;		None
  2174 ;; Auto vars:     Size  Location     Type
  2175 ;;		None
  2176 ;; Return value:  Size  Location     Type
  2177 ;;		None               void
  2178 ;; Registers used:
  2179 ;;		None
  2180 ;; Tracked objects:
  2181 ;;		On entry : 0/0
  2182 ;;		On exit  : 0/0
  2183 ;;		Unchanged: 0/0
  2184 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2185 ;;      Params:         0       0       0       0
  2186 ;;      Locals:         0       0       0       0
  2187 ;;      Temps:          0       0       0       0
  2188 ;;      Totals:         0       0       0       0
  2189 ;;Total ram usage:        0 bytes
  2190 ;; Hardware stack levels used:    1
  2191 ;; This function calls:
  2192 ;;		Nothing
  2193 ;; This function is called by:
  2194 ;;		_main
  2195 ;; This function uses a non-reentrant model
  2196 ;;
  2197                           
  2198                           
  2199                           ;psect for function _I2C_Init
  2200  0192                     _I2C_Init:	
  2201                           
  2202                           ;i2c.c: 8: TRISBbits.TRISB4 = 1;
  2203                           
  2204                           ;incstack = 0
  2205                           ; Regs used in _I2C_Init: []
  2206  0192  0021               	movlb	1	; select bank1
  2207  0193  160D               	bsf	13,4	;volatile
  2208                           
  2209                           ;i2c.c: 9: TRISBbits.TRISB5 = 1;
  2210  0194  168D               	bsf	13,5	;volatile
  2211                           
  2212                           ;i2c.c: 10: TRISBbits.TRISB6 = 1;
  2213  0195  170D               	bsf	13,6	;volatile
  2214                           
  2215                           ;i2c.c: 11: TRISBbits.TRISB7 = 0;
  2216  0196  138D               	bcf	13,7	;volatile
  2217  0197  0008               	return
  2218  0198                     __end_of_I2C_Init:	
  2219                           
  2220                           	psect	text10
  2221  0636                     __ptext10:	
  2222 ;; *************** function _GetReading *****************
  2223 ;; Defined at:
  2224 ;;		line 160 in file "main.c"
  2225 ;; Parameters:    Size  Location     Type
  2226 ;;		None
  2227 ;; Auto vars:     Size  Location     Type
  2228 ;;  local           8    8[BANK0 ] struct sht_return
  2229 ;;  crc_gen         1    7[BANK0 ] unsigned char 
  2230 ;;  bl              1    6[BANK0 ] unsigned char 
  2231 ;;  bh              1    5[BANK0 ] unsigned char 
  2232 ;; Return value:  Size  Location     Type
  2233 ;;                  8    6[COMMON] struct sht_return
  2234 ;; Registers used:
  2235 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2236 ;; Tracked objects:
  2237 ;;		On entry : 0/0
  2238 ;;		On exit  : 0/0
  2239 ;;		Unchanged: 0/0
  2240 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2241 ;;      Params:         8       0       0       0
  2242 ;;      Locals:         0      11       0       0
  2243 ;;      Temps:          0       5       0       0
  2244 ;;      Totals:         8      16       0       0
  2245 ;;Total ram usage:       24 bytes
  2246 ;; Hardware stack levels used:    1
  2247 ;; Hardware stack levels required when called:    2
  2248 ;; This function calls:
  2249 ;;		_I2C_ACK
  2250 ;;		_I2C_Cmd
  2251 ;;		_I2C_Control_Read
  2252 ;;		_I2C_NAK
  2253 ;;		_I2C_Stop_Bit
  2254 ;;		_I2C_restart
  2255 ;;		_RX_I2C_Data
  2256 ;;		_doCRC
  2257 ;; This function is called by:
  2258 ;;		_main
  2259 ;; This function uses a non-reentrant model
  2260 ;;
  2261                           
  2262                           
  2263                           ;psect for function _GetReading
  2264  0636                     _GetReading:	
  2265                           
  2266                           ;main.c: 161: Sht_rtn local;
  2267                           ;main.c: 162: unsigned char bh,bl;
  2268                           ;main.c: 163: unsigned char crc_gen = 0xFF;
  2269                           
  2270                           ;incstack = 0
  2271                           ; Regs used in _GetReading: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2272  0636  30FF               	movlw	255
  2273  0637  0020               	movlb	0	; select bank0
  2274  0638  00A0               	movwf	??_GetReading
  2275  0639  0820               	movf	??_GetReading,w
  2276  063A  00A7               	movwf	GetReading@crc_gen
  2277                           
  2278                           ;main.c: 166: I2C_Cmd(CommandB1,CommandB2);
  2279  063B  3001               	movlw	low (_CommandB2| (0+32768))
  2280  063C  0084               	movwf	4
  2281  063D  3088               	movlw	high (_CommandB2| (0+32768))
  2282  063E  0085               	movwf	5
  2283  063F  0800               	movf	0,w	;code access
  2284  0640  00A0               	movwf	??_GetReading
  2285  0641  0820               	movf	??_GetReading,w
  2286  0642  00F2               	movwf	I2C_Cmd@b2
  2287  0643  3000               	movlw	low (_CommandB1| (0+32768))
  2288  0644  0084               	movwf	4
  2289  0645  3088               	movlw	high (_CommandB1| (0+32768))
  2290  0646  0085               	movwf	5
  2291  0647  0800               	movf	0,w	;code access
  2292  0648  3182  227A  3186   	fcall	_I2C_Cmd
  2293                           
  2294                           ;main.c: 168: _delay((unsigned long)((15)*(4000000/4000.0)));
  2295  064B  3014               	movlw	20
  2296  064C  0020               	movlb	0	; select bank0
  2297  064D  00A1               	movwf	??_GetReading+1
  2298  064E  3079               	movlw	121
  2299  064F  00A0               	movwf	??_GetReading
  2300  0650                     u1637:	
  2301  0650  0BA0               	decfsz	??_GetReading,f
  2302  0651  2E50               	goto	u1637
  2303  0652  0BA1               	decfsz	??_GetReading+1,f
  2304  0653  2E50               	goto	u1637
  2305  0654  3200               	nop2
  2306                           
  2307                           ;main.c: 169: I2C_restart();
  2308  0655  3181  219E  3186   	fcall	_I2C_restart
  2309                           
  2310                           ;main.c: 170: I2C_Control_Read();
  2311  0658  3181  21FE  3186   	fcall	_I2C_Control_Read
  2312                           
  2313                           ;main.c: 173: bh = RX_I2C_Data();
  2314  065B  3181  21B8  3186   	fcall	_RX_I2C_Data
  2315  065E  0020               	movlb	0	; select bank0
  2316  065F  00A0               	movwf	??_GetReading
  2317  0660  0820               	movf	??_GetReading,w
  2318  0661  00A5               	movwf	GetReading@bh
  2319                           
  2320                           ;main.c: 174: I2C_ACK();
  2321  0662  3181  21A6  3186   	fcall	_I2C_ACK
  2322                           
  2323                           ;main.c: 175: doCRC(bh,&crc_gen);
  2324  0665  3027               	movlw	(low (GetReading@crc_gen| 0))& (0+255)
  2325  0666  0020               	movlb	0	; select bank0
  2326  0667  00A0               	movwf	??_GetReading
  2327  0668  0820               	movf	??_GetReading,w
  2328  0669  00F0               	movwf	doCRC@crc
  2329  066A  0825               	movf	GetReading@bh,w
  2330  066B  3182  22C1  3186   	fcall	_doCRC
  2331                           
  2332                           ;main.c: 176: bl = RX_I2C_Data();
  2333  066E  3181  21B8  3186   	fcall	_RX_I2C_Data
  2334  0671  0020               	movlb	0	; select bank0
  2335  0672  00A0               	movwf	??_GetReading
  2336  0673  0820               	movf	??_GetReading,w
  2337  0674  00A6               	movwf	GetReading@bl
  2338                           
  2339                           ;main.c: 177: I2C_ACK();
  2340  0675  3181  21A6  3186   	fcall	_I2C_ACK
  2341                           
  2342                           ;main.c: 178: doCRC(bl,&crc_gen);
  2343  0678  3027               	movlw	(low (GetReading@crc_gen| 0))& (0+255)
  2344  0679  0020               	movlb	0	; select bank0
  2345  067A  00A0               	movwf	??_GetReading
  2346  067B  0820               	movf	??_GetReading,w
  2347  067C  00F0               	movwf	doCRC@crc
  2348  067D  0826               	movf	GetReading@bl,w
  2349  067E  3182  22C1  3186   	fcall	_doCRC
  2350                           
  2351                           ;main.c: 182: local.crc_temp = RX_I2C_Data();
  2352  0681  3181  21B8  3186   	fcall	_RX_I2C_Data
  2353  0684  0020               	movlb	0	; select bank0
  2354  0685  00A0               	movwf	??_GetReading
  2355  0686  0820               	movf	??_GetReading,w
  2356  0687  00AC               	movwf	GetReading@local+4
  2357                           
  2358                           ;main.c: 183: I2C_ACK();
  2359  0688  3181  21A6  3186   	fcall	_I2C_ACK
  2360                           
  2361                           ;main.c: 184: local.raw_t = (bh<<8) + bl;
  2362  068B  0020               	movlb	0	; select bank0
  2363  068C  0826               	movf	GetReading@bl,w
  2364  068D  00A0               	movwf	??_GetReading
  2365  068E  01A1               	clrf	??_GetReading+1
  2366  068F  0825               	movf	GetReading@bh,w
  2367  0690  00A2               	movwf	??_GetReading+2
  2368  0691  01A3               	clrf	??_GetReading+3
  2369  0692  0822               	movf	??_GetReading+2,w
  2370  0693  00A3               	movwf	??_GetReading+3
  2371  0694  01A2               	clrf	??_GetReading+2
  2372  0695  0820               	movf	??_GetReading,w
  2373  0696  0722               	addwf	??_GetReading+2,w
  2374  0697  00A8               	movwf	GetReading@local
  2375  0698  0821               	movf	??_GetReading+1,w
  2376  0699  3D23               	addwfc	??_GetReading+3,w
  2377  069A  00A9               	movwf	GetReading@local+1
  2378                           
  2379                           ;main.c: 185: if(local.crc_temp == crc_gen) local.crc_ok = 1;
  2380  069B  082C               	movf	GetReading@local+4,w
  2381  069C  0627               	xorwf	GetReading@crc_gen,w
  2382  069D  1D03               	skipz
  2383  069E  2EA1               	goto	l1587
  2384  069F  01AF               	clrf	GetReading@local+7
  2385  06A0  0AAF               	incf	GetReading@local+7,f
  2386  06A1                     l1587:	
  2387                           
  2388                           ;main.c: 187: crc_gen = 0xFF;
  2389  06A1  30FF               	movlw	255
  2390  06A2  00A0               	movwf	??_GetReading
  2391  06A3  0820               	movf	??_GetReading,w
  2392  06A4  00A7               	movwf	GetReading@crc_gen
  2393                           
  2394                           ;main.c: 190: bh = RX_I2C_Data();
  2395  06A5  3181  21B8  3186   	fcall	_RX_I2C_Data
  2396  06A8  0020               	movlb	0	; select bank0
  2397  06A9  00A0               	movwf	??_GetReading
  2398  06AA  0820               	movf	??_GetReading,w
  2399  06AB  00A5               	movwf	GetReading@bh
  2400                           
  2401                           ;main.c: 191: I2C_ACK();
  2402  06AC  3181  21A6  3186   	fcall	_I2C_ACK
  2403                           
  2404                           ;main.c: 192: doCRC(bh,&crc_gen);
  2405  06AF  3027               	movlw	(low (GetReading@crc_gen| 0))& (0+255)
  2406  06B0  0020               	movlb	0	; select bank0
  2407  06B1  00A0               	movwf	??_GetReading
  2408  06B2  0820               	movf	??_GetReading,w
  2409  06B3  00F0               	movwf	doCRC@crc
  2410  06B4  0825               	movf	GetReading@bh,w
  2411  06B5  3182  22C1  3186   	fcall	_doCRC
  2412                           
  2413                           ;main.c: 193: bl = RX_I2C_Data();
  2414  06B8  3181  21B8  3186   	fcall	_RX_I2C_Data
  2415  06BB  0020               	movlb	0	; select bank0
  2416  06BC  00A0               	movwf	??_GetReading
  2417  06BD  0820               	movf	??_GetReading,w
  2418  06BE  00A6               	movwf	GetReading@bl
  2419                           
  2420                           ;main.c: 194: doCRC(bl,&crc_gen);
  2421  06BF  3027               	movlw	(low (GetReading@crc_gen| 0))& (0+255)
  2422  06C0  00A0               	movwf	??_GetReading
  2423  06C1  0820               	movf	??_GetReading,w
  2424  06C2  00F0               	movwf	doCRC@crc
  2425  06C3  0826               	movf	GetReading@bl,w
  2426  06C4  3182  22C1  3186   	fcall	_doCRC
  2427                           
  2428                           ;main.c: 195: I2C_ACK();
  2429  06C7  3181  21A6  3186   	fcall	_I2C_ACK
  2430                           
  2431                           ;main.c: 196: local.crc_hum = RX_I2C_Data();
  2432  06CA  3181  21B8  3186   	fcall	_RX_I2C_Data
  2433  06CD  0020               	movlb	0	; select bank0
  2434  06CE  00A0               	movwf	??_GetReading
  2435  06CF  0820               	movf	??_GetReading,w
  2436  06D0  00AD               	movwf	GetReading@local+5
  2437                           
  2438                           ;main.c: 197: local.raw_h = (bh<<8) + bl;
  2439  06D1  0826               	movf	GetReading@bl,w
  2440  06D2  00A0               	movwf	??_GetReading
  2441  06D3  01A1               	clrf	??_GetReading+1
  2442  06D4  0825               	movf	GetReading@bh,w
  2443  06D5  00A2               	movwf	??_GetReading+2
  2444  06D6  01A3               	clrf	??_GetReading+3
  2445  06D7  0822               	movf	??_GetReading+2,w
  2446  06D8  00A3               	movwf	??_GetReading+3
  2447  06D9  01A2               	clrf	??_GetReading+2
  2448  06DA  0820               	movf	??_GetReading,w
  2449  06DB  0722               	addwf	??_GetReading+2,w
  2450  06DC  00AA               	movwf	GetReading@local+2
  2451  06DD  0821               	movf	??_GetReading+1,w
  2452  06DE  3D23               	addwfc	??_GetReading+3,w
  2453  06DF  00AB               	movwf	GetReading@local+3
  2454                           
  2455                           ;main.c: 198: I2C_NAK();
  2456  06E0  3181  21D1  3186   	fcall	_I2C_NAK
  2457                           
  2458                           ;main.c: 200: I2C_Stop_Bit();
  2459  06E3  3181  21C4  3186   	fcall	_I2C_Stop_Bit
  2460                           
  2461                           ;main.c: 202: if(local.crc_hum == crc_gen) local.crc_ok |= 2;
  2462  06E6  0020               	movlb	0	; select bank0
  2463  06E7  082D               	movf	GetReading@local+5,w
  2464  06E8  0627               	xorwf	GetReading@crc_gen,w
  2465  06E9  1903               	btfsc	3,2
  2466  06EA  14AF               	bsf	GetReading@local+7,1
  2467                           
  2468                           ;main.c: 207: return local;
  2469  06EB  3028               	movlw	low GetReading@local
  2470  06EC  0086               	movwf	6
  2471  06ED  3000               	movlw	high GetReading@local
  2472  06EE  0087               	movwf	7
  2473  06EF  3076               	movlw	low ?_GetReading
  2474  06F0  0084               	movwf	4
  2475  06F1  3000               	movlw	high ?_GetReading
  2476  06F2  0085               	movwf	5
  2477  06F3  3008               	movlw	8
  2478  06F4  00A0               	movwf	??_GetReading
  2479  06F5                     u1570:	
  2480  06F5  0016               	moviw fsr1++
  2481  06F6  001A               	movwi fsr0++
  2482  06F7  0BA0               	decfsz	??_GetReading,f
  2483  06F8  2EF5               	goto	u1570
  2484  06F9  0008               	return
  2485  06FA                     __end_of_GetReading:	
  2486                           
  2487                           	psect	text11
  2488  02C1                     __ptext11:	
  2489 ;; *************** function _doCRC *****************
  2490 ;; Defined at:
  2491 ;;		line 3 in file "sht3x.c"
  2492 ;; Parameters:    Size  Location     Type
  2493 ;;  ch              1    wreg     unsigned char 
  2494 ;;  crc             1    0[COMMON] PTR unsigned char 
  2495 ;;		 -> GetReading@crc_gen(1), GetStatus@crc_gen(1), 
  2496 ;; Auto vars:     Size  Location     Type
  2497 ;;  ch              1    2[COMMON] unsigned char 
  2498 ;;  ix              2    4[COMMON] int 
  2499 ;;  b7              1    3[COMMON] unsigned char 
  2500 ;; Return value:  Size  Location     Type
  2501 ;;		None               void
  2502 ;; Registers used:
  2503 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  2504 ;; Tracked objects:
  2505 ;;		On entry : 0/0
  2506 ;;		On exit  : 0/0
  2507 ;;		Unchanged: 0/0
  2508 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2509 ;;      Params:         1       0       0       0
  2510 ;;      Locals:         4       0       0       0
  2511 ;;      Temps:          1       0       0       0
  2512 ;;      Totals:         6       0       0       0
  2513 ;;Total ram usage:        6 bytes
  2514 ;; Hardware stack levels used:    1
  2515 ;; This function calls:
  2516 ;;		Nothing
  2517 ;; This function is called by:
  2518 ;;		_GetReading
  2519 ;;		_GetStatus
  2520 ;; This function uses a non-reentrant model
  2521 ;;
  2522                           
  2523                           
  2524                           ;psect for function _doCRC
  2525  02C1                     _doCRC:	
  2526                           
  2527                           ;incstack = 0
  2528                           ; Regs used in _doCRC: [wreg+fsr1l+fsr1h+status,2+status,0]
  2529                           ;doCRC@ch stored from wreg
  2530  02C1  00F2               	movwf	doCRC@ch
  2531                           
  2532                           ;sht3x.c: 5: int ix;
  2533                           ;sht3x.c: 6: unsigned char b7;
  2534                           ;sht3x.c: 8: for (ix = 0; ix < 8; ix++) {
  2535  02C2  01F4               	clrf	doCRC@ix
  2536  02C3  01F5               	clrf	doCRC@ix+1
  2537  02C4                     L1:	
  2538  02C4  0875               	movf	doCRC@ix+1,w
  2539  02C5  3A80               	xorlw	128
  2540  02C6  00F1               	movwf	??_doCRC
  2541  02C7  3080               	movlw	128
  2542  02C8  0271               	subwf	??_doCRC,w
  2543  02C9  3008               	movlw	8
  2544  02CA  1903               	btfsc	3,2
  2545  02CB  0274               	subwf	doCRC@ix,w
  2546  02CC  1803               	btfsc	3,0
  2547  02CD  0008               	return
  2548                           
  2549                           ;sht3x.c: 9: b7 = ch ^ *crc;
  2550  02CE  0870               	movf	doCRC@crc,w
  2551  02CF  0086               	movwf	6
  2552  02D0  0187               	clrf	7
  2553  02D1  0801               	movf	1,w
  2554  02D2  0672               	xorwf	doCRC@ch,w
  2555  02D3  00F1               	movwf	??_doCRC
  2556  02D4  0871               	movf	??_doCRC,w
  2557  02D5  00F3               	movwf	doCRC@b7
  2558                           
  2559                           ;sht3x.c: 10: *crc <<= 1;
  2560  02D6  0870               	movf	doCRC@crc,w
  2561  02D7  0086               	movwf	6
  2562  02D8  0187               	clrf	7
  2563  02D9  1003               	clrc
  2564  02DA  0D81               	rlf	1,f
  2565                           
  2566                           ;sht3x.c: 11: ch <<= 1;
  2567  02DB  1003               	clrc
  2568  02DC  0DF2               	rlf	doCRC@ch,f
  2569                           
  2570                           ;sht3x.c: 12: if (b7 & 0x80)
  2571  02DD  1FF3               	btfss	doCRC@b7,7
  2572  02DE  2AE6               	goto	l1327
  2573                           
  2574                           ;sht3x.c: 13: *crc ^= 0x31;;
  2575  02DF  3031               	movlw	49
  2576  02E0  00F1               	movwf	??_doCRC
  2577  02E1  0870               	movf	doCRC@crc,w
  2578  02E2  0086               	movwf	6
  2579  02E3  0187               	clrf	7
  2580  02E4  0871               	movf	??_doCRC,w
  2581  02E5  0681               	xorwf	1,f
  2582  02E6                     l1327:	
  2583  02E6  3001               	movlw	1
  2584  02E7  07F4               	addwf	doCRC@ix,f
  2585  02E8  3000               	movlw	0
  2586  02E9  3DF5               	addwfc	doCRC@ix+1,f
  2587  02EA  2AC4               	goto	L1
  2588  02EB                     __end_of_doCRC:	
  2589                           ;sht3x.c: 14: }
  2590                           ;sht3x.c: 15: return;
  2591                           
  2592                           
  2593                           	psect	text12
  2594  01B8                     __ptext12:	
  2595 ;; *************** function _RX_I2C_Data *****************
  2596 ;; Defined at:
  2597 ;;		line 30 in file "i2c.c"
  2598 ;; Parameters:    Size  Location     Type
  2599 ;;		None
  2600 ;; Auto vars:     Size  Location     Type
  2601 ;;  byt             1    1[COMMON] unsigned char 
  2602 ;; Return value:  Size  Location     Type
  2603 ;;                  1    wreg      unsigned char 
  2604 ;; Registers used:
  2605 ;;		wreg
  2606 ;; Tracked objects:
  2607 ;;		On entry : 0/0
  2608 ;;		On exit  : 0/0
  2609 ;;		Unchanged: 0/0
  2610 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2611 ;;      Params:         0       0       0       0
  2612 ;;      Locals:         1       0       0       0
  2613 ;;      Temps:          1       0       0       0
  2614 ;;      Totals:         2       0       0       0
  2615 ;;Total ram usage:        2 bytes
  2616 ;; Hardware stack levels used:    1
  2617 ;; This function calls:
  2618 ;;		Nothing
  2619 ;; This function is called by:
  2620 ;;		_GetReading
  2621 ;;		_GetStatus
  2622 ;; This function uses a non-reentrant model
  2623 ;;
  2624                           
  2625                           
  2626                           ;psect for function _RX_I2C_Data
  2627  01B8                     _RX_I2C_Data:	
  2628                           
  2629                           ;i2c.c: 32: char byt;
  2630                           ;i2c.c: 33: RCEN = 1;
  2631                           
  2632                           ;incstack = 0
  2633                           ; Regs used in _RX_I2C_Data: [wreg]
  2634  01B8  0024               	movlb	4	; select bank4
  2635  01B9  1596               	bsf	22,3	;volatile
  2636  01BA                     l162:	
  2637                           ;i2c.c: 34: while( RCEN ) continue;
  2638                           
  2639  01BA  1996               	btfsc	22,3	;volatile
  2640  01BB  29BA               	goto	l162
  2641  01BC                     l165:	
  2642                           ;i2c.c: 35: while( !BF ) continue;
  2643                           
  2644  01BC  1C14               	btfss	20,0	;volatile
  2645  01BD  29BC               	goto	l165
  2646                           
  2647                           ;i2c.c: 36: byt = SSPBUF;
  2648  01BE  0811               	movf	17,w	;volatile
  2649  01BF  00F0               	movwf	??_RX_I2C_Data
  2650  01C0  0870               	movf	??_RX_I2C_Data,w
  2651  01C1  00F1               	movwf	RX_I2C_Data@byt
  2652                           
  2653                           ;i2c.c: 37: return byt;
  2654  01C2  0871               	movf	RX_I2C_Data@byt,w
  2655  01C3  0008               	return
  2656  01C4                     __end_of_RX_I2C_Data:	
  2657                           
  2658                           	psect	text13
  2659  019E                     __ptext13:	
  2660 ;; *************** function _I2C_restart *****************
  2661 ;; Defined at:
  2662 ;;		line 91 in file "i2c.c"
  2663 ;; Parameters:    Size  Location     Type
  2664 ;;		None
  2665 ;; Auto vars:     Size  Location     Type
  2666 ;;		None
  2667 ;; Return value:  Size  Location     Type
  2668 ;;		None               void
  2669 ;; Registers used:
  2670 ;;		wreg, status,2, status,0, pclath, cstack
  2671 ;; Tracked objects:
  2672 ;;		On entry : 0/0
  2673 ;;		On exit  : 0/0
  2674 ;;		Unchanged: 0/0
  2675 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2676 ;;      Params:         0       0       0       0
  2677 ;;      Locals:         0       0       0       0
  2678 ;;      Temps:          0       0       0       0
  2679 ;;      Totals:         0       0       0       0
  2680 ;;Total ram usage:        0 bytes
  2681 ;; Hardware stack levels used:    1
  2682 ;; Hardware stack levels required when called:    1
  2683 ;; This function calls:
  2684 ;;		_I2C_check_idle
  2685 ;; This function is called by:
  2686 ;;		_GetReading
  2687 ;;		_GetStatus
  2688 ;; This function uses a non-reentrant model
  2689 ;;
  2690                           
  2691                           
  2692                           ;psect for function _I2C_restart
  2693  019E                     _I2C_restart:	
  2694                           
  2695                           ;i2c.c: 93: I2C_check_idle();
  2696                           
  2697                           ;incstack = 0
  2698                           ; Regs used in _I2C_restart: [wreg+status,2+status,0+pclath+cstack]
  2699  019E  3182  220E  3181   	fcall	_I2C_check_idle
  2700                           
  2701                           ;i2c.c: 94: RSEN = 1;
  2702  01A1  0024               	movlb	4	; select bank4
  2703  01A2  1496               	bsf	22,1	;volatile
  2704  01A3                     l194:	
  2705                           ;i2c.c: 95: while( RSEN ) continue;
  2706                           
  2707  01A3  1C96               	btfss	22,1	;volatile
  2708  01A4  0008               	return
  2709  01A5  29A3               	goto	l194
  2710  01A6                     __end_of_I2C_restart:	
  2711                           
  2712                           	psect	text14
  2713  020E                     __ptext14:	
  2714 ;; *************** function _I2C_check_idle *****************
  2715 ;; Defined at:
  2716 ;;		line 77 in file "i2c.c"
  2717 ;; Parameters:    Size  Location     Type
  2718 ;;		None
  2719 ;; Auto vars:     Size  Location     Type
  2720 ;;  byte2           1    2[COMMON] unsigned char 
  2721 ;;  byte1           1    1[COMMON] unsigned char 
  2722 ;; Return value:  Size  Location     Type
  2723 ;;		None               void
  2724 ;; Registers used:
  2725 ;;		wreg, status,2, status,0
  2726 ;; Tracked objects:
  2727 ;;		On entry : 0/0
  2728 ;;		On exit  : 0/0
  2729 ;;		Unchanged: 0/0
  2730 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2731 ;;      Params:         0       0       0       0
  2732 ;;      Locals:         2       0       0       0
  2733 ;;      Temps:          1       0       0       0
  2734 ;;      Totals:         3       0       0       0
  2735 ;;Total ram usage:        3 bytes
  2736 ;; Hardware stack levels used:    1
  2737 ;; This function calls:
  2738 ;;		Nothing
  2739 ;; This function is called by:
  2740 ;;		_I2C_restart
  2741 ;; This function uses a non-reentrant model
  2742 ;;
  2743                           
  2744                           
  2745                           ;psect for function _I2C_check_idle
  2746  020E                     _I2C_check_idle:	
  2747  020E                     l189:	
  2748                           ;incstack = 0
  2749                           ; Regs used in _I2C_check_idle: [wreg+status,2+status,0]
  2750                           ;i2c.c: 79: unsigned char byte1;
  2751                           ;i2c.c: 80: unsigned char byte2;
  2752                           ;i2c.c: 82: do
  2753                           
  2754                           
  2755                           ;i2c.c: 83: {
  2756                           ;i2c.c: 84: byte1 = SSPSTAT & 0x04;
  2757  020E  0024               	movlb	4	; select bank4
  2758  020F  0814               	movf	20,w	;volatile
  2759  0210  3904               	andlw	4
  2760  0211  00F0               	movwf	??_I2C_check_idle
  2761  0212  0870               	movf	??_I2C_check_idle,w
  2762  0213  00F1               	movwf	I2C_check_idle@byte1
  2763                           
  2764                           ;i2c.c: 85: byte2 = SSPCON2 & 0x1F;
  2765  0214  0816               	movf	22,w	;volatile
  2766  0215  391F               	andlw	31
  2767  0216  00F0               	movwf	??_I2C_check_idle
  2768  0217  0870               	movf	??_I2C_check_idle,w
  2769  0218  00F2               	movwf	I2C_check_idle@byte2
  2770                           
  2771                           ;i2c.c: 86: } while( byte1 | byte2 );
  2772  0219  0871               	movf	I2C_check_idle@byte1,w
  2773  021A  0472               	iorwf	I2C_check_idle@byte2,w
  2774  021B  1903               	btfsc	3,2
  2775  021C  0008               	return
  2776  021D  2A0E               	goto	l189
  2777  021E                     __end_of_I2C_check_idle:	
  2778                           
  2779                           	psect	text15
  2780  01D1                     __ptext15:	
  2781 ;; *************** function _I2C_NAK *****************
  2782 ;; Defined at:
  2783 ;;		line 109 in file "i2c.c"
  2784 ;; Parameters:    Size  Location     Type
  2785 ;;		None
  2786 ;; Auto vars:     Size  Location     Type
  2787 ;;		None
  2788 ;; Return value:  Size  Location     Type
  2789 ;;		None               void
  2790 ;; Registers used:
  2791 ;;		wreg
  2792 ;; Tracked objects:
  2793 ;;		On entry : 0/0
  2794 ;;		On exit  : 0/0
  2795 ;;		Unchanged: 0/0
  2796 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2797 ;;      Params:         0       0       0       0
  2798 ;;      Locals:         0       0       0       0
  2799 ;;      Temps:          0       0       0       0
  2800 ;;      Totals:         0       0       0       0
  2801 ;;Total ram usage:        0 bytes
  2802 ;; Hardware stack levels used:    1
  2803 ;; This function calls:
  2804 ;;		Nothing
  2805 ;; This function is called by:
  2806 ;;		_GetReading
  2807 ;;		_GetStatus
  2808 ;; This function uses a non-reentrant model
  2809 ;;
  2810                           
  2811                           
  2812                           ;psect for function _I2C_NAK
  2813  01D1                     _I2C_NAK:	
  2814                           
  2815                           ;i2c.c: 111: PIR1bits.SSP1IF=0;
  2816                           
  2817                           ;incstack = 0
  2818                           ; Regs used in _I2C_NAK: [wreg]
  2819  01D1  0020               	movlb	0	; select bank0
  2820  01D2  1191               	bcf	17,3	;volatile
  2821                           
  2822                           ;i2c.c: 112: SSP1CON2bits.ACKDT=1;
  2823  01D3  0024               	movlb	4	; select bank4
  2824  01D4  1696               	bsf	22,5	;volatile
  2825                           
  2826                           ;i2c.c: 113: SSP1CON2bits.ACKEN=1;
  2827  01D5  1616               	bsf	22,4	;volatile
  2828  01D6                     l1335:	
  2829                           ;i2c.c: 114: while(!PIR1bits.SSP1IF)
  2830                           
  2831  01D6  0020               	movlb	0	; select bank0
  2832  01D7  1991               	btfsc	17,3	;volatile
  2833  01D8  0008               	return
  2834                           
  2835                           ;i2c.c: 115: {
  2836                           ;i2c.c: 116: i = 1;
  2837  01D9  3001               	movlw	1
  2838  01DA  0020               	movlb	0	; select bank0
  2839  01DB  00D2               	movwf	_i
  2840  01DC  3000               	movlw	0
  2841  01DD  00D3               	movwf	_i+1
  2842  01DE  29D6               	goto	l1335
  2843  01DF                     __end_of_I2C_NAK:	
  2844                           
  2845                           	psect	text16
  2846  01FE                     __ptext16:	
  2847 ;; *************** function _I2C_Control_Read *****************
  2848 ;; Defined at:
  2849 ;;		line 53 in file "i2c.c"
  2850 ;; Parameters:    Size  Location     Type
  2851 ;;		None
  2852 ;; Auto vars:     Size  Location     Type
  2853 ;;		None
  2854 ;; Return value:  Size  Location     Type
  2855 ;;		None               void
  2856 ;; Registers used:
  2857 ;;		wreg
  2858 ;; Tracked objects:
  2859 ;;		On entry : 0/0
  2860 ;;		On exit  : 0/0
  2861 ;;		Unchanged: 0/0
  2862 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2863 ;;      Params:         0       0       0       0
  2864 ;;      Locals:         0       0       0       0
  2865 ;;      Temps:          0       0       0       0
  2866 ;;      Totals:         0       0       0       0
  2867 ;;Total ram usage:        0 bytes
  2868 ;; Hardware stack levels used:    1
  2869 ;; This function calls:
  2870 ;;		Nothing
  2871 ;; This function is called by:
  2872 ;;		_GetReading
  2873 ;;		_GetStatus
  2874 ;; This function uses a non-reentrant model
  2875 ;;
  2876                           
  2877                           
  2878                           ;psect for function _I2C_Control_Read
  2879  01FE                     _I2C_Control_Read:	
  2880                           
  2881                           ;i2c.c: 55: PIR1bits.SSP1IF=0;
  2882                           
  2883                           ;incstack = 0
  2884                           ; Regs used in _I2C_Control_Read: [wreg]
  2885  01FE  0020               	movlb	0	; select bank0
  2886  01FF  1191               	bcf	17,3	;volatile
  2887                           
  2888                           ;i2c.c: 56: SSP1BUF = (0x44 << 1) + 1;
  2889  0200  3089               	movlw	137
  2890  0201  0024               	movlb	4	; select bank4
  2891  0202  0091               	movwf	17	;volatile
  2892  0203                     l1301:	
  2893                           ;i2c.c: 57: while(!PIR1bits.SSP1IF){
  2894                           
  2895  0203  0020               	movlb	0	; select bank0
  2896  0204  1991               	btfsc	17,3	;volatile
  2897  0205  2A0C               	goto	l179
  2898                           
  2899                           ;i2c.c: 58: i = 1;
  2900  0206  3001               	movlw	1
  2901  0207  0020               	movlb	0	; select bank0
  2902  0208  00D2               	movwf	_i
  2903  0209  3000               	movlw	0
  2904  020A  00D3               	movwf	_i+1
  2905  020B  2A03               	goto	l1301
  2906  020C                     l179:	
  2907                           
  2908                           ;i2c.c: 59: }
  2909                           ;i2c.c: 63: PIR1bits.SSP1IF=0;
  2910  020C  1191               	bcf	17,3	;volatile
  2911  020D  0008               	return
  2912  020E                     __end_of_I2C_Control_Read:	
  2913                           
  2914                           	psect	text17
  2915  027A                     __ptext17:	
  2916 ;; *************** function _I2C_Cmd *****************
  2917 ;; Defined at:
  2918 ;;		line 120 in file "i2c.c"
  2919 ;; Parameters:    Size  Location     Type
  2920 ;;  b1              1    wreg     unsigned char 
  2921 ;;  b2              1    2[COMMON] unsigned char 
  2922 ;; Auto vars:     Size  Location     Type
  2923 ;;  b1              1    5[COMMON] unsigned char 
  2924 ;; Return value:  Size  Location     Type
  2925 ;;		None               void
  2926 ;; Registers used:
  2927 ;;		wreg, status,2, status,0, pclath, cstack
  2928 ;; Tracked objects:
  2929 ;;		On entry : 0/0
  2930 ;;		On exit  : 0/0
  2931 ;;		Unchanged: 0/0
  2932 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2933 ;;      Params:         1       0       0       0
  2934 ;;      Locals:         1       0       0       0
  2935 ;;      Temps:          2       0       0       0
  2936 ;;      Totals:         4       0       0       0
  2937 ;;Total ram usage:        4 bytes
  2938 ;; Hardware stack levels used:    1
  2939 ;; Hardware stack levels required when called:    1
  2940 ;; This function calls:
  2941 ;;		_I2C_Control_Write
  2942 ;;		_I2C_Start_Bit
  2943 ;;		_I2C_Stop_Bit
  2944 ;;		_Send_I2C_Data
  2945 ;; This function is called by:
  2946 ;;		_GetReading
  2947 ;;		_GetStatus
  2948 ;; This function uses a non-reentrant model
  2949 ;;
  2950                           
  2951                           
  2952                           ;psect for function _I2C_Cmd
  2953  027A                     _I2C_Cmd:	
  2954                           
  2955                           ;incstack = 0
  2956                           ; Regs used in _I2C_Cmd: [wreg+status,2+status,0+pclath+cstack]
  2957                           ;I2C_Cmd@b1 stored from wreg
  2958  027A  00F5               	movwf	I2C_Cmd@b1
  2959                           
  2960                           ;i2c.c: 122: I2C_Start_Bit();
  2961  027B  3181  21DF  3182   	fcall	_I2C_Start_Bit
  2962                           
  2963                           ;i2c.c: 123: I2C_Control_Write();
  2964  027E  3181  21EE  3182   	fcall	_I2C_Control_Write
  2965                           
  2966                           ;i2c.c: 125: if (!SSP1CON2bits.ACKSTAT)
  2967  0281  0024               	movlb	4	; select bank4
  2968  0282  1B16               	btfsc	22,6	;volatile
  2969  0283  2A86               	goto	l1289
  2970                           
  2971                           ;i2c.c: 126: LATCbits.LATC1 = 0;
  2972  0284  0022               	movlb	2	; select bank2
  2973  0285  108E               	bcf	14,1	;volatile
  2974  0286                     l1289:	
  2975                           
  2976                           ;i2c.c: 127: Send_I2C_Data(b1);
  2977  0286  0875               	movf	I2C_Cmd@b1,w
  2978  0287  00F3               	movwf	??_I2C_Cmd
  2979  0288  01F4               	clrf	??_I2C_Cmd+1
  2980  0289  0873               	movf	??_I2C_Cmd,w
  2981  028A  00F0               	movwf	Send_I2C_Data@databyte
  2982  028B  0874               	movf	??_I2C_Cmd+1,w
  2983  028C  00F1               	movwf	Send_I2C_Data@databyte+1
  2984  028D  3181  21AF  3182   	fcall	_Send_I2C_Data
  2985                           
  2986                           ;i2c.c: 128: Send_I2C_Data(b2);
  2987  0290  0872               	movf	I2C_Cmd@b2,w
  2988  0291  00F3               	movwf	??_I2C_Cmd
  2989  0292  01F4               	clrf	??_I2C_Cmd+1
  2990  0293  0873               	movf	??_I2C_Cmd,w
  2991  0294  00F0               	movwf	Send_I2C_Data@databyte
  2992  0295  0874               	movf	??_I2C_Cmd+1,w
  2993  0296  00F1               	movwf	Send_I2C_Data@databyte+1
  2994  0297  3181  21AF  3182   	fcall	_Send_I2C_Data
  2995                           
  2996                           ;i2c.c: 129: I2C_Stop_Bit();
  2997  029A  3181  21C4         	fcall	_I2C_Stop_Bit
  2998  029C  0008               	return
  2999  029D                     __end_of_I2C_Cmd:	
  3000                           
  3001                           	psect	text18
  3002  01AF                     __ptext18:	
  3003 ;; *************** function _Send_I2C_Data *****************
  3004 ;; Defined at:
  3005 ;;		line 23 in file "i2c.c"
  3006 ;; Parameters:    Size  Location     Type
  3007 ;;  databyte        2    0[COMMON] unsigned int 
  3008 ;; Auto vars:     Size  Location     Type
  3009 ;;		None
  3010 ;; Return value:  Size  Location     Type
  3011 ;;		None               void
  3012 ;; Registers used:
  3013 ;;		wreg
  3014 ;; Tracked objects:
  3015 ;;		On entry : 0/0
  3016 ;;		On exit  : 0/0
  3017 ;;		Unchanged: 0/0
  3018 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3019 ;;      Params:         2       0       0       0
  3020 ;;      Locals:         0       0       0       0
  3021 ;;      Temps:          0       0       0       0
  3022 ;;      Totals:         2       0       0       0
  3023 ;;Total ram usage:        2 bytes
  3024 ;; Hardware stack levels used:    1
  3025 ;; This function calls:
  3026 ;;		Nothing
  3027 ;; This function is called by:
  3028 ;;		_I2C_Cmd
  3029 ;; This function uses a non-reentrant model
  3030 ;;
  3031                           
  3032                           
  3033                           ;psect for function _Send_I2C_Data
  3034  01AF                     _Send_I2C_Data:	
  3035                           
  3036                           ;i2c.c: 25: PIR1bits.SSP1IF=0;
  3037                           
  3038                           ;incstack = 0
  3039                           ; Regs used in _Send_I2C_Data: [wreg]
  3040  01AF  0020               	movlb	0	; select bank0
  3041  01B0  1191               	bcf	17,3	;volatile
  3042                           
  3043                           ;i2c.c: 26: SSPBUF = databyte;
  3044  01B1  0870               	movf	Send_I2C_Data@databyte,w
  3045  01B2  0024               	movlb	4	; select bank4
  3046  01B3  0091               	movwf	17	;volatile
  3047  01B4                     l156:	
  3048                           ;i2c.c: 27: while(!PIR1bits.SSP1IF);
  3049                           
  3050  01B4  0020               	movlb	0	; select bank0
  3051  01B5  1991               	btfsc	17,3	;volatile
  3052  01B6  0008               	return
  3053  01B7  29B4               	goto	l156
  3054  01B8                     __end_of_Send_I2C_Data:	
  3055                           
  3056                           	psect	text19
  3057  01C4                     __ptext19:	
  3058 ;; *************** function _I2C_Stop_Bit *****************
  3059 ;; Defined at:
  3060 ;;		line 98 in file "i2c.c"
  3061 ;; Parameters:    Size  Location     Type
  3062 ;;		None
  3063 ;; Auto vars:     Size  Location     Type
  3064 ;;		None
  3065 ;; Return value:  Size  Location     Type
  3066 ;;		None               void
  3067 ;; Registers used:
  3068 ;;		wreg
  3069 ;; Tracked objects:
  3070 ;;		On entry : 0/0
  3071 ;;		On exit  : 0/0
  3072 ;;		Unchanged: 0/0
  3073 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3074 ;;      Params:         0       0       0       0
  3075 ;;      Locals:         0       0       0       0
  3076 ;;      Temps:          0       0       0       0
  3077 ;;      Totals:         0       0       0       0
  3078 ;;Total ram usage:        0 bytes
  3079 ;; Hardware stack levels used:    1
  3080 ;; This function calls:
  3081 ;;		Nothing
  3082 ;; This function is called by:
  3083 ;;		_GetReading
  3084 ;;		_I2C_Cmd
  3085 ;;		_GetStatus
  3086 ;; This function uses a non-reentrant model
  3087 ;;
  3088                           
  3089                           
  3090                           ;psect for function _I2C_Stop_Bit
  3091  01C4                     _I2C_Stop_Bit:	
  3092                           
  3093                           ;i2c.c: 100: PIR1bits.SSP1IF=0;
  3094                           
  3095                           ;incstack = 0
  3096                           ; Regs used in _I2C_Stop_Bit: [wreg]
  3097  01C4  0020               	movlb	0	; select bank0
  3098  01C5  1191               	bcf	17,3	;volatile
  3099                           
  3100                           ;i2c.c: 101: SSPCON2bits.PEN=1;
  3101  01C6  0024               	movlb	4	; select bank4
  3102  01C7  1516               	bsf	22,2	;volatile
  3103  01C8                     l1175:	
  3104                           ;i2c.c: 102: while(!PIR1bits.SSP1IF)
  3105                           
  3106  01C8  0020               	movlb	0	; select bank0
  3107  01C9  1991               	btfsc	17,3	;volatile
  3108  01CA  0008               	return
  3109                           
  3110                           ;i2c.c: 103: {
  3111                           ;i2c.c: 104: i = 1;
  3112  01CB  3001               	movlw	1
  3113  01CC  0020               	movlb	0	; select bank0
  3114  01CD  00D2               	movwf	_i
  3115  01CE  3000               	movlw	0
  3116  01CF  00D3               	movwf	_i+1
  3117  01D0  29C8               	goto	l1175
  3118  01D1                     __end_of_I2C_Stop_Bit:	
  3119                           
  3120                           	psect	text20
  3121  01DF                     __ptext20:	
  3122 ;; *************** function _I2C_Start_Bit *****************
  3123 ;; Defined at:
  3124 ;;		line 66 in file "i2c.c"
  3125 ;; Parameters:    Size  Location     Type
  3126 ;;		None
  3127 ;; Auto vars:     Size  Location     Type
  3128 ;;		None
  3129 ;; Return value:  Size  Location     Type
  3130 ;;		None               void
  3131 ;; Registers used:
  3132 ;;		wreg
  3133 ;; Tracked objects:
  3134 ;;		On entry : 0/0
  3135 ;;		On exit  : 0/0
  3136 ;;		Unchanged: 0/0
  3137 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3138 ;;      Params:         0       0       0       0
  3139 ;;      Locals:         0       0       0       0
  3140 ;;      Temps:          0       0       0       0
  3141 ;;      Totals:         0       0       0       0
  3142 ;;Total ram usage:        0 bytes
  3143 ;; Hardware stack levels used:    1
  3144 ;; This function calls:
  3145 ;;		Nothing
  3146 ;; This function is called by:
  3147 ;;		_I2C_Cmd
  3148 ;; This function uses a non-reentrant model
  3149 ;;
  3150                           
  3151                           
  3152                           ;psect for function _I2C_Start_Bit
  3153  01DF                     _I2C_Start_Bit:	
  3154                           
  3155                           ;i2c.c: 68: PIR1bits.SSP1IF=0;
  3156                           
  3157                           ;incstack = 0
  3158                           ; Regs used in _I2C_Start_Bit: [wreg]
  3159  01DF  0020               	movlb	0	; select bank0
  3160  01E0  1191               	bcf	17,3	;volatile
  3161                           
  3162                           ;i2c.c: 69: SSPCON2bits.SEN=1;
  3163  01E1  0024               	movlb	4	; select bank4
  3164  01E2  1416               	bsf	22,0	;volatile
  3165  01E3                     l1193:	
  3166                           ;i2c.c: 70: while(!PIR1bits.SSP1IF)
  3167                           
  3168  01E3  0020               	movlb	0	; select bank0
  3169  01E4  1991               	btfsc	17,3	;volatile
  3170  01E5  29EC               	goto	l185
  3171                           
  3172                           ;i2c.c: 71: {
  3173                           ;i2c.c: 72: i = 1;
  3174  01E6  3001               	movlw	1
  3175  01E7  0020               	movlb	0	; select bank0
  3176  01E8  00D2               	movwf	_i
  3177  01E9  3000               	movlw	0
  3178  01EA  00D3               	movwf	_i+1
  3179  01EB  29E3               	goto	l1193
  3180  01EC                     l185:	
  3181                           
  3182                           ;i2c.c: 73: }
  3183                           ;i2c.c: 74: PIR1bits.SSP1IF=0;
  3184  01EC  1191               	bcf	17,3	;volatile
  3185  01ED  0008               	return
  3186  01EE                     __end_of_I2C_Start_Bit:	
  3187                           
  3188                           	psect	text21
  3189  01EE                     __ptext21:	
  3190 ;; *************** function _I2C_Control_Write *****************
  3191 ;; Defined at:
  3192 ;;		line 40 in file "i2c.c"
  3193 ;; Parameters:    Size  Location     Type
  3194 ;;		None
  3195 ;; Auto vars:     Size  Location     Type
  3196 ;;		None
  3197 ;; Return value:  Size  Location     Type
  3198 ;;		None               void
  3199 ;; Registers used:
  3200 ;;		wreg
  3201 ;; Tracked objects:
  3202 ;;		On entry : 0/0
  3203 ;;		On exit  : 0/0
  3204 ;;		Unchanged: 0/0
  3205 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3206 ;;      Params:         0       0       0       0
  3207 ;;      Locals:         0       0       0       0
  3208 ;;      Temps:          0       0       0       0
  3209 ;;      Totals:         0       0       0       0
  3210 ;;Total ram usage:        0 bytes
  3211 ;; Hardware stack levels used:    1
  3212 ;; This function calls:
  3213 ;;		Nothing
  3214 ;; This function is called by:
  3215 ;;		_I2C_Cmd
  3216 ;; This function uses a non-reentrant model
  3217 ;;
  3218                           
  3219                           
  3220                           ;psect for function _I2C_Control_Write
  3221  01EE                     _I2C_Control_Write:	
  3222                           
  3223                           ;i2c.c: 42: PIR1bits.SSP1IF=0;
  3224                           
  3225                           ;incstack = 0
  3226                           ; Regs used in _I2C_Control_Write: [wreg]
  3227  01EE  0020               	movlb	0	; select bank0
  3228  01EF  1191               	bcf	17,3	;volatile
  3229                           
  3230                           ;i2c.c: 43: SSP1BUF = 0x44 << 1;
  3231  01F0  3088               	movlw	136
  3232  01F1  0024               	movlb	4	; select bank4
  3233  01F2  0091               	movwf	17	;volatile
  3234  01F3                     l1187:	
  3235                           ;i2c.c: 44: while(!PIR1bits.SSP1IF)
  3236                           
  3237  01F3  0020               	movlb	0	; select bank0
  3238  01F4  1991               	btfsc	17,3	;volatile
  3239  01F5  29FC               	goto	l173
  3240                           
  3241                           ;i2c.c: 45: {
  3242                           ;i2c.c: 46: i = 1;
  3243  01F6  3001               	movlw	1
  3244  01F7  0020               	movlb	0	; select bank0
  3245  01F8  00D2               	movwf	_i
  3246  01F9  3000               	movlw	0
  3247  01FA  00D3               	movwf	_i+1
  3248  01FB  29F3               	goto	l1187
  3249  01FC                     l173:	
  3250                           
  3251                           ;i2c.c: 48: }
  3252                           ;i2c.c: 49: PIR1bits.SSP1IF=0;
  3253  01FC  1191               	bcf	17,3	;volatile
  3254  01FD  0008               	return
  3255  01FE                     __end_of_I2C_Control_Write:	
  3256                           
  3257                           	psect	text22
  3258  01A6                     __ptext22:	
  3259 ;; *************** function _I2C_ACK *****************
  3260 ;; Defined at:
  3261 ;;		line 15 in file "i2c.c"
  3262 ;; Parameters:    Size  Location     Type
  3263 ;;		None
  3264 ;; Auto vars:     Size  Location     Type
  3265 ;;		None
  3266 ;; Return value:  Size  Location     Type
  3267 ;;		None               void
  3268 ;; Registers used:
  3269 ;;		None
  3270 ;; Tracked objects:
  3271 ;;		On entry : 0/0
  3272 ;;		On exit  : 0/0
  3273 ;;		Unchanged: 0/0
  3274 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3275 ;;      Params:         0       0       0       0
  3276 ;;      Locals:         0       0       0       0
  3277 ;;      Temps:          0       0       0       0
  3278 ;;      Totals:         0       0       0       0
  3279 ;;Total ram usage:        0 bytes
  3280 ;; Hardware stack levels used:    1
  3281 ;; This function calls:
  3282 ;;		Nothing
  3283 ;; This function is called by:
  3284 ;;		_GetReading
  3285 ;;		_GetStatus
  3286 ;; This function uses a non-reentrant model
  3287 ;;
  3288                           
  3289                           
  3290                           ;psect for function _I2C_ACK
  3291  01A6                     _I2C_ACK:	
  3292                           
  3293                           ;i2c.c: 17: PIR1bits.SSP1IF=0;
  3294                           
  3295                           ;incstack = 0
  3296                           ; Regs used in _I2C_ACK: []
  3297  01A6  0020               	movlb	0	; select bank0
  3298  01A7  1191               	bcf	17,3	;volatile
  3299                           
  3300                           ;i2c.c: 18: SSP1CON2bits.ACKDT=0;
  3301  01A8  0024               	movlb	4	; select bank4
  3302  01A9  1296               	bcf	22,5	;volatile
  3303                           
  3304                           ;i2c.c: 19: SSP1CON2bits.ACKEN=1;
  3305  01AA  1616               	bsf	22,4	;volatile
  3306  01AB                     l150:	
  3307                           ;i2c.c: 20: while(!PIR1bits.SSP1IF);
  3308                           
  3309  01AB  0020               	movlb	0	; select bank0
  3310  01AC  1991               	btfsc	17,3	;volatile
  3311  01AD  0008               	return
  3312  01AE  29AB               	goto	l150
  3313  01AF                     __end_of_I2C_ACK:	
  3314                           
  3315                           	psect	text23
  3316  0191                     __ptext23:	
  3317 ;; *************** function _CalcTemp *****************
  3318 ;; Defined at:
  3319 ;;		line 19 in file "sht3x.c"
  3320 ;; Parameters:    Size  Location     Type
  3321 ;;  rcv_val         2    0[COMMON] unsigned int 
  3322 ;; Auto vars:     Size  Location     Type
  3323 ;;		None
  3324 ;; Return value:  Size  Location     Type
  3325 ;;                  2    0[COMMON] int 
  3326 ;; Registers used:
  3327 ;;		None
  3328 ;; Tracked objects:
  3329 ;;		On entry : 0/0
  3330 ;;		On exit  : 0/0
  3331 ;;		Unchanged: 0/0
  3332 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3333 ;;      Params:         2       0       0       0
  3334 ;;      Locals:         0       0       0       0
  3335 ;;      Temps:          0       0       0       0
  3336 ;;      Totals:         2       0       0       0
  3337 ;;Total ram usage:        2 bytes
  3338 ;; Hardware stack levels used:    1
  3339 ;; This function calls:
  3340 ;;		Nothing
  3341 ;; This function is called by:
  3342 ;;		_main
  3343 ;; This function uses a non-reentrant model
  3344 ;;
  3345                           
  3346                           
  3347                           ;psect for function _CalcTemp
  3348  0191                     _CalcTemp:	
  3349                           
  3350                           ;sht3x.c: 21: return rcv_val;
  3351                           
  3352                           ;incstack = 0
  3353                           ; Regs used in _CalcTemp: []
  3354  0191  0008               	return
  3355  0192                     __end_of_CalcTemp:	
  3356                           
  3357                           	psect	text24
  3358  034B                     __ptext24:	
  3359 ;; *************** function _CalcHumid *****************
  3360 ;; Defined at:
  3361 ;;		line 24 in file "sht3x.c"
  3362 ;; Parameters:    Size  Location     Type
  3363 ;;  rcv_val         2   16[BANK0 ] unsigned int 
  3364 ;; Auto vars:     Size  Location     Type
  3365 ;;  ans             3   18[BANK0 ] float 
  3366 ;; Return value:  Size  Location     Type
  3367 ;;                  2   16[BANK0 ] int 
  3368 ;; Registers used:
  3369 ;;		wreg, status,2, status,0, pclath, cstack
  3370 ;; Tracked objects:
  3371 ;;		On entry : 0/0
  3372 ;;		On exit  : 0/0
  3373 ;;		Unchanged: 0/0
  3374 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3375 ;;      Params:         0       2       0       0
  3376 ;;      Locals:         0       3       0       0
  3377 ;;      Temps:          0       0       0       0
  3378 ;;      Totals:         0       5       0       0
  3379 ;;Total ram usage:        5 bytes
  3380 ;; Hardware stack levels used:    1
  3381 ;; Hardware stack levels required when called:    2
  3382 ;; This function calls:
  3383 ;;		___ftdiv
  3384 ;;		___ftmul
  3385 ;;		___fttol
  3386 ;;		___lwtoft
  3387 ;; This function is called by:
  3388 ;;		_main
  3389 ;; This function uses a non-reentrant model
  3390 ;;
  3391                           
  3392                           
  3393                           ;psect for function _CalcHumid
  3394  034B                     _CalcHumid:	
  3395                           
  3396                           ;sht3x.c: 25: float ans = ((float)rcv_val / 65535);
  3397                           
  3398                           ;incstack = 0
  3399                           ; Regs used in _CalcHumid: [wreg+status,2+status,0+pclath+cstack]
  3400  034B  30FF               	movlw	255
  3401  034C  0020               	movlb	0	; select bank0
  3402  034D  00A0               	movwf	___ftdiv@f2
  3403  034E  307F               	movlw	127
  3404  034F  00A1               	movwf	___ftdiv@f2+1
  3405  0350  3047               	movlw	71
  3406  0351  00A2               	movwf	___ftdiv@f2+2
  3407  0352  0831               	movf	CalcHumid@rcv_val+1,w
  3408  0353  00F9               	movwf	___lwtoft@c+1
  3409  0354  0830               	movf	CalcHumid@rcv_val,w
  3410  0355  00F8               	movwf	___lwtoft@c
  3411  0356  3182  222F  3183   	fcall	___lwtoft
  3412  0359  0878               	movf	?___lwtoft,w
  3413  035A  0020               	movlb	0	; select bank0
  3414  035B  00A3               	movwf	___ftdiv@f1
  3415  035C  0879               	movf	?___lwtoft+1,w
  3416  035D  00A4               	movwf	___ftdiv@f1+1
  3417  035E  087A               	movf	?___lwtoft+2,w
  3418  035F  00A5               	movwf	___ftdiv@f1+2
  3419  0360  3184  24DA  3183   	fcall	___ftdiv
  3420  0363  0020               	movlb	0	; select bank0
  3421  0364  0820               	movf	?___ftdiv,w
  3422  0365  00B2               	movwf	CalcHumid@ans
  3423  0366  0821               	movf	?___ftdiv+1,w
  3424  0367  00B3               	movwf	CalcHumid@ans+1
  3425  0368  0822               	movf	?___ftdiv+2,w
  3426  0369  00B4               	movwf	CalcHumid@ans+2
  3427                           
  3428                           ;sht3x.c: 26: ans = ans * 100;
  3429  036A  3000               	movlw	0
  3430  036B  00F8               	movwf	___ftmul@f1
  3431  036C  30C8               	movlw	200
  3432  036D  00F9               	movwf	___ftmul@f1+1
  3433  036E  3042               	movlw	66
  3434  036F  00FA               	movwf	___ftmul@f1+2
  3435  0370  0832               	movf	CalcHumid@ans,w
  3436  0371  00FB               	movwf	___ftmul@f2
  3437  0372  0833               	movf	CalcHumid@ans+1,w
  3438  0373  00FC               	movwf	___ftmul@f2+1
  3439  0374  0834               	movf	CalcHumid@ans+2,w
  3440  0375  00FD               	movwf	___ftmul@f2+2
  3441  0376  3185  2583  3183   	fcall	___ftmul
  3442  0379  0878               	movf	?___ftmul,w
  3443  037A  0020               	movlb	0	; select bank0
  3444  037B  00B2               	movwf	CalcHumid@ans
  3445  037C  0879               	movf	?___ftmul+1,w
  3446  037D  00B3               	movwf	CalcHumid@ans+1
  3447  037E  087A               	movf	?___ftmul+2,w
  3448  037F  00B4               	movwf	CalcHumid@ans+2
  3449                           
  3450                           ;sht3x.c: 28: return (int) ans;
  3451  0380  0832               	movf	CalcHumid@ans,w
  3452  0381  00F0               	movwf	___fttol@f1
  3453  0382  0833               	movf	CalcHumid@ans+1,w
  3454  0383  00F1               	movwf	___fttol@f1+1
  3455  0384  0834               	movf	CalcHumid@ans+2,w
  3456  0385  00F2               	movwf	___fttol@f1+2
  3457  0386  3184  2454         	fcall	___fttol
  3458  0388  0871               	movf	?___fttol+1,w
  3459  0389  0020               	movlb	0	; select bank0
  3460  038A  00B1               	movwf	?_CalcHumid+1
  3461  038B  0870               	movf	?___fttol,w
  3462  038C  00B0               	movwf	?_CalcHumid
  3463  038D  0008               	return
  3464  038E                     __end_of_CalcHumid:	
  3465                           
  3466                           	psect	text25
  3467  022F                     __ptext25:	
  3468 ;; *************** function ___lwtoft *****************
  3469 ;; Defined at:
  3470 ;;		line 28 in file "/opt/microchip/xc8/v1.35/sources/common/lwtoft.c"
  3471 ;; Parameters:    Size  Location     Type
  3472 ;;  c               2    8[COMMON] unsigned int 
  3473 ;; Auto vars:     Size  Location     Type
  3474 ;;		None
  3475 ;; Return value:  Size  Location     Type
  3476 ;;                  3    8[COMMON] float 
  3477 ;; Registers used:
  3478 ;;		wreg, status,2, status,0, pclath, cstack
  3479 ;; Tracked objects:
  3480 ;;		On entry : 0/0
  3481 ;;		On exit  : 0/0
  3482 ;;		Unchanged: 0/0
  3483 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3484 ;;      Params:         3       0       0       0
  3485 ;;      Locals:         0       0       0       0
  3486 ;;      Temps:          1       0       0       0
  3487 ;;      Totals:         4       0       0       0
  3488 ;;Total ram usage:        4 bytes
  3489 ;; Hardware stack levels used:    1
  3490 ;; Hardware stack levels required when called:    1
  3491 ;; This function calls:
  3492 ;;		___ftpack
  3493 ;; This function is called by:
  3494 ;;		_CalcHumid
  3495 ;; This function uses a non-reentrant model
  3496 ;;
  3497                           
  3498                           
  3499                           ;psect for function ___lwtoft
  3500  022F                     ___lwtoft:	
  3501                           
  3502                           ;incstack = 0
  3503                           ; Regs used in ___lwtoft: [wreg+status,2+status,0+pclath+cstack]
  3504  022F  0878               	movf	___lwtoft@c,w
  3505  0230  00F0               	movwf	___ftpack@arg
  3506  0231  0879               	movf	___lwtoft@c+1,w
  3507  0232  00F1               	movwf	___ftpack@arg+1
  3508  0233  01F2               	clrf	___ftpack@arg+2
  3509  0234  308E               	movlw	142
  3510  0235  00FB               	movwf	??___lwtoft
  3511  0236  087B               	movf	??___lwtoft,w
  3512  0237  00F3               	movwf	___ftpack@exp
  3513  0238  01F4               	clrf	___ftpack@sign
  3514  0239  3183  23F0         	fcall	___ftpack
  3515  023B  0870               	movf	?___ftpack,w
  3516  023C  00F8               	movwf	?___lwtoft
  3517  023D  0871               	movf	?___ftpack+1,w
  3518  023E  00F9               	movwf	?___lwtoft+1
  3519  023F  0872               	movf	?___ftpack+2,w
  3520  0240  00FA               	movwf	?___lwtoft+2
  3521  0241  0008               	return
  3522  0242                     __end_of___lwtoft:	
  3523                           
  3524                           	psect	text26
  3525  0454                     __ptext26:	
  3526 ;; *************** function ___fttol *****************
  3527 ;; Defined at:
  3528 ;;		line 44 in file "/opt/microchip/xc8/v1.35/sources/common/fttol.c"
  3529 ;; Parameters:    Size  Location     Type
  3530 ;;  f1              3    0[COMMON] float 
  3531 ;; Auto vars:     Size  Location     Type
  3532 ;;  lval            4    9[COMMON] unsigned long 
  3533 ;;  exp1            1   13[COMMON] unsigned char 
  3534 ;;  sign1           1    8[COMMON] unsigned char 
  3535 ;; Return value:  Size  Location     Type
  3536 ;;                  4    0[COMMON] long 
  3537 ;; Registers used:
  3538 ;;		wreg, status,2, status,0
  3539 ;; Tracked objects:
  3540 ;;		On entry : 0/0
  3541 ;;		On exit  : 0/0
  3542 ;;		Unchanged: 0/0
  3543 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3544 ;;      Params:         4       0       0       0
  3545 ;;      Locals:         6       0       0       0
  3546 ;;      Temps:          4       0       0       0
  3547 ;;      Totals:        14       0       0       0
  3548 ;;Total ram usage:       14 bytes
  3549 ;; Hardware stack levels used:    1
  3550 ;; This function calls:
  3551 ;;		Nothing
  3552 ;; This function is called by:
  3553 ;;		_CalcHumid
  3554 ;; This function uses a non-reentrant model
  3555 ;;
  3556                           
  3557                           
  3558                           ;psect for function ___fttol
  3559  0454                     ___fttol:	
  3560                           
  3561                           ;incstack = 0
  3562                           ; Regs used in ___fttol: [wreg+status,2+status,0]
  3563  0454  0870               	movf	___fttol@f1,w
  3564  0455  00F4               	movwf	??___fttol
  3565  0456  0871               	movf	___fttol@f1+1,w
  3566  0457  00F5               	movwf	??___fttol+1
  3567  0458  0872               	movf	___fttol@f1+2,w
  3568  0459  00F6               	movwf	??___fttol+2
  3569  045A  1003               	clrc
  3570  045B  0D75               	rlf	??___fttol+1,w
  3571  045C  0D76               	rlf	??___fttol+2,w
  3572  045D  00F7               	movwf	??___fttol+3
  3573  045E  0877               	movf	??___fttol+3,w
  3574  045F  00FD               	movwf	___fttol@exp1
  3575  0460  087D               	movf	___fttol@exp1,w
  3576  0461  1D03               	btfss	3,2
  3577  0462  2C6C               	goto	l1435
  3578  0463  3000               	movlw	0
  3579  0464  00F3               	movwf	?___fttol+3
  3580  0465  3000               	movlw	0
  3581  0466  00F2               	movwf	?___fttol+2
  3582  0467  3000               	movlw	0
  3583  0468  00F1               	movwf	?___fttol+1
  3584  0469  3000               	movlw	0
  3585  046A  00F0               	movwf	?___fttol
  3586  046B  0008               	return
  3587  046C                     l1435:	
  3588  046C  0870               	movf	___fttol@f1,w
  3589  046D  00F4               	movwf	??___fttol
  3590  046E  0871               	movf	___fttol@f1+1,w
  3591  046F  00F5               	movwf	??___fttol+1
  3592  0470  0872               	movf	___fttol@f1+2,w
  3593  0471  00F6               	movwf	??___fttol+2
  3594  0472  3017               	movlw	23
  3595  0473                     u1435:	
  3596  0473  36F6               	lsrf	??___fttol+2,f
  3597  0474  0CF5               	rrf	??___fttol+1,f
  3598  0475  0CF4               	rrf	??___fttol,f
  3599  0476  0B89               	decfsz	9,f
  3600  0477  2C73               	goto	u1435
  3601  0478  0874               	movf	??___fttol,w
  3602  0479  00F7               	movwf	??___fttol+3
  3603  047A  0877               	movf	??___fttol+3,w
  3604  047B  00F8               	movwf	___fttol@sign1
  3605  047C  17F1               	bsf	___fttol@f1+1,7
  3606  047D  30FF               	movlw	255
  3607  047E  05F0               	andwf	___fttol@f1,f
  3608  047F  30FF               	movlw	255
  3609  0480  05F1               	andwf	___fttol@f1+1,f
  3610  0481  3000               	movlw	0
  3611  0482  05F2               	andwf	___fttol@f1+2,f
  3612  0483  0870               	movf	___fttol@f1,w
  3613  0484  00F9               	movwf	___fttol@lval
  3614  0485  0871               	movf	___fttol@f1+1,w
  3615  0486  00FA               	movwf	___fttol@lval+1
  3616  0487  0872               	movf	___fttol@f1+2,w
  3617  0488  00FB               	movwf	___fttol@lval+2
  3618  0489  01FC               	clrf	___fttol@lval+3
  3619  048A  308E               	movlw	142
  3620  048B  02FD               	subwf	___fttol@exp1,f
  3621  048C  1FFD               	btfss	___fttol@exp1,7
  3622  048D  2CAA               	goto	l1455
  3623  048E  087D               	movf	___fttol@exp1,w
  3624  048F  3A80               	xorlw	128
  3625  0490  3E8F               	addlw	143
  3626  0491  1803               	skipnc
  3627  0492  2C9C               	goto	l1453
  3628  0493  3000               	movlw	0
  3629  0494  00F3               	movwf	?___fttol+3
  3630  0495  3000               	movlw	0
  3631  0496  00F2               	movwf	?___fttol+2
  3632  0497  3000               	movlw	0
  3633  0498  00F1               	movwf	?___fttol+1
  3634  0499  3000               	movlw	0
  3635  049A  00F0               	movwf	?___fttol
  3636  049B  0008               	return
  3637  049C                     l1453:	
  3638  049C  3001               	movlw	1
  3639  049D                     u1465:	
  3640  049D  36FC               	lsrf	___fttol@lval+3,f
  3641  049E  0CFB               	rrf	___fttol@lval+2,f
  3642  049F  0CFA               	rrf	___fttol@lval+1,f
  3643  04A0  0CF9               	rrf	___fttol@lval,f
  3644  04A1  0B89               	decfsz	9,f
  3645  04A2  2C9D               	goto	u1465
  3646  04A3  3001               	movlw	1
  3647  04A4  00F4               	movwf	??___fttol
  3648  04A5  0874               	movf	??___fttol,w
  3649  04A6  07FD               	addwf	___fttol@exp1,f
  3650  04A7  1903               	btfsc	3,2
  3651  04A8  2CC3               	goto	l1463
  3652  04A9  2C9C               	goto	l1453
  3653  04AA                     l1455:	
  3654  04AA  3018               	movlw	24
  3655  04AB  027D               	subwf	___fttol@exp1,w
  3656  04AC  1C03               	skipc
  3657  04AD  2CC0               	goto	l469
  3658  04AE  3000               	movlw	0
  3659  04AF  00F3               	movwf	?___fttol+3
  3660  04B0  3000               	movlw	0
  3661  04B1  00F2               	movwf	?___fttol+2
  3662  04B2  3000               	movlw	0
  3663  04B3  00F1               	movwf	?___fttol+1
  3664  04B4  3000               	movlw	0
  3665  04B5  00F0               	movwf	?___fttol
  3666  04B6  0008               	return
  3667  04B7                     l1461:	
  3668  04B7  3001               	movlw	1
  3669  04B8                     u1495:	
  3670  04B8  35F9               	lslf	___fttol@lval,f
  3671  04B9  0DFA               	rlf	___fttol@lval+1,f
  3672  04BA  0DFB               	rlf	___fttol@lval+2,f
  3673  04BB  0DFC               	rlf	___fttol@lval+3,f
  3674  04BC  0B89               	decfsz	9,f
  3675  04BD  2CB8               	goto	u1495
  3676  04BE  3001               	movlw	1
  3677  04BF  02FD               	subwf	___fttol@exp1,f
  3678  04C0                     l469:	
  3679  04C0  087D               	movf	___fttol@exp1,w
  3680  04C1  1D03               	btfss	3,2
  3681  04C2  2CB7               	goto	l1461
  3682  04C3                     l1463:	
  3683  04C3  0878               	movf	___fttol@sign1,w
  3684  04C4  1903               	btfsc	3,2
  3685  04C5  2CD1               	goto	l1467
  3686  04C6  09F9               	comf	___fttol@lval,f
  3687  04C7  09FA               	comf	___fttol@lval+1,f
  3688  04C8  09FB               	comf	___fttol@lval+2,f
  3689  04C9  09FC               	comf	___fttol@lval+3,f
  3690  04CA  0AF9               	incf	___fttol@lval,f
  3691  04CB  1903               	skipnz
  3692  04CC  0AFA               	incf	___fttol@lval+1,f
  3693  04CD  1903               	skipnz
  3694  04CE  0AFB               	incf	___fttol@lval+2,f
  3695  04CF  1903               	skipnz
  3696  04D0  0AFC               	incf	___fttol@lval+3,f
  3697  04D1                     l1467:	
  3698  04D1  087C               	movf	___fttol@lval+3,w
  3699  04D2  00F3               	movwf	?___fttol+3
  3700  04D3  087B               	movf	___fttol@lval+2,w
  3701  04D4  00F2               	movwf	?___fttol+2
  3702  04D5  087A               	movf	___fttol@lval+1,w
  3703  04D6  00F1               	movwf	?___fttol+1
  3704  04D7  0879               	movf	___fttol@lval,w
  3705  04D8  00F0               	movwf	?___fttol
  3706  04D9  0008               	return
  3707  04DA                     __end_of___fttol:	
  3708                           
  3709                           	psect	text27
  3710  0583                     __ptext27:	
  3711 ;; *************** function ___ftmul *****************
  3712 ;; Defined at:
  3713 ;;		line 62 in file "/opt/microchip/xc8/v1.35/sources/common/ftmul.c"
  3714 ;; Parameters:    Size  Location     Type
  3715 ;;  f1              3    8[COMMON] float 
  3716 ;;  f2              3   11[COMMON] float 
  3717 ;; Auto vars:     Size  Location     Type
  3718 ;;  f3_as_produc    3    5[BANK0 ] unsigned um
  3719 ;;  sign            1    9[BANK0 ] unsigned char 
  3720 ;;  cntr            1    8[BANK0 ] unsigned char 
  3721 ;;  exp             1    4[BANK0 ] unsigned char 
  3722 ;; Return value:  Size  Location     Type
  3723 ;;                  3    8[COMMON] float 
  3724 ;; Registers used:
  3725 ;;		wreg, status,2, status,0, pclath, cstack
  3726 ;; Tracked objects:
  3727 ;;		On entry : 0/0
  3728 ;;		On exit  : 0/0
  3729 ;;		Unchanged: 0/0
  3730 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3731 ;;      Params:         6       0       0       0
  3732 ;;      Locals:         0       6       0       0
  3733 ;;      Temps:          0       4       0       0
  3734 ;;      Totals:         6      10       0       0
  3735 ;;Total ram usage:       16 bytes
  3736 ;; Hardware stack levels used:    1
  3737 ;; Hardware stack levels required when called:    1
  3738 ;; This function calls:
  3739 ;;		___ftpack
  3740 ;; This function is called by:
  3741 ;;		_CalcHumid
  3742 ;; This function uses a non-reentrant model
  3743 ;;
  3744                           
  3745                           
  3746                           ;psect for function ___ftmul
  3747  0583                     ___ftmul:	
  3748                           
  3749                           ;incstack = 0
  3750                           ; Regs used in ___ftmul: [wreg+status,2+status,0+pclath+cstack]
  3751  0583  0878               	movf	___ftmul@f1,w
  3752  0584  0020               	movlb	0	; select bank0
  3753  0585  00A0               	movwf	??___ftmul
  3754  0586  0879               	movf	___ftmul@f1+1,w
  3755  0587  00A1               	movwf	??___ftmul+1
  3756  0588  087A               	movf	___ftmul@f1+2,w
  3757  0589  00A2               	movwf	??___ftmul+2
  3758  058A  1003               	clrc
  3759  058B  0D21               	rlf	??___ftmul+1,w
  3760  058C  0D22               	rlf	??___ftmul+2,w
  3761  058D  00A3               	movwf	??___ftmul+3
  3762  058E  0823               	movf	??___ftmul+3,w
  3763  058F  00A4               	movwf	___ftmul@exp
  3764  0590  0824               	movf	___ftmul@exp,w
  3765  0591  1D03               	btfss	3,2
  3766  0592  2D9A               	goto	l1385
  3767  0593  3000               	movlw	0
  3768  0594  00F8               	movwf	?___ftmul
  3769  0595  3000               	movlw	0
  3770  0596  00F9               	movwf	?___ftmul+1
  3771  0597  3000               	movlw	0
  3772  0598  00FA               	movwf	?___ftmul+2
  3773  0599  0008               	return
  3774  059A                     l1385:	
  3775  059A  087B               	movf	___ftmul@f2,w
  3776  059B  00A0               	movwf	??___ftmul
  3777  059C  087C               	movf	___ftmul@f2+1,w
  3778  059D  00A1               	movwf	??___ftmul+1
  3779  059E  087D               	movf	___ftmul@f2+2,w
  3780  059F  00A2               	movwf	??___ftmul+2
  3781  05A0  1003               	clrc
  3782  05A1  0D21               	rlf	??___ftmul+1,w
  3783  05A2  0D22               	rlf	??___ftmul+2,w
  3784  05A3  00A3               	movwf	??___ftmul+3
  3785  05A4  0823               	movf	??___ftmul+3,w
  3786  05A5  00A9               	movwf	___ftmul@sign
  3787  05A6  0829               	movf	___ftmul@sign,w
  3788  05A7  1D03               	btfss	3,2
  3789  05A8  2DB0               	goto	l1391
  3790  05A9  3000               	movlw	0
  3791  05AA  00F8               	movwf	?___ftmul
  3792  05AB  3000               	movlw	0
  3793  05AC  00F9               	movwf	?___ftmul+1
  3794  05AD  3000               	movlw	0
  3795  05AE  00FA               	movwf	?___ftmul+2
  3796  05AF  0008               	return
  3797  05B0                     l1391:	
  3798  05B0  0829               	movf	___ftmul@sign,w
  3799  05B1  3E7B               	addlw	123
  3800  05B2  00A0               	movwf	??___ftmul
  3801  05B3  0820               	movf	??___ftmul,w
  3802  05B4  07A4               	addwf	___ftmul@exp,f
  3803  05B5  0878               	movf	___ftmul@f1,w
  3804  05B6  00A0               	movwf	??___ftmul
  3805  05B7  0879               	movf	___ftmul@f1+1,w
  3806  05B8  00A1               	movwf	??___ftmul+1
  3807  05B9  087A               	movf	___ftmul@f1+2,w
  3808  05BA  00A2               	movwf	??___ftmul+2
  3809  05BB  3010               	movlw	16
  3810  05BC                     u1325:	
  3811  05BC  36A2               	lsrf	??___ftmul+2,f
  3812  05BD  0CA1               	rrf	??___ftmul+1,f
  3813  05BE  0CA0               	rrf	??___ftmul,f
  3814  05BF  0B89               	decfsz	9,f
  3815  05C0  2DBC               	goto	u1325
  3816  05C1  0820               	movf	??___ftmul,w
  3817  05C2  00A3               	movwf	??___ftmul+3
  3818  05C3  0823               	movf	??___ftmul+3,w
  3819  05C4  00A9               	movwf	___ftmul@sign
  3820  05C5  087B               	movf	___ftmul@f2,w
  3821  05C6  00A0               	movwf	??___ftmul
  3822  05C7  087C               	movf	___ftmul@f2+1,w
  3823  05C8  00A1               	movwf	??___ftmul+1
  3824  05C9  087D               	movf	___ftmul@f2+2,w
  3825  05CA  00A2               	movwf	??___ftmul+2
  3826  05CB  3010               	movlw	16
  3827  05CC                     u1335:	
  3828  05CC  36A2               	lsrf	??___ftmul+2,f
  3829  05CD  0CA1               	rrf	??___ftmul+1,f
  3830  05CE  0CA0               	rrf	??___ftmul,f
  3831  05CF  0B89               	decfsz	9,f
  3832  05D0  2DCC               	goto	u1335
  3833  05D1  0820               	movf	??___ftmul,w
  3834  05D2  00A3               	movwf	??___ftmul+3
  3835  05D3  0823               	movf	??___ftmul+3,w
  3836  05D4  06A9               	xorwf	___ftmul@sign,f
  3837  05D5  3080               	movlw	128
  3838  05D6  00A0               	movwf	??___ftmul
  3839  05D7  0820               	movf	??___ftmul,w
  3840  05D8  05A9               	andwf	___ftmul@sign,f
  3841  05D9  17F9               	bsf	___ftmul@f1+1,7
  3842  05DA  17FC               	bsf	___ftmul@f2+1,7
  3843  05DB  30FF               	movlw	255
  3844  05DC  05FB               	andwf	___ftmul@f2,f
  3845  05DD  30FF               	movlw	255
  3846  05DE  05FC               	andwf	___ftmul@f2+1,f
  3847  05DF  3000               	movlw	0
  3848  05E0  05FD               	andwf	___ftmul@f2+2,f
  3849  05E1  3000               	movlw	0
  3850  05E2  00A5               	movwf	___ftmul@f3_as_product
  3851  05E3  3000               	movlw	0
  3852  05E4  00A6               	movwf	___ftmul@f3_as_product+1
  3853  05E5  3000               	movlw	0
  3854  05E6  00A7               	movwf	___ftmul@f3_as_product+2
  3855  05E7  3007               	movlw	7
  3856  05E8  00A0               	movwf	??___ftmul
  3857  05E9  0820               	movf	??___ftmul,w
  3858  05EA  00A8               	movwf	___ftmul@cntr
  3859  05EB                     l1403:	
  3860  05EB  1C78               	btfss	___ftmul@f1,0
  3861  05EC  2DF3               	goto	l1407
  3862  05ED  087B               	movf	___ftmul@f2,w
  3863  05EE  07A5               	addwf	___ftmul@f3_as_product,f
  3864  05EF  087C               	movf	___ftmul@f2+1,w
  3865  05F0  3DA6               	addwfc	___ftmul@f3_as_product+1,f
  3866  05F1  087D               	movf	___ftmul@f2+2,w
  3867  05F2  3DA7               	addwfc	___ftmul@f3_as_product+2,f
  3868  05F3                     l1407:	
  3869  05F3  3001               	movlw	1
  3870  05F4                     u1355:	
  3871  05F4  36FA               	lsrf	___ftmul@f1+2,f
  3872  05F5  0CF9               	rrf	___ftmul@f1+1,f
  3873  05F6  0CF8               	rrf	___ftmul@f1,f
  3874  05F7  0B89               	decfsz	9,f
  3875  05F8  2DF4               	goto	u1355
  3876  05F9  3001               	movlw	1
  3877  05FA                     u1365:	
  3878  05FA  35FB               	lslf	___ftmul@f2,f
  3879  05FB  0DFC               	rlf	___ftmul@f2+1,f
  3880  05FC  0DFD               	rlf	___ftmul@f2+2,f
  3881  05FD  0B89               	decfsz	9,f
  3882  05FE  2DFA               	goto	u1365
  3883  05FF  3001               	movlw	1
  3884  0600  02A8               	subwf	___ftmul@cntr,f
  3885  0601  1D03               	btfss	3,2
  3886  0602  2DEB               	goto	l1403
  3887  0603  3009               	movlw	9
  3888  0604  00A0               	movwf	??___ftmul
  3889  0605  0820               	movf	??___ftmul,w
  3890  0606  00A8               	movwf	___ftmul@cntr
  3891  0607                     l1415:	
  3892  0607  1C78               	btfss	___ftmul@f1,0
  3893  0608  2E0F               	goto	l1419
  3894  0609  087B               	movf	___ftmul@f2,w
  3895  060A  07A5               	addwf	___ftmul@f3_as_product,f
  3896  060B  087C               	movf	___ftmul@f2+1,w
  3897  060C  3DA6               	addwfc	___ftmul@f3_as_product+1,f
  3898  060D  087D               	movf	___ftmul@f2+2,w
  3899  060E  3DA7               	addwfc	___ftmul@f3_as_product+2,f
  3900  060F                     l1419:	
  3901  060F  3001               	movlw	1
  3902  0610                     u1395:	
  3903  0610  36FA               	lsrf	___ftmul@f1+2,f
  3904  0611  0CF9               	rrf	___ftmul@f1+1,f
  3905  0612  0CF8               	rrf	___ftmul@f1,f
  3906  0613  0B89               	decfsz	9,f
  3907  0614  2E10               	goto	u1395
  3908  0615  3001               	movlw	1
  3909  0616                     u1405:	
  3910  0616  36A7               	lsrf	___ftmul@f3_as_product+2,f
  3911  0617  0CA6               	rrf	___ftmul@f3_as_product+1,f
  3912  0618  0CA5               	rrf	___ftmul@f3_as_product,f
  3913  0619  0B89               	decfsz	9,f
  3914  061A  2E16               	goto	u1405
  3915  061B  3001               	movlw	1
  3916  061C  02A8               	subwf	___ftmul@cntr,f
  3917  061D  1D03               	btfss	3,2
  3918  061E  2E07               	goto	l1415
  3919  061F  0825               	movf	___ftmul@f3_as_product,w
  3920  0620  00F0               	movwf	___ftpack@arg
  3921  0621  0826               	movf	___ftmul@f3_as_product+1,w
  3922  0622  00F1               	movwf	___ftpack@arg+1
  3923  0623  0827               	movf	___ftmul@f3_as_product+2,w
  3924  0624  00F2               	movwf	___ftpack@arg+2
  3925  0625  0824               	movf	___ftmul@exp,w
  3926  0626  00A0               	movwf	??___ftmul
  3927  0627  0820               	movf	??___ftmul,w
  3928  0628  00F3               	movwf	___ftpack@exp
  3929  0629  0829               	movf	___ftmul@sign,w
  3930  062A  00A1               	movwf	??___ftmul+1
  3931  062B  0821               	movf	??___ftmul+1,w
  3932  062C  00F4               	movwf	___ftpack@sign
  3933  062D  3183  23F0         	fcall	___ftpack
  3934  062F  0870               	movf	?___ftpack,w
  3935  0630  00F8               	movwf	?___ftmul
  3936  0631  0871               	movf	?___ftpack+1,w
  3937  0632  00F9               	movwf	?___ftmul+1
  3938  0633  0872               	movf	?___ftpack+2,w
  3939  0634  00FA               	movwf	?___ftmul+2
  3940  0635  0008               	return
  3941  0636                     __end_of___ftmul:	
  3942                           
  3943                           	psect	text28
  3944  04DA                     __ptext28:	
  3945 ;; *************** function ___ftdiv *****************
  3946 ;; Defined at:
  3947 ;;		line 56 in file "/opt/microchip/xc8/v1.35/sources/common/ftdiv.c"
  3948 ;; Parameters:    Size  Location     Type
  3949 ;;  f2              3    0[BANK0 ] float 
  3950 ;;  f1              3    3[BANK0 ] float 
  3951 ;; Auto vars:     Size  Location     Type
  3952 ;;  f3              3   11[BANK0 ] float 
  3953 ;;  sign            1   15[BANK0 ] unsigned char 
  3954 ;;  exp             1   14[BANK0 ] unsigned char 
  3955 ;;  cntr            1   10[BANK0 ] unsigned char 
  3956 ;; Return value:  Size  Location     Type
  3957 ;;                  3    0[BANK0 ] float 
  3958 ;; Registers used:
  3959 ;;		wreg, status,2, status,0, pclath, cstack
  3960 ;; Tracked objects:
  3961 ;;		On entry : 0/0
  3962 ;;		On exit  : 0/0
  3963 ;;		Unchanged: 0/0
  3964 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3965 ;;      Params:         0       6       0       0
  3966 ;;      Locals:         0       6       0       0
  3967 ;;      Temps:          0       4       0       0
  3968 ;;      Totals:         0      16       0       0
  3969 ;;Total ram usage:       16 bytes
  3970 ;; Hardware stack levels used:    1
  3971 ;; Hardware stack levels required when called:    1
  3972 ;; This function calls:
  3973 ;;		___ftpack
  3974 ;; This function is called by:
  3975 ;;		_CalcHumid
  3976 ;; This function uses a non-reentrant model
  3977 ;;
  3978                           
  3979                           
  3980                           ;psect for function ___ftdiv
  3981  04DA                     ___ftdiv:	
  3982                           
  3983                           ;incstack = 0
  3984                           ; Regs used in ___ftdiv: [wreg+status,2+status,0+pclath+cstack]
  3985  04DA  0020               	movlb	0	; select bank0
  3986  04DB  0823               	movf	___ftdiv@f1,w
  3987  04DC  00A6               	movwf	??___ftdiv
  3988  04DD  0824               	movf	___ftdiv@f1+1,w
  3989  04DE  00A7               	movwf	??___ftdiv+1
  3990  04DF  0825               	movf	___ftdiv@f1+2,w
  3991  04E0  00A8               	movwf	??___ftdiv+2
  3992  04E1  1003               	clrc
  3993  04E2  0D27               	rlf	??___ftdiv+1,w
  3994  04E3  0D28               	rlf	??___ftdiv+2,w
  3995  04E4  00A9               	movwf	??___ftdiv+3
  3996  04E5  0829               	movf	??___ftdiv+3,w
  3997  04E6  00AE               	movwf	___ftdiv@exp
  3998  04E7  082E               	movf	___ftdiv@exp,w
  3999  04E8  1D03               	btfss	3,2
  4000  04E9  2CF1               	goto	l1343
  4001  04EA  3000               	movlw	0
  4002  04EB  00A0               	movwf	?___ftdiv
  4003  04EC  3000               	movlw	0
  4004  04ED  00A1               	movwf	?___ftdiv+1
  4005  04EE  3000               	movlw	0
  4006  04EF  00A2               	movwf	?___ftdiv+2
  4007  04F0  0008               	return
  4008  04F1                     l1343:	
  4009  04F1  0820               	movf	___ftdiv@f2,w
  4010  04F2  00A6               	movwf	??___ftdiv
  4011  04F3  0821               	movf	___ftdiv@f2+1,w
  4012  04F4  00A7               	movwf	??___ftdiv+1
  4013  04F5  0822               	movf	___ftdiv@f2+2,w
  4014  04F6  00A8               	movwf	??___ftdiv+2
  4015  04F7  1003               	clrc
  4016  04F8  0D27               	rlf	??___ftdiv+1,w
  4017  04F9  0D28               	rlf	??___ftdiv+2,w
  4018  04FA  00A9               	movwf	??___ftdiv+3
  4019  04FB  0829               	movf	??___ftdiv+3,w
  4020  04FC  00AF               	movwf	___ftdiv@sign
  4021  04FD  082F               	movf	___ftdiv@sign,w
  4022  04FE  1D03               	btfss	3,2
  4023  04FF  2D07               	goto	l1349
  4024  0500  3000               	movlw	0
  4025  0501  00A0               	movwf	?___ftdiv
  4026  0502  3000               	movlw	0
  4027  0503  00A1               	movwf	?___ftdiv+1
  4028  0504  3000               	movlw	0
  4029  0505  00A2               	movwf	?___ftdiv+2
  4030  0506  0008               	return
  4031  0507                     l1349:	
  4032  0507  3000               	movlw	0
  4033  0508  00AB               	movwf	___ftdiv@f3
  4034  0509  3000               	movlw	0
  4035  050A  00AC               	movwf	___ftdiv@f3+1
  4036  050B  3000               	movlw	0
  4037  050C  00AD               	movwf	___ftdiv@f3+2
  4038  050D  3089               	movlw	137
  4039  050E  072F               	addwf	___ftdiv@sign,w
  4040  050F  00A6               	movwf	??___ftdiv
  4041  0510  0826               	movf	??___ftdiv,w
  4042  0511  02AE               	subwf	___ftdiv@exp,f
  4043  0512  0823               	movf	___ftdiv@f1,w
  4044  0513  00A6               	movwf	??___ftdiv
  4045  0514  0824               	movf	___ftdiv@f1+1,w
  4046  0515  00A7               	movwf	??___ftdiv+1
  4047  0516  0825               	movf	___ftdiv@f1+2,w
  4048  0517  00A8               	movwf	??___ftdiv+2
  4049  0518  3010               	movlw	16
  4050  0519                     u1245:	
  4051  0519  36A8               	lsrf	??___ftdiv+2,f
  4052  051A  0CA7               	rrf	??___ftdiv+1,f
  4053  051B  0CA6               	rrf	??___ftdiv,f
  4054  051C  0B89               	decfsz	9,f
  4055  051D  2D19               	goto	u1245
  4056  051E  0826               	movf	??___ftdiv,w
  4057  051F  00A9               	movwf	??___ftdiv+3
  4058  0520  0829               	movf	??___ftdiv+3,w
  4059  0521  00AF               	movwf	___ftdiv@sign
  4060  0522  0820               	movf	___ftdiv@f2,w
  4061  0523  00A6               	movwf	??___ftdiv
  4062  0524  0821               	movf	___ftdiv@f2+1,w
  4063  0525  00A7               	movwf	??___ftdiv+1
  4064  0526  0822               	movf	___ftdiv@f2+2,w
  4065  0527  00A8               	movwf	??___ftdiv+2
  4066  0528  3010               	movlw	16
  4067  0529                     u1255:	
  4068  0529  36A8               	lsrf	??___ftdiv+2,f
  4069  052A  0CA7               	rrf	??___ftdiv+1,f
  4070  052B  0CA6               	rrf	??___ftdiv,f
  4071  052C  0B89               	decfsz	9,f
  4072  052D  2D29               	goto	u1255
  4073  052E  0826               	movf	??___ftdiv,w
  4074  052F  00A9               	movwf	??___ftdiv+3
  4075  0530  0829               	movf	??___ftdiv+3,w
  4076  0531  06AF               	xorwf	___ftdiv@sign,f
  4077  0532  3080               	movlw	128
  4078  0533  00A6               	movwf	??___ftdiv
  4079  0534  0826               	movf	??___ftdiv,w
  4080  0535  05AF               	andwf	___ftdiv@sign,f
  4081  0536  17A4               	bsf	___ftdiv@f1+1,7
  4082  0537  30FF               	movlw	255
  4083  0538  05A3               	andwf	___ftdiv@f1,f
  4084  0539  30FF               	movlw	255
  4085  053A  05A4               	andwf	___ftdiv@f1+1,f
  4086  053B  3000               	movlw	0
  4087  053C  05A5               	andwf	___ftdiv@f1+2,f
  4088  053D  17A1               	bsf	___ftdiv@f2+1,7
  4089  053E  30FF               	movlw	255
  4090  053F  05A0               	andwf	___ftdiv@f2,f
  4091  0540  30FF               	movlw	255
  4092  0541  05A1               	andwf	___ftdiv@f2+1,f
  4093  0542  3000               	movlw	0
  4094  0543  05A2               	andwf	___ftdiv@f2+2,f
  4095  0544  3018               	movlw	24
  4096  0545  00A6               	movwf	??___ftdiv
  4097  0546  0826               	movf	??___ftdiv,w
  4098  0547  00AA               	movwf	___ftdiv@cntr
  4099  0548                     l1363:	
  4100  0548  3001               	movlw	1
  4101  0549                     u1265:	
  4102  0549  35AB               	lslf	___ftdiv@f3,f
  4103  054A  0DAC               	rlf	___ftdiv@f3+1,f
  4104  054B  0DAD               	rlf	___ftdiv@f3+2,f
  4105  054C  0B89               	decfsz	9,f
  4106  054D  2D49               	goto	u1265
  4107  054E  0822               	movf	___ftdiv@f2+2,w
  4108  054F  0225               	subwf	___ftdiv@f1+2,w
  4109  0550  1D03               	skipz
  4110  0551  2D58               	goto	u1275
  4111  0552  0821               	movf	___ftdiv@f2+1,w
  4112  0553  0224               	subwf	___ftdiv@f1+1,w
  4113  0554  1D03               	skipz
  4114  0555  2D58               	goto	u1275
  4115  0556  0820               	movf	___ftdiv@f2,w
  4116  0557  0223               	subwf	___ftdiv@f1,w
  4117  0558                     u1275:	
  4118  0558  1C03               	skipc
  4119  0559  2D61               	goto	l1371
  4120  055A  0820               	movf	___ftdiv@f2,w
  4121  055B  02A3               	subwf	___ftdiv@f1,f
  4122  055C  0821               	movf	___ftdiv@f2+1,w
  4123  055D  3BA4               	subwfb	___ftdiv@f1+1,f
  4124  055E  0822               	movf	___ftdiv@f2+2,w
  4125  055F  3BA5               	subwfb	___ftdiv@f1+2,f
  4126  0560  142B               	bsf	___ftdiv@f3,0
  4127  0561                     l1371:	
  4128  0561  3001               	movlw	1
  4129  0562                     u1285:	
  4130  0562  35A3               	lslf	___ftdiv@f1,f
  4131  0563  0DA4               	rlf	___ftdiv@f1+1,f
  4132  0564  0DA5               	rlf	___ftdiv@f1+2,f
  4133  0565  0B89               	decfsz	9,f
  4134  0566  2D62               	goto	u1285
  4135  0567  3001               	movlw	1
  4136  0568  02AA               	subwf	___ftdiv@cntr,f
  4137  0569  1D03               	btfss	3,2
  4138  056A  2D48               	goto	l1363
  4139  056B  082B               	movf	___ftdiv@f3,w
  4140  056C  00F0               	movwf	___ftpack@arg
  4141  056D  082C               	movf	___ftdiv@f3+1,w
  4142  056E  00F1               	movwf	___ftpack@arg+1
  4143  056F  082D               	movf	___ftdiv@f3+2,w
  4144  0570  00F2               	movwf	___ftpack@arg+2
  4145  0571  082E               	movf	___ftdiv@exp,w
  4146  0572  00A6               	movwf	??___ftdiv
  4147  0573  0826               	movf	??___ftdiv,w
  4148  0574  00F3               	movwf	___ftpack@exp
  4149  0575  082F               	movf	___ftdiv@sign,w
  4150  0576  00A7               	movwf	??___ftdiv+1
  4151  0577  0827               	movf	??___ftdiv+1,w
  4152  0578  00F4               	movwf	___ftpack@sign
  4153  0579  3183  23F0         	fcall	___ftpack
  4154  057B  0870               	movf	?___ftpack,w
  4155  057C  0020               	movlb	0	; select bank0
  4156  057D  00A0               	movwf	?___ftdiv
  4157  057E  0871               	movf	?___ftpack+1,w
  4158  057F  00A1               	movwf	?___ftdiv+1
  4159  0580  0872               	movf	?___ftpack+2,w
  4160  0581  00A2               	movwf	?___ftdiv+2
  4161  0582  0008               	return
  4162  0583                     __end_of___ftdiv:	
  4163                           
  4164                           	psect	text29
  4165  03F0                     __ptext29:	
  4166 ;; *************** function ___ftpack *****************
  4167 ;; Defined at:
  4168 ;;		line 62 in file "/opt/microchip/xc8/v1.35/sources/common/float.c"
  4169 ;; Parameters:    Size  Location     Type
  4170 ;;  arg             3    0[COMMON] unsigned um
  4171 ;;  exp             1    3[COMMON] unsigned char 
  4172 ;;  sign            1    4[COMMON] unsigned char 
  4173 ;; Auto vars:     Size  Location     Type
  4174 ;;		None
  4175 ;; Return value:  Size  Location     Type
  4176 ;;                  3    0[COMMON] float 
  4177 ;; Registers used:
  4178 ;;		wreg, status,2, status,0
  4179 ;; Tracked objects:
  4180 ;;		On entry : 0/0
  4181 ;;		On exit  : 0/0
  4182 ;;		Unchanged: 0/0
  4183 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4184 ;;      Params:         5       0       0       0
  4185 ;;      Locals:         0       0       0       0
  4186 ;;      Temps:          3       0       0       0
  4187 ;;      Totals:         8       0       0       0
  4188 ;;Total ram usage:        8 bytes
  4189 ;; Hardware stack levels used:    1
  4190 ;; This function calls:
  4191 ;;		Nothing
  4192 ;; This function is called by:
  4193 ;;		___ftdiv
  4194 ;;		___ftmul
  4195 ;;		___lwtoft
  4196 ;; This function uses a non-reentrant model
  4197 ;;
  4198                           
  4199                           
  4200                           ;psect for function ___ftpack
  4201  03F0                     ___ftpack:	
  4202                           
  4203                           ;incstack = 0
  4204                           ; Regs used in ___ftpack: [wreg+status,2+status,0]
  4205  03F0  0873               	movf	___ftpack@exp,w
  4206  03F1  1903               	btfsc	3,2
  4207  03F2  2BF8               	goto	l1203
  4208  03F3  0872               	movf	___ftpack@arg+2,w
  4209  03F4  0471               	iorwf	___ftpack@arg+1,w
  4210  03F5  0470               	iorwf	___ftpack@arg,w
  4211  03F6  1D03               	skipz
  4212  03F7  2C09               	goto	l1209
  4213  03F8                     l1203:	
  4214  03F8  3000               	movlw	0
  4215  03F9  00F0               	movwf	?___ftpack
  4216  03FA  3000               	movlw	0
  4217  03FB  00F1               	movwf	?___ftpack+1
  4218  03FC  3000               	movlw	0
  4219  03FD  00F2               	movwf	?___ftpack+2
  4220  03FE  0008               	return
  4221  03FF                     l1207:	
  4222  03FF  3001               	movlw	1
  4223  0400  00F5               	movwf	??___ftpack
  4224  0401  0875               	movf	??___ftpack,w
  4225  0402  07F3               	addwf	___ftpack@exp,f
  4226  0403  3001               	movlw	1
  4227  0404                     u885:	
  4228  0404  36F2               	lsrf	___ftpack@arg+2,f
  4229  0405  0CF1               	rrf	___ftpack@arg+1,f
  4230  0406  0CF0               	rrf	___ftpack@arg,f
  4231  0407  0B89               	decfsz	9,f
  4232  0408  2C04               	goto	u885
  4233  0409                     l1209:	
  4234  0409  30FE               	movlw	254
  4235  040A  0572               	andwf	___ftpack@arg+2,w
  4236  040B  1903               	btfsc	3,2
  4237  040C  2C22               	goto	l378
  4238  040D  2BFF               	goto	l1207
  4239  040E                     l1211:	
  4240  040E  3001               	movlw	1
  4241  040F  00F5               	movwf	??___ftpack
  4242  0410  0875               	movf	??___ftpack,w
  4243  0411  07F3               	addwf	___ftpack@exp,f
  4244  0412  3001               	movlw	1
  4245  0413  07F0               	addwf	___ftpack@arg,f
  4246  0414  3000               	movlw	0
  4247  0415  1803               	skipnc
  4248  0416  3001               	movlw	1
  4249  0417  07F1               	addwf	___ftpack@arg+1,f
  4250  0418  3000               	movlw	0
  4251  0419  1803               	skipnc
  4252  041A  3001               	movlw	1
  4253  041B  07F2               	addwf	___ftpack@arg+2,f
  4254  041C  3001               	movlw	1
  4255  041D                     u905:	
  4256  041D  36F2               	lsrf	___ftpack@arg+2,f
  4257  041E  0CF1               	rrf	___ftpack@arg+1,f
  4258  041F  0CF0               	rrf	___ftpack@arg,f
  4259  0420  0B89               	decfsz	9,f
  4260  0421  2C1D               	goto	u905
  4261  0422                     l378:	
  4262  0422  30FF               	movlw	255
  4263  0423  0572               	andwf	___ftpack@arg+2,w
  4264  0424  1903               	btfsc	3,2
  4265  0425  2C2F               	goto	l1219
  4266  0426  2C0E               	goto	l1211
  4267  0427                     l1217:	
  4268  0427  3001               	movlw	1
  4269  0428  02F3               	subwf	___ftpack@exp,f
  4270  0429  3001               	movlw	1
  4271  042A                     u925:	
  4272  042A  35F0               	lslf	___ftpack@arg,f
  4273  042B  0DF1               	rlf	___ftpack@arg+1,f
  4274  042C  0DF2               	rlf	___ftpack@arg+2,f
  4275  042D  0B89               	decfsz	9,f
  4276  042E  2C2A               	goto	u925
  4277  042F                     l1219:	
  4278  042F  1BF1               	btfsc	___ftpack@arg+1,7
  4279  0430  2C35               	goto	l385
  4280  0431  3002               	movlw	2
  4281  0432  0273               	subwf	___ftpack@exp,w
  4282  0433  1803               	skipnc
  4283  0434  2C27               	goto	l1217
  4284  0435                     l385:	
  4285  0435  1873               	btfsc	___ftpack@exp,0
  4286  0436  2C3D               	goto	l386
  4287  0437  30FF               	movlw	255
  4288  0438  05F0               	andwf	___ftpack@arg,f
  4289  0439  307F               	movlw	127
  4290  043A  05F1               	andwf	___ftpack@arg+1,f
  4291  043B  30FF               	movlw	255
  4292  043C  05F2               	andwf	___ftpack@arg+2,f
  4293  043D                     l386:	
  4294  043D  1003               	clrc
  4295  043E  0CF3               	rrf	___ftpack@exp,f
  4296  043F  0873               	movf	___ftpack@exp,w
  4297  0440  00F5               	movwf	??___ftpack
  4298  0441  01F6               	clrf	??___ftpack+1
  4299  0442  01F7               	clrf	??___ftpack+2
  4300  0443  3010               	movlw	16
  4301  0444                     u965:	
  4302  0444  35F5               	lslf	??___ftpack,f
  4303  0445  0DF6               	rlf	??___ftpack+1,f
  4304  0446  0DF7               	rlf	??___ftpack+2,f
  4305  0447  0B89               	decfsz	9,f
  4306  0448  2C44               	goto	u965
  4307  0449  0875               	movf	??___ftpack,w
  4308  044A  04F0               	iorwf	___ftpack@arg,f
  4309  044B  0876               	movf	??___ftpack+1,w
  4310  044C  04F1               	iorwf	___ftpack@arg+1,f
  4311  044D  0877               	movf	??___ftpack+2,w
  4312  044E  04F2               	iorwf	___ftpack@arg+2,f
  4313  044F  0874               	movf	___ftpack@sign,w
  4314  0450  1903               	btfsc	3,2
  4315  0451  0008               	return
  4316  0452  17F2               	bsf	___ftpack@arg+2,7
  4317  0453  0008               	return
  4318  0454                     __end_of___ftpack:	
  4319  007E                     btemp	set	126	;btemp
  4320  007E                     wtemp	set	126
  4321  007E                     wtemp0	set	126
  4322  0080                     wtemp1	set	128
  4323  0082                     wtemp2	set	130
  4324  0084                     wtemp3	set	132
  4325  0086                     wtemp4	set	134
  4326  0088                     wtemp5	set	136
  4327  007F                     wtemp6	set	127
  4328  007E                     ttemp	set	126
  4329  007E                     ttemp0	set	126
  4330  0081                     ttemp1	set	129
  4331  0084                     ttemp2	set	132
  4332  0087                     ttemp3	set	135
  4333  007F                     ttemp4	set	127
  4334  007E                     ltemp	set	126
  4335  007E                     ltemp0	set	126
  4336  0082                     ltemp1	set	130
  4337  0086                     ltemp2	set	134
  4338  0080                     ltemp3	set	128


Data Sizes:
    Strings     40
    Constant    2
    Data        0
    BSS         4
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     48      52
    BANK1            80      0       0
    BANK2            80      0       0

Pointer List with Targets:

    utoa@buf	PTR unsigned char  size(1) Largest target is 9
		 -> main@buf(BANK0[9]), 

    sp__utoa	PTR unsigned char  size(1) Largest target is 9
		 -> main@buf(BANK0[9]), 

    itoa@buf	PTR unsigned char  size(1) Largest target is 9
		 -> main@buf(BANK0[9]), 

    itoa@cp	PTR unsigned char  size(1) Largest target is 9
		 -> main@buf(BANK0[9]), 

    doCRC@crc	PTR unsigned char  size(1) Largest target is 1
		 -> GetReading@crc_gen(BANK0[1]), GetStatus@crc_gen(COMMON[1]), 

    sp__itoa	PTR unsigned char  size(1) Largest target is 9
		 -> main@buf(BANK0[9]), 

    UART_String@letters	PTR unsigned char  size(2) Largest target is 14
		 -> STR_4(CODE[6]), STR_3(CODE[9]), STR_2(CODE[11]), main@buf(BANK0[9]), 
		 -> STR_1(CODE[14]), 


Critical Paths under _main in COMMON

    _main->_GetReading
    _utoa->___lwdiv
    _UART_String->_uart_xmit
    _GetReading->_I2C_Cmd
    _GetReading->_doCRC
    _I2C_restart->_I2C_check_idle
    _I2C_Cmd->_Send_I2C_Data
    _CalcHumid->___ftmul
    _CalcHumid->___fttol
    ___lwtoft->___ftpack
    ___ftmul->___ftpack
    ___ftdiv->___lwtoft

Critical Paths under _main in BANK0

    _main->_itoa
    _itoa->_CalcHumid
    _CalcHumid->___ftdiv

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                22    22      0   11263
                                             28 BANK0     20    20      0
                          _CalcHumid
                           _CalcTemp
                         _GetReading
                           _I2C_Init
                        _UART_String
                            _init_io
                               _itoa
                        _serial_init
                          _uart_xmit
 ---------------------------------------------------------------------------------
 (1) _serial_init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _itoa                                                 7     3      4    1769
                                             21 BANK0      7     3      4
                          _CalcHumid (ARG)
                           _CalcTemp (ARG)
                               _utoa
 ---------------------------------------------------------------------------------
 (2) _utoa                                                 9     5      4    1074
                                              8 COMMON     5     1      4
                                              0 BANK0      4     4      0
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              6     2      4     265
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              8     4      4     374
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (1) _init_io                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _UART_String                                          6     4      2    1013
                                              2 COMMON     6     4      2
                          _uart_xmit
 ---------------------------------------------------------------------------------
 (1) _uart_xmit                                            2     0      2     499
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (1) _I2C_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _GetReading                                          24    16      8    1331
                                              6 COMMON     8     0      8
                                              0 BANK0     16    16      0
                            _I2C_ACK
                            _I2C_Cmd
                   _I2C_Control_Read
                            _I2C_NAK
                       _I2C_Stop_Bit
                        _I2C_restart
                        _RX_I2C_Data
                              _doCRC
 ---------------------------------------------------------------------------------
 (2) _doCRC                                                6     5      1     476
                                              0 COMMON     6     5      1
 ---------------------------------------------------------------------------------
 (2) _RX_I2C_Data                                          2     2      0      23
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) _I2C_restart                                          0     0      0      46
                     _I2C_check_idle
 ---------------------------------------------------------------------------------
 (3) _I2C_check_idle                                       3     3      0      46
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (2) _I2C_NAK                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C_Control_Read                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C_Cmd                                              4     3      1     278
                                              2 COMMON     4     3      1
                  _I2C_Control_Write
                      _I2C_Start_Bit
                       _I2C_Stop_Bit
                      _Send_I2C_Data
 ---------------------------------------------------------------------------------
 (3) _Send_I2C_Data                                        2     0      2     128
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (2) _I2C_Stop_Bit                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _I2C_Start_Bit                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _I2C_Control_Write                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C_ACK                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _CalcTemp                                             2     0      2      75
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (1) _CalcHumid                                            5     3      2    6323
                                             16 BANK0      5     3      2
                            ___ftdiv
                            ___ftmul
                            ___fttol
                           ___lwtoft
 ---------------------------------------------------------------------------------
 (2) ___lwtoft                                             4     1      3    1743
                                              8 COMMON     4     1      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___fttol                                             14    10      4     305
                                              0 COMMON    14    10      4
 ---------------------------------------------------------------------------------
 (2) ___ftmul                                             16    10      6    2100
                                              8 COMMON     6     0      6
                                              0 BANK0     10    10      0
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___ftdiv                                             16    10      6    2054
                                              0 BANK0     16    10      6
                           ___ftpack
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftpack                                             8     3      5    1668
                                              0 COMMON     8     3      5
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _CalcHumid
     ___ftdiv
       ___ftpack
       ___lwtoft (ARG)
         ___ftpack
     ___ftmul
       ___ftpack
     ___fttol
     ___lwtoft
       ___ftpack
   _CalcTemp
   _GetReading
     _I2C_ACK
     _I2C_Cmd
       _I2C_Control_Write
       _I2C_Start_Bit
       _I2C_Stop_Bit
       _Send_I2C_Data
     _I2C_Control_Read
     _I2C_NAK
     _I2C_Stop_Bit
     _I2C_restart
       _I2C_check_idle
     _RX_I2C_Data
     _doCRC
   _I2C_Init
   _UART_String
     _uart_xmit
   _init_io
   _itoa
     _CalcHumid (ARG)
       ___ftdiv
         ___ftpack
         ___lwtoft (ARG)
           ___ftpack
       ___ftmul
         ___ftpack
       ___fttol
       ___lwtoft
         ___ftpack
     _CalcTemp (ARG)
     _utoa (ARG)
       ___lwdiv
       ___lwmod
   _serial_init
   _uart_xmit

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM              F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      42       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50     30      34       6       65.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
DATA                 0      0      42      11        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.35 build -356382666 
Symbol Table                                                                                   Sun Nov 22 22:46:28 2015

                         _i 0052                 __CFG_CP$OFF 0000                          _BF 10A0  
                        l74 0198                 __CFG_LVP$ON 0000                         l150 01AB  
                       l162 01BA                         l156 01B4                         l173 01FC  
                       l165 01BC                         l185 01EC                         l194 01A3  
                       l179 020C                         l189 020E                         l385 0435  
                       l386 043D                         l378 0422                         l484 03DA  
                       l469 04C0                         u905 041D                         u925 042A  
                       u965 0444                         u885 0404                         u995 0322  
           __end_of_I2C_ACK 01AF             __end_of_I2C_NAK 01DF             __end_of_I2C_Cmd 029D  
              __CFG_BORV$LO 0000                         wreg 0009                __CFG_IESO$ON 0000  
              ___ftdiv@cntr 002A                 _RX_I2C_Data 01B8                ___ftdiv@sign 002F  
                      l1211 040E                        l1203 03F8                        l1301 0203  
                      l1207 03FF                        l1217 0427                        l1209 0409  
                      l1241 031F                        l1219 042F                        l1403 05EB  
                      l1243 032B                        l1253 0346                        l1343 04F1  
                      l1415 0607                        l1407 05F3                        l1175 01C8  
                      l1335 01D6                        l1327 02E6                        l1271 0309  
                      l1193 01E3                        l1249 033D                        l1265 02F1  
                      l1371 0561                        l1363 0548                        l1419 060F  
                      l1435 046C                        l1187 01F3                        l1267 02FD  
                      l1275 0312                        l1349 0507                        l1461 04B7  
                      l1453 049C                        l1391 05B0                        l1463 04C3  
                      l1455 04AA                        l1385 059A                        l1289 0286  
                      l1473 0394                        l1467 04D1                        l1619 025C  
                      l1483 03B2                        l1635 02B5                        l1587 06A1  
                      l1689 0717                        STR_1 0802                        STR_2 0810  
                      STR_3 081B                        STR_4 0824                        u1015 032C  
                      u1025 0336                        u1035 033E                        u1065 02F4  
                      u1245 0519                        u1405 0616                        u1325 05BC  
                      u1085 0303                        u1255 0529                        u1335 05CC  
                      u1095 030A                        u1600 072F                        u1265 0549  
                      u1275 0558                        u1355 05F4                        u1435 0473  
                      u1285 0562                        u1365 05FA                        u1465 049D  
                      u1617 071C                        u1570 06F5                        u1395 0610  
                      u1627 07F1                        u1637 0650                        u1495 04B8  
                      _RCEN 10B3                        _RSEN 10B1           ?_I2C_Control_Read 0070  
              __CFG_WRT$OFF 0000               __CFG_FCMEN$ON 0000                        _main 06FA  
              ___ftpack@arg 0070                        _itoa 029D                ___ftpack@exp 0073  
          __end_of_I2C_Init 0198                        fsr0h 0005                        fsr1h 0007  
                      fsr0l 0004                        indf0 0000                        indf1 0001  
                      fsr1l 0006                        btemp 007E                        _utoa 038E  
        ??_I2C_Control_Read 0070               __CFG_BOREN$ON 0000                        ltemp 007E  
                      start 0002                        ttemp 007E                        wtemp 007E  
             __CFG_MCLRE$ON 0000                ___ftmul@cntr 0028                ___ftmul@sign 0029  
      __size_of_I2C_restart 0008               __CFG_LPBOR$ON 0000                  _GetReading 0636  
              ___fttol@exp1 007D                ___fttol@lval 0079       __size_of_I2C_Stop_Bit 000D  
                     ?_main 0070                       ?_itoa 0035               __CFG_WDTE$OFF 0000  
           __end_of___ftdiv 0583                       ?_utoa 0078             __end_of___ftmul 0636  
           __end_of___fttol 04DA             __end_of___lwdiv 034B             __end_of___lwmod 0317  
         _I2C_Control_Write 01EE                       _TXREG 019A                main@received 0048  
        ?_I2C_Control_Write 0070                       _doCRC 02C1             __end_of_init_io 025A  
             ___ftpack@sign 0074                       ltemp0 007E                       ltemp1 0082  
                     ltemp2 0086                       ltemp3 0080            __end_of_CalcTemp 0192  
       ??_I2C_Control_Write 0070                       ttemp0 007E                       ttemp1 0081  
                     ttemp2 0084                       ttemp3 0087                       ttemp4 007F  
                     utoa@c 0022                       utoa@v 0020                       status 0003  
                     wtemp0 007E                       wtemp1 0080                       wtemp2 0082  
                     wtemp3 0084                       wtemp4 0086                       wtemp5 0088  
                     wtemp6 007F          __size_of_CalcHumid 0043                _I2C_Stop_Bit 01C4  
           __initialization 07F9                __end_of_main 07F9                __end_of_itoa 02C1  
              __end_of_utoa 03F0                   ??_I2C_ACK 0070                   ??_I2C_NAK 0070  
          CalcHumid@rcv_val 0030                   ??_I2C_Cmd 0073   __end_of_I2C_Control_Write 01FE  
                    ??_main 003C               ___fttol@sign1 0078                      ??_itoa 0039  
    __size_of_I2C_Start_Bit 000F                      ??_utoa 007C                   I2C_Cmd@b1 0075  
                 I2C_Cmd@b2 0072                      ?_doCRC 0070                      _ANSELA 018C  
                    _ANSELB 018D                      _ANSELC 018E            __end_of___ftpack 0454  
          __end_of___lwtoft 0242                      _SPBRGH 019C                      _SPBRGL 019B  
                    _SSPADD 0212                      _SSPBUF 0211              __CFG_PWRTE$OFF 0000  
              ?_UART_String 0072                ?_serial_init 0070              RX_I2C_Data@byt 0071  
    __size_of_Send_I2C_Data 0009              __CFG_STVREN$ON 0000                   ??___ftdiv 0026  
               ?_GetReading 0076                   ??___ftmul 0020                   ??___fttol 0074  
                 ??___lwdiv 0074             CalcTemp@rcv_val 0070                   ??___lwmod 0074  
     ___ftmul@f3_as_product 0025                      itoa@cp 003A                   ??_init_io 0070  
                 ?_I2C_Init 0070           __end_of_CalcHumid 038E       Send_I2C_Data@databyte 0070  
   __end_of__initialization 07FD               _I2C_Start_Bit 01DF                CalcHumid@ans 0032  
                ___ftdiv@f1 0023                  ___ftdiv@f2 0020                  ___ftdiv@f3 002B  
                ___ftmul@f1 0078                  ___ftmul@f2 007B           __end_of_CommandB1 0801  
         __end_of_CommandB2 0802                  ___fttol@f1 0070              __pcstackCOMMON 0070  
             __end_of_doCRC 02EB  __size_of_I2C_Control_Write 0010                  ___lwtoft@c 0078  
                 ?_CalcTemp 0070                  ??_I2C_Init 0070              _OPTION_REGbits 0095  
                   ??_doCRC 0071               _Send_I2C_Data 01AF                ?_RX_I2C_Data 0070  
                __pbssBANK0 0050         __size_of_GetReading 00C4              ?_I2C_Start_Bit 0070  
                __pmaintext 06FA                     _I2C_ACK 01A6   __size_of_I2C_Control_Read 0010  
                   _I2C_NAK 01D1                     _I2C_Cmd 027A                   ?___ftpack 0070  
                   _ACK_bit 0050                  ??_CalcTemp 0072                   ?___lwtoft 0078  
        __size_of_uart_xmit 0006              ?_Send_I2C_Data 0070                     _SSP1ADD 0212  
                   _SSP1BUF 0211                     _SSPCON2 0216                     _SSPSTAT 0214  
   __size_of_I2C_check_idle 0010               ??_I2C_restart 0073                     doCRC@b7 0073  
                   doCRC@ch 0072                     doCRC@ix 0074                     ___ftdiv 04DA  
                   ___ftmul 0583                     ___fttol 0454        __size_of_UART_String 0020  
                   ___lwdiv 0317                     ___lwmod 02EB        __size_of_serial_init 0011  
                ??___ftpack 0075                     __ptext1 021E                     __ptext2 029D  
                   __ptext3 038E                     __ptext4 02EB                     __ptext5 0317  
                   __ptext6 0242                     __ptext7 025A                     __ptext8 0198  
                   __ptext9 0192                  ??___lwtoft 007B                     _init_io 0242  
         GetReading@crc_gen 0027                     main@buf 003F             ??_I2C_Start_Bit 0070  
      end_of_initialization 07FD                     itoa@buf 003B                     itoa@val 0035  
         __end_of_uart_xmit 019E                   _RCSTAbits 019D                ??_GetReading 0020  
       __end_of_I2C_restart 01A6                __pstringtext 0800                     utoa@buf 0023  
                   utoa@val 0078             ??_Send_I2C_Data 0072            __CFG_FOSC$INTOSC 0000  
                 _TRISAbits 008C                   _TRISBbits 008D                   _TRISCbits 008E  
         __size_of_I2C_Init 0006                   _CalcHumid 034B        uart_xmit@mydata_byte 0070  
        __end_of_GetReading 06FA        __size_of_RX_I2C_Data 000C                 ___ftdiv@exp 002E  
                 _TXSTAbits 019E                 ___ftmul@exp 0024                   _GetStatus 0000  
          _I2C_Control_Read 01FE                   _CommandB1 0800                   _CommandB2 0801  
       start_initialization 07F9           __size_of_CalcTemp 0001                  ?_CalcHumid 0030  
            _I2C_check_idle 020E         I2C_check_idle@byte1 0071         I2C_check_idle@byte2 0072  
               _I2C_restart 019E                    ?_I2C_ACK 0070                    ?_I2C_NAK 0070  
                  ?_I2C_Cmd 0072           __size_of___ftpack 0064                   ___latbits 0001  
         __size_of___lwtoft 0013               __pcstackBANK0 0020      __end_of_I2C_check_idle 021E  
             ?_I2C_Stop_Bit 0070            ___lwdiv@dividend 0072                    ?___ftdiv 0020  
                  ?___ftmul 0078                    ?___fttol 0070                    ?___lwdiv 0070  
                  ?___lwmod 0070                    ?_init_io 0070                    _I2C_Init 0192  
            __size_of_doCRC 002A            ___lwdiv@quotient 0075                 ??_CalcHumid 007E  
           ?_I2C_check_idle 0070          UART_String@letters 0072                    _LATCbits 010E  
            ??_I2C_Stop_Bit 0070                    _PIE1bits 0091               ??_UART_String 0074  
              GetReading@bh 0025                GetReading@bl 0026                    _PIR1bits 0011  
             ??_serial_init 0070                   _uart_xmit 0198            __size_of_I2C_ACK 0009  
          __size_of_I2C_NAK 000E            __size_of_I2C_Cmd 0023                    _CalcTemp 0191  
  __end_of_I2C_Control_Read 020E       __end_of_I2C_Start_Bit 01EE                  ?_uart_xmit 0070  
                  doCRC@crc 0070            __size_of___ftdiv 00A9            __size_of___ftmul 00B3  
          __size_of___fttol 0086            __size_of___lwdiv 0034            __size_of___lwmod 002C  
                  ___ftpack 03F0         __end_of_UART_String 027A         __end_of_serial_init 022F  
                  ___lwtoft 022F            __size_of_init_io 0018             ___lwdiv@divisor 0070  
     __end_of_Send_I2C_Data 01B8             ___lwdiv@counter 0077                    __ptext10 0636  
                  __ptext11 02C1                    __ptext20 01DF                    __ptext12 01B8  
                  __ptext21 01EE                    __ptext13 019E                    __ptext22 01A6  
                  __ptext14 020E                    __ptext23 0191                    __ptext15 01D1  
                  __ptext24 034B                    __ptext16 01FE                    __ptext25 022F  
                  __ptext17 027A                    __ptext26 0454                    __ptext18 01AF  
                  __ptext27 0583                    __ptext19 01C4                    __ptext28 04DA  
                  __ptext29 03F0               ??_RX_I2C_Data 0070                _SSP1CON2bits 0216  
             __size_of_main 00FF               __size_of_itoa 0024               __size_of_utoa 0062  
              ?_I2C_restart 0070             GetReading@local 0028                UART_String@i 0076  
                _INTCONbits 000B        __end_of_I2C_Stop_Bit 01D1                    itoa@base 0037  
          ___lwmod@dividend 0072           __CFG_CLKOUTEN$OFF 0000         __end_of_RX_I2C_Data 01C4  
                _OSCCONbits 0099                 _UART_String 025A                 _serial_init 021E  
               ??_uart_xmit 0072                    utoa@base 007A             ___lwmod@divisor 0070  
          ??_I2C_check_idle 0070             ___lwmod@counter 0075                 _SSPCON2bits 0216  
                _SSPCONbits 0215  
