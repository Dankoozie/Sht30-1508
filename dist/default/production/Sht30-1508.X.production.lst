

Microchip Technology PIC LITE Macro Assembler V1.35 build -356382666 
                                                                                               Sat Nov 21 01:32:21 2015

Microchip Technology Omniscient Code Generator v1.35 (Free mode) build 201507080246
     1                           	processor	16F1508
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	stringtext,global,class=STRCODE,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    10                           	psect	text1,local,class=CODE,merge=1,delta=2
    11                           	psect	text2,local,class=CODE,merge=1,delta=2
    12                           	psect	text3,local,class=CODE,merge=1,delta=2
    13                           	psect	text4,local,class=CODE,merge=1,delta=2
    14                           	psect	text5,local,class=CODE,merge=1,delta=2
    15                           	psect	text6,local,class=CODE,merge=1,delta=2
    16                           	psect	text7,local,class=CODE,merge=1,delta=2
    17                           	psect	text8,local,class=CODE,merge=1,delta=2
    18                           	psect	text9,local,class=CODE,merge=1,delta=2
    19                           	psect	text10,local,class=CODE,merge=1,delta=2
    20                           	psect	text11,local,class=CODE,merge=1,delta=2
    21                           	psect	text12,local,class=CODE,merge=1,delta=2
    22                           	psect	text13,local,class=CODE,merge=1,delta=2
    23                           	psect	text14,local,class=CODE,merge=1,delta=2
    24                           	psect	text15,local,class=CODE,merge=1,delta=2
    25                           	psect	text16,local,class=CODE,merge=1,delta=2
    26                           	psect	text17,local,class=CODE,merge=1,delta=2
    27                           	psect	text18,local,class=CODE,merge=1,delta=2
    28                           	psect	text19,local,class=CODE,merge=1,delta=2
    29                           	psect	text20,local,class=CODE,merge=1,delta=2
    30                           	psect	text21,local,class=CODE,merge=1,delta=2
    31                           	psect	text22,local,class=CODE,merge=1,delta=2
    32                           	psect	text23,local,class=CODE,merge=1,delta=2
    33                           	psect	text24,local,class=CODE,merge=1,delta=2
    34                           	psect	text25,local,class=CODE,merge=1,delta=2
    35                           	psect	text26,local,class=CODE,merge=1,delta=2
    36                           	dabs	1,0x7E,2
    37  0000                     	;# 
    38  0001                     	;# 
    39  0002                     	;# 
    40  0003                     	;# 
    41  0004                     	;# 
    42  0005                     	;# 
    43  0006                     	;# 
    44  0007                     	;# 
    45  0008                     	;# 
    46  0009                     	;# 
    47  000A                     	;# 
    48  000B                     	;# 
    49  000C                     	;# 
    50  000D                     	;# 
    51  000E                     	;# 
    52  0011                     	;# 
    53  0012                     	;# 
    54  0013                     	;# 
    55  0015                     	;# 
    56  0016                     	;# 
    57  0016                     	;# 
    58  0017                     	;# 
    59  0018                     	;# 
    60  0019                     	;# 
    61  001A                     	;# 
    62  001B                     	;# 
    63  001C                     	;# 
    64  008C                     	;# 
    65  008D                     	;# 
    66  008E                     	;# 
    67  0091                     	;# 
    68  0092                     	;# 
    69  0093                     	;# 
    70  0095                     	;# 
    71  0096                     	;# 
    72  0097                     	;# 
    73  0099                     	;# 
    74  009A                     	;# 
    75  009B                     	;# 
    76  009B                     	;# 
    77  009C                     	;# 
    78  009D                     	;# 
    79  009E                     	;# 
    80  009F                     	;# 
    81  010C                     	;# 
    82  010D                     	;# 
    83  010E                     	;# 
    84  0111                     	;# 
    85  0112                     	;# 
    86  0113                     	;# 
    87  0114                     	;# 
    88  0115                     	;# 
    89  0116                     	;# 
    90  0117                     	;# 
    91  0118                     	;# 
    92  0119                     	;# 
    93  011D                     	;# 
    94  018C                     	;# 
    95  018D                     	;# 
    96  018E                     	;# 
    97  0191                     	;# 
    98  0191                     	;# 
    99  0192                     	;# 
   100  0193                     	;# 
   101  0193                     	;# 
   102  0194                     	;# 
   103  0195                     	;# 
   104  0196                     	;# 
   105  0197                     	;# 
   106  0199                     	;# 
   107  019A                     	;# 
   108  019B                     	;# 
   109  019B                     	;# 
   110  019C                     	;# 
   111  019D                     	;# 
   112  019E                     	;# 
   113  019F                     	;# 
   114  020C                     	;# 
   115  020D                     	;# 
   116  0211                     	;# 
   117  0211                     	;# 
   118  0212                     	;# 
   119  0212                     	;# 
   120  0213                     	;# 
   121  0213                     	;# 
   122  0214                     	;# 
   123  0214                     	;# 
   124  0215                     	;# 
   125  0215                     	;# 
   126  0215                     	;# 
   127  0216                     	;# 
   128  0216                     	;# 
   129  0217                     	;# 
   130  0217                     	;# 
   131  0391                     	;# 
   132  0392                     	;# 
   133  0393                     	;# 
   134  0394                     	;# 
   135  0395                     	;# 
   136  0396                     	;# 
   137  0498                     	;# 
   138  0498                     	;# 
   139  0499                     	;# 
   140  049A                     	;# 
   141  049B                     	;# 
   142  049B                     	;# 
   143  049C                     	;# 
   144  049D                     	;# 
   145  049E                     	;# 
   146  049F                     	;# 
   147  0611                     	;# 
   148  0612                     	;# 
   149  0613                     	;# 
   150  0613                     	;# 
   151  0614                     	;# 
   152  0615                     	;# 
   153  0616                     	;# 
   154  0616                     	;# 
   155  0617                     	;# 
   156  0618                     	;# 
   157  0619                     	;# 
   158  0619                     	;# 
   159  061A                     	;# 
   160  061B                     	;# 
   161  061C                     	;# 
   162  061C                     	;# 
   163  0691                     	;# 
   164  0692                     	;# 
   165  0693                     	;# 
   166  0694                     	;# 
   167  0695                     	;# 
   168  0F0F                     	;# 
   169  0F10                     	;# 
   170  0F11                     	;# 
   171  0F12                     	;# 
   172  0F13                     	;# 
   173  0F14                     	;# 
   174  0F15                     	;# 
   175  0F16                     	;# 
   176  0F17                     	;# 
   177  0F18                     	;# 
   178  0F19                     	;# 
   179  0F1A                     	;# 
   180  0F1B                     	;# 
   181  0F1C                     	;# 
   182  0F1D                     	;# 
   183  0F1E                     	;# 
   184  0F1F                     	;# 
   185  0F20                     	;# 
   186  0F21                     	;# 
   187  0F22                     	;# 
   188  0F23                     	;# 
   189  0F24                     	;# 
   190  0F25                     	;# 
   191  0F26                     	;# 
   192  0F27                     	;# 
   193  0F28                     	;# 
   194  0F29                     	;# 
   195  0F2A                     	;# 
   196  0F2B                     	;# 
   197  0F2C                     	;# 
   198  0F2D                     	;# 
   199  0F2E                     	;# 
   200  0F2F                     	;# 
   201  0F8C                     	;# 
   202  0F8D                     	;# 
   203  0F91                     	;# 
   204  0F95                     	;# 
   205  0F96                     	;# 
   206  0F97                     	;# 
   207  0F9C                     	;# 
   208  0F9D                     	;# 
   209  0F9E                     	;# 
   210  0FE3                     	;# 
   211  0FE4                     	;# 
   212  0FE5                     	;# 
   213  0FE6                     	;# 
   214  0FE7                     	;# 
   215  0FE8                     	;# 
   216  0FE9                     	;# 
   217  0FEA                     	;# 
   218  0FEB                     	;# 
   219  0FED                     	;# 
   220  0FEE                     	;# 
   221  0FEF                     	;# 
   222  0000                     	;# 
   223  0001                     	;# 
   224  0002                     	;# 
   225  0003                     	;# 
   226  0004                     	;# 
   227  0005                     	;# 
   228  0006                     	;# 
   229  0007                     	;# 
   230  0008                     	;# 
   231  0009                     	;# 
   232  000A                     	;# 
   233  000B                     	;# 
   234  000C                     	;# 
   235  000D                     	;# 
   236  000E                     	;# 
   237  0011                     	;# 
   238  0012                     	;# 
   239  0013                     	;# 
   240  0015                     	;# 
   241  0016                     	;# 
   242  0016                     	;# 
   243  0017                     	;# 
   244  0018                     	;# 
   245  0019                     	;# 
   246  001A                     	;# 
   247  001B                     	;# 
   248  001C                     	;# 
   249  008C                     	;# 
   250  008D                     	;# 
   251  008E                     	;# 
   252  0091                     	;# 
   253  0092                     	;# 
   254  0093                     	;# 
   255  0095                     	;# 
   256  0096                     	;# 
   257  0097                     	;# 
   258  0099                     	;# 
   259  009A                     	;# 
   260  009B                     	;# 
   261  009B                     	;# 
   262  009C                     	;# 
   263  009D                     	;# 
   264  009E                     	;# 
   265  009F                     	;# 
   266  010C                     	;# 
   267  010D                     	;# 
   268  010E                     	;# 
   269  0111                     	;# 
   270  0112                     	;# 
   271  0113                     	;# 
   272  0114                     	;# 
   273  0115                     	;# 
   274  0116                     	;# 
   275  0117                     	;# 
   276  0118                     	;# 
   277  0119                     	;# 
   278  011D                     	;# 
   279  018C                     	;# 
   280  018D                     	;# 
   281  018E                     	;# 
   282  0191                     	;# 
   283  0191                     	;# 
   284  0192                     	;# 
   285  0193                     	;# 
   286  0193                     	;# 
   287  0194                     	;# 
   288  0195                     	;# 
   289  0196                     	;# 
   290  0197                     	;# 
   291  0199                     	;# 
   292  019A                     	;# 
   293  019B                     	;# 
   294  019B                     	;# 
   295  019C                     	;# 
   296  019D                     	;# 
   297  019E                     	;# 
   298  019F                     	;# 
   299  020C                     	;# 
   300  020D                     	;# 
   301  0211                     	;# 
   302  0211                     	;# 
   303  0212                     	;# 
   304  0212                     	;# 
   305  0213                     	;# 
   306  0213                     	;# 
   307  0214                     	;# 
   308  0214                     	;# 
   309  0215                     	;# 
   310  0215                     	;# 
   311  0215                     	;# 
   312  0216                     	;# 
   313  0216                     	;# 
   314  0217                     	;# 
   315  0217                     	;# 
   316  0391                     	;# 
   317  0392                     	;# 
   318  0393                     	;# 
   319  0394                     	;# 
   320  0395                     	;# 
   321  0396                     	;# 
   322  0498                     	;# 
   323  0498                     	;# 
   324  0499                     	;# 
   325  049A                     	;# 
   326  049B                     	;# 
   327  049B                     	;# 
   328  049C                     	;# 
   329  049D                     	;# 
   330  049E                     	;# 
   331  049F                     	;# 
   332  0611                     	;# 
   333  0612                     	;# 
   334  0613                     	;# 
   335  0613                     	;# 
   336  0614                     	;# 
   337  0615                     	;# 
   338  0616                     	;# 
   339  0616                     	;# 
   340  0617                     	;# 
   341  0618                     	;# 
   342  0619                     	;# 
   343  0619                     	;# 
   344  061A                     	;# 
   345  061B                     	;# 
   346  061C                     	;# 
   347  061C                     	;# 
   348  0691                     	;# 
   349  0692                     	;# 
   350  0693                     	;# 
   351  0694                     	;# 
   352  0695                     	;# 
   353  0F0F                     	;# 
   354  0F10                     	;# 
   355  0F11                     	;# 
   356  0F12                     	;# 
   357  0F13                     	;# 
   358  0F14                     	;# 
   359  0F15                     	;# 
   360  0F16                     	;# 
   361  0F17                     	;# 
   362  0F18                     	;# 
   363  0F19                     	;# 
   364  0F1A                     	;# 
   365  0F1B                     	;# 
   366  0F1C                     	;# 
   367  0F1D                     	;# 
   368  0F1E                     	;# 
   369  0F1F                     	;# 
   370  0F20                     	;# 
   371  0F21                     	;# 
   372  0F22                     	;# 
   373  0F23                     	;# 
   374  0F24                     	;# 
   375  0F25                     	;# 
   376  0F26                     	;# 
   377  0F27                     	;# 
   378  0F28                     	;# 
   379  0F29                     	;# 
   380  0F2A                     	;# 
   381  0F2B                     	;# 
   382  0F2C                     	;# 
   383  0F2D                     	;# 
   384  0F2E                     	;# 
   385  0F2F                     	;# 
   386  0F8C                     	;# 
   387  0F8D                     	;# 
   388  0F91                     	;# 
   389  0F95                     	;# 
   390  0F96                     	;# 
   391  0F97                     	;# 
   392  0F9C                     	;# 
   393  0F9D                     	;# 
   394  0F9E                     	;# 
   395  0FE3                     	;# 
   396  0FE4                     	;# 
   397  0FE5                     	;# 
   398  0FE6                     	;# 
   399  0FE7                     	;# 
   400  0FE8                     	;# 
   401  0FE9                     	;# 
   402  0FEA                     	;# 
   403  0FEB                     	;# 
   404  0FED                     	;# 
   405  0FEE                     	;# 
   406  0FEF                     	;# 
   407  000B                     _INTCONbits	set	11
   408  0011                     _PIR1bits	set	17
   409  0095                     _OPTION_REGbits	set	149
   410  0099                     _OSCCONbits	set	153
   411  0091                     _PIE1bits	set	145
   412  008C                     _TRISA	set	140
   413  008C                     _TRISAbits	set	140
   414  008D                     _TRISB	set	141
   415  008D                     _TRISBbits	set	141
   416  008E                     _TRISCbits	set	142
   417  010E                     _LATCbits	set	270
   418  018C                     _ANSELA	set	396
   419  018D                     _ANSELB	set	397
   420  018E                     _ANSELC	set	398
   421  019D                     _RCSTAbits	set	413
   422  019C                     _SPBRGH	set	412
   423  019B                     _SPBRGL	set	411
   424  019A                     _TXREG	set	410
   425  019E                     _TXSTAbits	set	414
   426  0212                     _SSP1ADD	set	530
   427  0211                     _SSP1BUF	set	529
   428  0216                     _SSP1CON2bits	set	534
   429  0214                     _SSP1STAT	set	532
   430  0214                     _SSP1STATbits	set	532
   431  0212                     _SSPADD	set	530
   432  0211                     _SSPBUF	set	529
   433  0215                     _SSPCON	set	533
   434  0216                     _SSPCON2	set	534
   435  0216                     _SSPCON2bits	set	534
   436  0215                     _SSPCONbits	set	533
   437  0214                     _SSPSTAT	set	532
   438  0214                     _SSPSTATbits	set	532
   439  10B5                     _ACKDT	set	4277
   440  10B4                     _ACKEN	set	4276
   441  10A0                     _BF	set	4256
   442  10B2                     _PEN	set	4274
   443  10B3                     _RCEN	set	4275
   444  10B1                     _RSEN	set	4273
   445                           
   446                           	psect	stringtext
   447  0800                     __pstringtext:	
   448  0800                     STR_1:	
   449  0800  3454               	retlw	84	;'T'
   450  0801  3465               	retlw	101	;'e'
   451  0802  346D               	retlw	109	;'m'
   452  0803  3470               	retlw	112	;'p'
   453  0804  3465               	retlw	101	;'e'
   454  0805  3472               	retlw	114	;'r'
   455  0806  3461               	retlw	97	;'a'
   456  0807  3474               	retlw	116	;'t'
   457  0808  3475               	retlw	117	;'u'
   458  0809  3472               	retlw	114	;'r'
   459  080A  3465               	retlw	101	;'e'
   460  080B  343A               	retlw	58	;':'
   461  080C  3420               	retlw	32	;' '
   462  080D  3400               	retlw	0
   463  080E                     STR_2:	
   464  080E  3448               	retlw	72	;'H'
   465  080F  3475               	retlw	117	;'u'
   466  0810  346D               	retlw	109	;'m'
   467  0811  3469               	retlw	105	;'i'
   468  0812  3464               	retlw	100	;'d'
   469  0813  3469               	retlw	105	;'i'
   470  0814  3474               	retlw	116	;'t'
   471  0815  3479               	retlw	121	;'y'
   472  0816  343A               	retlw	58	;':'
   473  0817  3420               	retlw	32	;' '
   474  0818  3400               	retlw	0
   475                           
   476                           ; #config settings
   477  0000                     
   478                           	psect	cinit
   479  07F3                     start_initialization:	
   480  07F3                     __initialization:	
   481                           
   482                           ; Clear objects allocated to BANK0
   483  07F3  01DB               	clrf	__pbssBANK0& (0+127)
   484  07F4  01DC               	clrf	(__pbssBANK0+1)& (0+127)
   485  07F5  01DD               	clrf	(__pbssBANK0+2)& (0+127)
   486  07F6  01DE               	clrf	(__pbssBANK0+3)& (0+127)
   487  07F7  01DF               	clrf	(__pbssBANK0+4)& (0+127)
   488  07F8  01E0               	clrf	(__pbssBANK0+5)& (0+127)
   489  07F9  01E1               	clrf	(__pbssBANK0+6)& (0+127)
   490  07FA  01E2               	clrf	(__pbssBANK0+7)& (0+127)
   491  07FB  01E3               	clrf	(__pbssBANK0+8)& (0+127)
   492  07FC  01E4               	clrf	(__pbssBANK0+9)& (0+127)
   493  07FD                     end_of_initialization:	
   494                           ;End of C runtime variable initialization code
   495                           
   496  07FD                     __end_of__initialization:	
   497  07FD  0020               	movlb	0
   498  07FE  3186  2EF1         	ljmp	_main	;jump to C main() function
   499                           
   500                           	psect	bssBANK0
   501  005B                     __pbssBANK0:	
   502  005B                     _ACK_bit:	
   503  005B                     	ds	2
   504  005D                     _i:	
   505  005D                     	ds	2
   506  005F                     _kirk:	
   507  005F                     	ds	1
   508  0060                     _kirk2:	
   509  0060                     	ds	1
   510  0061                     _tb1:	
   511  0061                     	ds	1
   512  0062                     _tb2:	
   513  0062                     	ds	1
   514  0063                     _tempbyte1:	
   515  0063                     	ds	1
   516  0064                     _tempbyte2:	
   517  0064                     	ds	1
   518                           
   519                           	psect	cstackCOMMON
   520  0070                     __pcstackCOMMON:	
   521  0070                     ?_init_io:	
   522  0070                     ??_init_io:	
   523                           ; 0 bytes @ 0x0
   524                           
   525  0070                     ?_uart_xmit:	
   526                           ; 0 bytes @ 0x0
   527                           
   528  0070                     ?_serial_init:	
   529                           ; 0 bytes @ 0x0
   530                           
   531  0070                     ??_serial_init:	
   532                           ; 0 bytes @ 0x0
   533                           
   534  0070                     ?_doCRC:	
   535                           ; 0 bytes @ 0x0
   536                           
   537  0070                     ?_I2C_ACK:	
   538                           ; 0 bytes @ 0x0
   539                           
   540  0070                     ??_I2C_ACK:	
   541                           ; 0 bytes @ 0x0
   542                           
   543  0070                     ?_Send_I2C_Data:	
   544                           ; 0 bytes @ 0x0
   545                           
   546  0070                     ??_RX_I2C_Data:	
   547                           ; 0 bytes @ 0x0
   548                           
   549  0070                     ?_I2C_Control_Write:	
   550                           ; 0 bytes @ 0x0
   551                           
   552  0070                     ??_I2C_Control_Write:	
   553                           ; 0 bytes @ 0x0
   554                           
   555  0070                     ?_I2C_Control_Read:	
   556                           ; 0 bytes @ 0x0
   557                           
   558  0070                     ??_I2C_Control_Read:	
   559                           ; 0 bytes @ 0x0
   560                           
   561  0070                     ?_I2C_Start_Bit:	
   562                           ; 0 bytes @ 0x0
   563                           
   564  0070                     ??_I2C_Start_Bit:	
   565                           ; 0 bytes @ 0x0
   566                           
   567  0070                     ?_I2C_check_idle:	
   568                           ; 0 bytes @ 0x0
   569                           
   570  0070                     ??_I2C_check_idle:	
   571                           ; 0 bytes @ 0x0
   572                           
   573  0070                     ?_I2C_restart:	
   574                           ; 0 bytes @ 0x0
   575                           
   576  0070                     ?_I2C_Stop_Bit:	
   577                           ; 0 bytes @ 0x0
   578                           
   579  0070                     ??_I2C_Stop_Bit:	
   580                           ; 0 bytes @ 0x0
   581                           
   582  0070                     ?_I2C_NAK:	
   583                           ; 0 bytes @ 0x0
   584                           
   585  0070                     ??_I2C_NAK:	
   586                           ; 0 bytes @ 0x0
   587                           
   588  0070                     ?_RX_I2C_Data:	
   589                           ; 0 bytes @ 0x0
   590                           
   591  0070                     ?_main:	
   592                           ; 1 bytes @ 0x0
   593                           
   594  0070                     ?___lwdiv:	
   595                           ; 2 bytes @ 0x0
   596                           
   597  0070                     ?___lwmod:	
   598                           ; 2 bytes @ 0x0
   599                           
   600  0070                     ?___ftpack:	
   601                           ; 2 bytes @ 0x0
   602                           
   603  0070                     ?___fttol:	
   604                           ; 3 bytes @ 0x0
   605                           
   606  0070                     doCRC@crc:	
   607                           ; 4 bytes @ 0x0
   608                           
   609  0070                     uart_xmit@mydata_byte:	
   610                           ; 1 bytes @ 0x0
   611                           
   612  0070                     Send_I2C_Data@databyte:	
   613                           ; 2 bytes @ 0x0
   614                           
   615  0070                     ___lwdiv@divisor:	
   616                           ; 2 bytes @ 0x0
   617                           
   618  0070                     ___lwmod@divisor:	
   619                           ; 2 bytes @ 0x0
   620                           
   621  0070                     ___ftpack@arg:	
   622                           ; 2 bytes @ 0x0
   623                           
   624  0070                     ___fttol@f1:	
   625                           ; 3 bytes @ 0x0
   626                           
   627                           
   628                           ; 3 bytes @ 0x0
   629  0070                     	ds	1
   630  0071                     ??_doCRC:	
   631  0071                     RX_I2C_Data@byte:	
   632                           ; 0 bytes @ 0x1
   633                           
   634  0071                     I2C_check_idle@byte1:	
   635                           ; 1 bytes @ 0x1
   636                           
   637                           
   638                           ; 1 bytes @ 0x1
   639  0071                     	ds	1
   640  0072                     ??_uart_xmit:	
   641  0072                     ??_Send_I2C_Data:	
   642                           ; 0 bytes @ 0x2
   643                           
   644  0072                     ?_UART_String:	
   645                           ; 0 bytes @ 0x2
   646                           
   647  0072                     doCRC@ch:	
   648                           ; 0 bytes @ 0x2
   649                           
   650  0072                     I2C_check_idle@byte2:	
   651                           ; 1 bytes @ 0x2
   652                           
   653  0072                     UART_String@letters:	
   654                           ; 1 bytes @ 0x2
   655                           
   656  0072                     ___lwdiv@dividend:	
   657                           ; 2 bytes @ 0x2
   658                           
   659  0072                     ___lwmod@dividend:	
   660                           ; 2 bytes @ 0x2
   661                           
   662                           
   663                           ; 2 bytes @ 0x2
   664  0072                     	ds	1
   665  0073                     ??_I2C_restart:	
   666  0073                     doCRC@b7:	
   667                           ; 0 bytes @ 0x3
   668                           
   669  0073                     ___ftpack@exp:	
   670                           ; 1 bytes @ 0x3
   671                           
   672                           
   673                           ; 1 bytes @ 0x3
   674  0073                     	ds	1
   675  0074                     ??_UART_String:	
   676  0074                     ??___fttol:	
   677                           ; 0 bytes @ 0x4
   678                           
   679  0074                     ??___lwdiv:	
   680                           ; 0 bytes @ 0x4
   681                           
   682  0074                     ??___lwmod:	
   683                           ; 0 bytes @ 0x4
   684                           
   685  0074                     ___ftpack@sign:	
   686                           ; 0 bytes @ 0x4
   687                           
   688  0074                     doCRC@ix:	
   689                           ; 1 bytes @ 0x4
   690                           
   691                           
   692                           ; 2 bytes @ 0x4
   693  0074                     	ds	1
   694  0075                     ??___ftpack:	
   695  0075                     ___lwmod@counter:	
   696                           ; 0 bytes @ 0x5
   697                           
   698  0075                     ___lwdiv@quotient:	
   699                           ; 1 bytes @ 0x5
   700                           
   701                           
   702                           ; 2 bytes @ 0x5
   703  0075                     	ds	1
   704  0076                     ?_GetReading:	
   705  0076                     UART_String@i:	
   706                           ; 8 bytes @ 0x6
   707                           
   708                           
   709                           ; 2 bytes @ 0x6
   710  0076                     	ds	1
   711  0077                     ___lwdiv@counter:	
   712                           
   713                           ; 1 bytes @ 0x7
   714  0077                     	ds	1
   715  0078                     ?_utoa:	
   716  0078                     ?___awtoft:	
   717                           ; 1 bytes @ 0x8
   718                           
   719  0078                     ?___ftmul:	
   720                           ; 3 bytes @ 0x8
   721                           
   722  0078                     ___fttol@sign1:	
   723                           ; 3 bytes @ 0x8
   724                           
   725  0078                     ___awtoft@c:	
   726                           ; 1 bytes @ 0x8
   727                           
   728  0078                     utoa@val:	
   729                           ; 2 bytes @ 0x8
   730                           
   731  0078                     ___ftmul@f1:	
   732                           ; 2 bytes @ 0x8
   733                           
   734                           
   735                           ; 3 bytes @ 0x8
   736  0078                     	ds	1
   737  0079                     ___fttol@lval:	
   738                           
   739                           ; 4 bytes @ 0x9
   740  0079                     	ds	1
   741  007A                     utoa@base:	
   742                           
   743                           ; 2 bytes @ 0xA
   744  007A                     	ds	1
   745  007B                     ??___awtoft:	
   746  007B                     ___ftmul@f2:	
   747                           ; 0 bytes @ 0xB
   748                           
   749                           
   750                           ; 3 bytes @ 0xB
   751  007B                     	ds	1
   752  007C                     ??_utoa:	
   753                           
   754                           ; 0 bytes @ 0xC
   755  007C                     	ds	1
   756  007D                     ??_itoa:	
   757  007D                     ___awtoft@sign:	
   758                           ; 0 bytes @ 0xD
   759                           
   760  007D                     ___fttol@exp1:	
   761                           ; 1 bytes @ 0xD
   762                           
   763                           
   764                           ; 1 bytes @ 0xD
   765  007D                     	ds	1
   766                           
   767                           	psect	cstackBANK0
   768  0020                     __pcstackBANK0:	
   769  0020                     ??_GetReading:	
   770  0020                     ??___ftmul:	
   771                           ; 0 bytes @ 0x0
   772                           
   773  0020                     utoa@v:	
   774                           ; 0 bytes @ 0x0
   775                           
   776                           
   777                           ; 2 bytes @ 0x0
   778  0020                     	ds	2
   779  0022                     utoa@c:	
   780                           
   781                           ; 1 bytes @ 0x2
   782  0022                     	ds	1
   783  0023                     utoa@buf:	
   784                           
   785                           ; 1 bytes @ 0x3
   786  0023                     	ds	1
   787  0024                     ?_itoa:	
   788  0024                     ___ftmul@exp:	
   789                           ; 1 bytes @ 0x4
   790                           
   791  0024                     itoa@val:	
   792                           ; 1 bytes @ 0x4
   793                           
   794                           
   795                           ; 2 bytes @ 0x4
   796  0024                     	ds	1
   797  0025                     GetReading@crc1:	
   798  0025                     ___ftmul@f3_as_product:	
   799                           ; 1 bytes @ 0x5
   800                           
   801                           
   802                           ; 3 bytes @ 0x5
   803  0025                     	ds	1
   804  0026                     GetReading@crc2:	
   805  0026                     itoa@base:	
   806                           ; 1 bytes @ 0x6
   807                           
   808                           
   809                           ; 2 bytes @ 0x6
   810  0026                     	ds	1
   811  0027                     GetReading@th:	
   812                           
   813                           ; 1 bytes @ 0x7
   814  0027                     	ds	1
   815  0028                     GetReading@tl:	
   816  0028                     ___ftmul@cntr:	
   817                           ; 1 bytes @ 0x8
   818                           
   819  0028                     itoa@cp:	
   820                           ; 1 bytes @ 0x8
   821                           
   822                           
   823                           ; 1 bytes @ 0x8
   824  0028                     	ds	1
   825  0029                     GetReading@hh:	
   826  0029                     ___ftmul@sign:	
   827                           ; 1 bytes @ 0x9
   828                           
   829  0029                     itoa@buf:	
   830                           ; 1 bytes @ 0x9
   831                           
   832                           
   833                           ; 1 bytes @ 0x9
   834  0029                     	ds	1
   835  002A                     ?___ftadd:	
   836  002A                     GetReading@hl:	
   837                           ; 3 bytes @ 0xA
   838                           
   839  002A                     ___ftadd@f1:	
   840                           ; 1 bytes @ 0xA
   841                           
   842                           
   843                           ; 3 bytes @ 0xA
   844  002A                     	ds	1
   845  002B                     GetReading@local:	
   846                           
   847                           ; 8 bytes @ 0xB
   848  002B                     	ds	2
   849  002D                     ___ftadd@f2:	
   850                           
   851                           ; 3 bytes @ 0xD
   852  002D                     	ds	3
   853  0030                     ??___ftadd:	
   854                           
   855                           ; 0 bytes @ 0x10
   856  0030                     	ds	3
   857  0033                     GetReading@crc_g1:	
   858                           
   859                           ; 1 bytes @ 0x13
   860  0033                     	ds	1
   861  0034                     ___ftadd@sign:	
   862                           
   863                           ; 1 bytes @ 0x14
   864  0034                     	ds	1
   865  0035                     ___ftadd@exp2:	
   866                           
   867                           ; 1 bytes @ 0x15
   868  0035                     	ds	1
   869  0036                     ___ftadd@exp1:	
   870                           
   871                           ; 1 bytes @ 0x16
   872  0036                     	ds	1
   873  0037                     ?_CalcHumid:	
   874  0037                     CalcHumid@b2:	
   875                           ; 2 bytes @ 0x17
   876                           
   877                           
   878                           ; 1 bytes @ 0x17
   879  0037                     	ds	2
   880  0039                     ??_CalcHumid:	
   881                           
   882                           ; 0 bytes @ 0x19
   883  0039                     	ds	5
   884  003E                     CalcHumid@rcv_val:	
   885                           
   886                           ; 3 bytes @ 0x1E
   887  003E                     	ds	3
   888  0041                     CalcHumid@b1:	
   889                           
   890                           ; 1 bytes @ 0x21
   891  0041                     	ds	1
   892  0042                     CalcHumid@ans:	
   893                           
   894                           ; 3 bytes @ 0x22
   895  0042                     	ds	3
   896  0045                     ??_main:	
   897                           
   898                           ; 0 bytes @ 0x25
   899  0045                     	ds	3
   900  0048                     main@ct:	
   901                           
   902                           ; 2 bytes @ 0x28
   903  0048                     	ds	2
   904  004A                     main@buf:	
   905                           
   906                           ; 9 bytes @ 0x2A
   907  004A                     	ds	9
   908  0053                     main@received:	
   909                           
   910                           ; 8 bytes @ 0x33
   911  0053                     	ds	8
   912                           
   913                           	psect	maintext
   914  06F1                     __pmaintext:	
   915 ;;
   916 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   917 ;;
   918 ;; *************** function _main *****************
   919 ;; Defined at:
   920 ;;		line 347 in file "main.c"
   921 ;; Parameters:    Size  Location     Type
   922 ;;		None
   923 ;; Auto vars:     Size  Location     Type
   924 ;;  buf             9   42[BANK0 ] unsigned char [9]
   925 ;;  ct              2   40[BANK0 ] int 
   926 ;;  gah             2    0        unsigned int 
   927 ;;  received        8   51[BANK0 ] struct sht_return
   928 ;; Return value:  Size  Location     Type
   929 ;;                  2  184[None  ] int 
   930 ;; Registers used:
   931 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
   932 ;; Tracked objects:
   933 ;;		On entry : B1F/0
   934 ;;		On exit  : 0/0
   935 ;;		Unchanged: 0/0
   936 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   937 ;;      Params:         0       0       0       0
   938 ;;      Locals:         0      19       0       0
   939 ;;      Temps:          0       3       0       0
   940 ;;      Totals:         0      22       0       0
   941 ;;Total ram usage:       22 bytes
   942 ;; Hardware stack levels required when called:    3
   943 ;; This function calls:
   944 ;;		_CalcHumid
   945 ;;		_GetReading
   946 ;;		_UART_String
   947 ;;		_init_io
   948 ;;		_itoa
   949 ;;		_serial_init
   950 ;;		_uart_xmit
   951 ;; This function is called by:
   952 ;;		Startup code after reset
   953 ;; This function uses a non-reentrant model
   954 ;;
   955                           
   956                           
   957                           ;psect for function _main
   958  06F1                     _main:	
   959                           
   960                           ;main.c: 348: Sht_rtn received;
   961                           ;main.c: 349: OSCCONbits.IRCF = 0x0d;
   962                           
   963                           ;incstack = 0
   964                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
   965  06F1  0021               	movlb	1	; select bank1
   966  06F2  0819               	movf	25,w	;volatile
   967  06F3  3987               	andlw	-121
   968  06F4  3868               	iorlw	104
   969  06F5  0099               	movwf	25	;volatile
   970                           
   971                           ;main.c: 350: OSCCONbits.SCS = 0x02;
   972  06F6  0819               	movf	25,w	;volatile
   973  06F7  39FC               	andlw	-4
   974  06F8  3802               	iorlw	2
   975  06F9  0099               	movwf	25	;volatile
   976                           
   977                           ;main.c: 351: OPTION_REGbits.nWPUEN = 0;
   978  06FA  1395               	bcf	21,7	;volatile
   979                           
   980                           ;main.c: 353: init_io();
   981  06FB  3181  21D9  3186   	fcall	_init_io
   982                           
   983                           ;main.c: 354: serial_init();
   984  06FE  3181  21C8  3186   	fcall	_serial_init
   985                           
   986                           ;main.c: 356: SSPCONbits.SSPM=0x08;
   987  0701  0024               	movlb	4	; select bank4
   988  0702  0815               	movf	21,w	;volatile
   989  0703  39F0               	andlw	-16
   990  0704  3808               	iorlw	8
   991  0705  0095               	movwf	21	;volatile
   992                           
   993                           ;main.c: 357: SSPCONbits.SSPEN=1;
   994  0706  1695               	bsf	21,5	;volatile
   995                           
   996                           ;main.c: 358: SSPADD = 0x09;
   997  0707  3009               	movlw	9
   998  0708  0092               	movwf	18	;volatile
   999                           
  1000                           ;main.c: 359: SSP1ADD = 0x09;
  1001  0709  3009               	movlw	9
  1002  070A  0092               	movwf	18	;volatile
  1003  070B                     l185:	
  1004                           ;main.c: 363: while(1){
  1005                           
  1006                           
  1007                           ;main.c: 364: _delay((unsigned long)((50)*(4000000/4000.0)));
  1008  070B  3041               	movlw	65
  1009  070C  0020               	movlb	0	; select bank0
  1010  070D  00C6               	movwf	??_main+1
  1011  070E  30EE               	movlw	238
  1012  070F  00C5               	movwf	??_main
  1013  0710                     u2037:	
  1014  0710  0BC5               	decfsz	??_main,f
  1015  0711  2F10               	goto	u2037
  1016  0712  0BC6               	decfsz	??_main+1,f
  1017  0713  2F10               	goto	u2037
  1018  0714  0000               	nop
  1019                           
  1020                           ;main.c: 369: uart_xmit(tempbyte1);
  1021  0715  0020               	movlb	0	; select bank0
  1022  0716  0863               	movf	_tempbyte1,w
  1023  0717  00C5               	movwf	??_main
  1024  0718  01C6               	clrf	??_main+1
  1025  0719  0845               	movf	??_main,w
  1026  071A  00F0               	movwf	uart_xmit@mydata_byte
  1027  071B  0846               	movf	??_main+1,w
  1028  071C  00F1               	movwf	uart_xmit@mydata_byte+1
  1029  071D  3181  2142  3186   	fcall	_uart_xmit
  1030                           
  1031                           ;main.c: 370: uart_xmit(tempbyte2);
  1032  0720  0020               	movlb	0	; select bank0
  1033  0721  0864               	movf	_tempbyte2,w
  1034  0722  00C5               	movwf	??_main
  1035  0723  01C6               	clrf	??_main+1
  1036  0724  0845               	movf	??_main,w
  1037  0725  00F0               	movwf	uart_xmit@mydata_byte
  1038  0726  0846               	movf	??_main+1,w
  1039  0727  00F1               	movwf	uart_xmit@mydata_byte+1
  1040  0728  3181  2142  3186   	fcall	_uart_xmit
  1041                           
  1042                           ;main.c: 371: uart_xmit(tb1);
  1043  072B  0020               	movlb	0	; select bank0
  1044  072C  0861               	movf	_tb1,w
  1045  072D  00C5               	movwf	??_main
  1046  072E  01C6               	clrf	??_main+1
  1047  072F  0845               	movf	??_main,w
  1048  0730  00F0               	movwf	uart_xmit@mydata_byte
  1049  0731  0846               	movf	??_main+1,w
  1050  0732  00F1               	movwf	uart_xmit@mydata_byte+1
  1051  0733  3181  2142  3186   	fcall	_uart_xmit
  1052                           
  1053                           ;main.c: 372: uart_xmit(tb2);
  1054  0736  0020               	movlb	0	; select bank0
  1055  0737  0862               	movf	_tb2,w
  1056  0738  00C5               	movwf	??_main
  1057  0739  01C6               	clrf	??_main+1
  1058  073A  0845               	movf	??_main,w
  1059  073B  00F0               	movwf	uart_xmit@mydata_byte
  1060  073C  0846               	movf	??_main+1,w
  1061  073D  00F1               	movwf	uart_xmit@mydata_byte+1
  1062  073E  3181  2142  3186   	fcall	_uart_xmit
  1063                           
  1064                           ;main.c: 374: _delay((unsigned long)((1)*(4000000/4000.0)));
  1065  0741  30F9               	movlw	249
  1066  0742  0020               	movlb	0	; select bank0
  1067  0743  00C5               	movwf	??_main
  1068  0744                     u2047:	
  1069  0744  0000               	nop
  1070  0745  0BC5               	decfsz	??_main,f
  1071  0746  2F44               	goto	u2047
  1072  0747  3200               	nop2	;nop
  1073  0748  0000               	nop
  1074                           
  1075                           ;main.c: 376: received = GetReading();
  1076  0749  3185  2547  3186   	fcall	_GetReading
  1077  074C  3076               	movlw	low ?_GetReading
  1078  074D  0086               	movwf	6
  1079  074E  3000               	movlw	high ?_GetReading
  1080  074F  0087               	movwf	7
  1081  0750  3053               	movlw	low main@received
  1082  0751  0084               	movwf	4
  1083  0752  3000               	movlw	high main@received
  1084  0753  0085               	movwf	5
  1085  0754  3008               	movlw	8
  1086  0755  0020               	movlb	0	; select bank0
  1087  0756  00C5               	movwf	??_main
  1088  0757                     u2020:	
  1089  0757  0016               	moviw fsr1++
  1090  0758  001A               	movwi fsr0++
  1091  0759  0BC5               	decfsz	??_main,f
  1092  075A  2F57               	goto	u2020
  1093                           
  1094                           ;main.c: 377: unsigned int gah;
  1095                           ;main.c: 378: char buf[9];
  1096                           ;main.c: 379: _delay((unsigned long)((500)*(4000000/4000.0)));
  1097  075B  3003               	movlw	3
  1098  075C  00C7               	movwf	??_main+2
  1099  075D  308A               	movlw	138
  1100  075E  00C6               	movwf	??_main+1
  1101  075F  3056               	movlw	86
  1102  0760  00C5               	movwf	??_main
  1103  0761                     u2057:	
  1104  0761  0BC5               	decfsz	??_main,f
  1105  0762  2F61               	goto	u2057
  1106  0763  0BC6               	decfsz	??_main+1,f
  1107  0764  2F61               	goto	u2057
  1108  0765  0BC7               	decfsz	??_main+2,f
  1109  0766  2F61               	goto	u2057
  1110  0767  3200               	nop2
  1111                           
  1112                           ;main.c: 380: LATCbits.LATC0 = 1;
  1113  0768  0022               	movlb	2	; select bank2
  1114  0769  140E               	bsf	14,0	;volatile
  1115                           
  1116                           ;main.c: 381: _delay((unsigned long)((500)*(4000000/4000.0)));
  1117  076A  3003               	movlw	3
  1118  076B  0020               	movlb	0	; select bank0
  1119  076C  00C7               	movwf	??_main+2
  1120  076D  308A               	movlw	138
  1121  076E  00C6               	movwf	??_main+1
  1122  076F  3056               	movlw	86
  1123  0770  00C5               	movwf	??_main
  1124  0771                     u2067:	
  1125  0771  0BC5               	decfsz	??_main,f
  1126  0772  2F71               	goto	u2067
  1127  0773  0BC6               	decfsz	??_main+1,f
  1128  0774  2F71               	goto	u2067
  1129  0775  0BC7               	decfsz	??_main+2,f
  1130  0776  2F71               	goto	u2067
  1131  0777  3200               	nop2
  1132                           
  1133                           ;main.c: 382: LATCbits.LATC0 = 0;
  1134  0778  0022               	movlb	2	; select bank2
  1135  0779  100E               	bcf	14,0	;volatile
  1136                           
  1137                           ;main.c: 383: UART_String(buf);
  1138  077A  304A               	movlw	low main@buf
  1139  077B  00F2               	movwf	UART_String@letters
  1140  077C  3000               	movlw	high main@buf
  1141  077D  00F3               	movwf	UART_String@letters+1
  1142  077E  3182  2215  3186   	fcall	_UART_String
  1143                           
  1144                           ;main.c: 384: uart_xmit(10);
  1145  0781  300A               	movlw	10
  1146  0782  00F0               	movwf	uart_xmit@mydata_byte
  1147  0783  3000               	movlw	0
  1148  0784  00F1               	movwf	uart_xmit@mydata_byte+1
  1149  0785  3181  2142  3186   	fcall	_uart_xmit
  1150                           
  1151                           ;main.c: 385: uart_xmit(13);
  1152  0788  300D               	movlw	13
  1153  0789  00F0               	movwf	uart_xmit@mydata_byte
  1154  078A  3000               	movlw	0
  1155  078B  00F1               	movwf	uart_xmit@mydata_byte+1
  1156  078C  3181  2142  3186   	fcall	_uart_xmit
  1157                           
  1158                           ;main.c: 387: int ct = CalcHumid(tb1,tb2);
  1159  078F  0020               	movlb	0	; select bank0
  1160  0790  0862               	movf	_tb2,w
  1161  0791  00C5               	movwf	??_main
  1162  0792  0845               	movf	??_main,w
  1163  0793  00B7               	movwf	CalcHumid@b2
  1164  0794  0861               	movf	_tb1,w
  1165  0795  3183  23A9  3186   	fcall	_CalcHumid
  1166  0798  0020               	movlb	0	; select bank0
  1167  0799  0838               	movf	?_CalcHumid+1,w
  1168  079A  00C9               	movwf	main@ct+1
  1169  079B  0837               	movf	?_CalcHumid,w
  1170  079C  00C8               	movwf	main@ct
  1171                           
  1172                           ;main.c: 389: UART_String("Temperature: ");
  1173  079D  3000               	movlw	low (STR_1| (0+32768))
  1174  079E  00F2               	movwf	UART_String@letters
  1175  079F  3088               	movlw	high (STR_1| (0+32768))
  1176  07A0  00F3               	movwf	UART_String@letters+1
  1177  07A1  3182  2215  3186   	fcall	_UART_String
  1178                           
  1179                           ;main.c: 390: itoa(buf,received.crc_ok,10);
  1180  07A4  0020               	movlb	0	; select bank0
  1181  07A5  085A               	movf	main@received+7,w
  1182  07A6  00C5               	movwf	??_main
  1183  07A7  01C6               	clrf	??_main+1
  1184  07A8  0845               	movf	??_main,w
  1185  07A9  00A4               	movwf	itoa@val
  1186  07AA  0846               	movf	??_main+1,w
  1187  07AB  00A5               	movwf	itoa@val+1
  1188  07AC  300A               	movlw	10
  1189  07AD  00A6               	movwf	itoa@base
  1190  07AE  3000               	movlw	0
  1191  07AF  00A7               	movwf	itoa@base+1
  1192  07B0  304A               	movlw	(low (main@buf| 0))& (0+255)
  1193  07B1  3182  2235  3186   	fcall	_itoa
  1194                           
  1195                           ;main.c: 391: UART_String(buf);
  1196  07B4  304A               	movlw	low main@buf
  1197  07B5  00F2               	movwf	UART_String@letters
  1198  07B6  3000               	movlw	high main@buf
  1199  07B7  00F3               	movwf	UART_String@letters+1
  1200  07B8  3182  2215  3186   	fcall	_UART_String
  1201                           
  1202                           ;main.c: 392: uart_xmit(10);
  1203  07BB  300A               	movlw	10
  1204  07BC  00F0               	movwf	uart_xmit@mydata_byte
  1205  07BD  3000               	movlw	0
  1206  07BE  00F1               	movwf	uart_xmit@mydata_byte+1
  1207  07BF  3181  2142  3186   	fcall	_uart_xmit
  1208                           
  1209                           ;main.c: 393: uart_xmit(13);
  1210  07C2  300D               	movlw	13
  1211  07C3  00F0               	movwf	uart_xmit@mydata_byte
  1212  07C4  3000               	movlw	0
  1213  07C5  00F1               	movwf	uart_xmit@mydata_byte+1
  1214  07C6  3181  2142  3186   	fcall	_uart_xmit
  1215                           
  1216                           ;main.c: 395: UART_String("Humidity: ");
  1217  07C9  300E               	movlw	low (STR_2| (0+32768))
  1218  07CA  00F2               	movwf	UART_String@letters
  1219  07CB  3088               	movlw	high (STR_2| (0+32768))
  1220  07CC  00F3               	movwf	UART_String@letters+1
  1221  07CD  3182  2215  3186   	fcall	_UART_String
  1222                           
  1223                           ;main.c: 396: itoa(buf,received.vh,16);
  1224  07D0  0020               	movlb	0	; select bank0
  1225  07D1  0856               	movf	main@received+3,w
  1226  07D2  00A5               	movwf	itoa@val+1
  1227  07D3  0855               	movf	main@received+2,w
  1228  07D4  00A4               	movwf	itoa@val
  1229  07D5  3010               	movlw	16
  1230  07D6  00A6               	movwf	itoa@base
  1231  07D7  3000               	movlw	0
  1232  07D8  00A7               	movwf	itoa@base+1
  1233  07D9  304A               	movlw	(low (main@buf| 0))& (0+255)
  1234  07DA  3182  2235  3186   	fcall	_itoa
  1235                           
  1236                           ;main.c: 397: UART_String(buf);
  1237  07DD  304A               	movlw	low main@buf
  1238  07DE  00F2               	movwf	UART_String@letters
  1239  07DF  3000               	movlw	high main@buf
  1240  07E0  00F3               	movwf	UART_String@letters+1
  1241  07E1  3182  2215  3186   	fcall	_UART_String
  1242                           
  1243                           ;main.c: 398: uart_xmit(10);
  1244  07E4  300A               	movlw	10
  1245  07E5  00F0               	movwf	uart_xmit@mydata_byte
  1246  07E6  3000               	movlw	0
  1247  07E7  00F1               	movwf	uart_xmit@mydata_byte+1
  1248  07E8  3181  2142  3186   	fcall	_uart_xmit
  1249                           
  1250                           ;main.c: 399: uart_xmit(13);
  1251  07EB  300D               	movlw	13
  1252  07EC  00F0               	movwf	uart_xmit@mydata_byte
  1253  07ED  3000               	movlw	0
  1254  07EE  00F1               	movwf	uart_xmit@mydata_byte+1
  1255  07EF  3181  2142  3186   	fcall	_uart_xmit
  1256  07F2  2F0B               	goto	l185
  1257  07F3                     __end_of_main:	
  1258                           
  1259                           	psect	text1
  1260  01C8                     __ptext1:	
  1261 ;; *************** function _serial_init *****************
  1262 ;; Defined at:
  1263 ;;		line 100 in file "main.c"
  1264 ;; Parameters:    Size  Location     Type
  1265 ;;		None
  1266 ;; Auto vars:     Size  Location     Type
  1267 ;;		None
  1268 ;; Return value:  Size  Location     Type
  1269 ;;		None               void
  1270 ;; Registers used:
  1271 ;;		wreg, status,2
  1272 ;; Tracked objects:
  1273 ;;		On entry : 0/0
  1274 ;;		On exit  : 0/0
  1275 ;;		Unchanged: 0/0
  1276 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1277 ;;      Params:         0       0       0       0
  1278 ;;      Locals:         0       0       0       0
  1279 ;;      Temps:          0       0       0       0
  1280 ;;      Totals:         0       0       0       0
  1281 ;;Total ram usage:        0 bytes
  1282 ;; Hardware stack levels used:    1
  1283 ;; This function calls:
  1284 ;;		Nothing
  1285 ;; This function is called by:
  1286 ;;		_main
  1287 ;; This function uses a non-reentrant model
  1288 ;;
  1289                           
  1290                           
  1291                           ;psect for function _serial_init
  1292  01C8                     _serial_init:	
  1293                           
  1294                           ;main.c: 108: TXSTAbits.BRGH=1;
  1295                           
  1296                           ;incstack = 0
  1297                           ; Regs used in _serial_init: [wreg+status,2]
  1298  01C8  0023               	movlb	3	; select bank3
  1299  01C9  151E               	bsf	30,2	;volatile
  1300                           
  1301                           ;main.c: 109: TXSTAbits.TX9=0;
  1302  01CA  131E               	bcf	30,6	;volatile
  1303                           
  1304                           ;main.c: 110: TXSTAbits.TXEN = 1;
  1305  01CB  169E               	bsf	30,5	;volatile
  1306                           
  1307                           ;main.c: 112: RCSTAbits.SPEN=1;
  1308  01CC  179D               	bsf	29,7	;volatile
  1309                           
  1310                           ;main.c: 113: RCSTAbits.RX9=0;
  1311  01CD  131D               	bcf	29,6	;volatile
  1312                           
  1313                           ;main.c: 114: RCSTAbits.CREN=1;
  1314  01CE  161D               	bsf	29,4	;volatile
  1315                           
  1316                           ;main.c: 116: SPBRGL=25;
  1317  01CF  3019               	movlw	25
  1318  01D0  009B               	movwf	27	;volatile
  1319                           
  1320                           ;main.c: 117: SPBRGH=0;
  1321  01D1  019C               	clrf	28	;volatile
  1322                           
  1323                           ;main.c: 119: PIR1bits.RCIF=0;
  1324  01D2  0020               	movlb	0	; select bank0
  1325  01D3  1291               	bcf	17,5	;volatile
  1326                           
  1327                           ;main.c: 120: PIE1bits.RCIE=1;
  1328  01D4  0021               	movlb	1	; select bank1
  1329  01D5  1691               	bsf	17,5	;volatile
  1330                           
  1331                           ;main.c: 121: INTCONbits.PEIE = 1;
  1332  01D6  170B               	bsf	11,6	;volatile
  1333                           
  1334                           ;main.c: 122: INTCONbits.GIE = 1;
  1335  01D7  178B               	bsf	11,7	;volatile
  1336  01D8  0008               	return
  1337  01D9                     __end_of_serial_init:	
  1338                           
  1339                           	psect	text2
  1340  0235                     __ptext2:	
  1341 ;; *************** function _itoa *****************
  1342 ;; Defined at:
  1343 ;;		line 4 in file "/opt/mmplabv310/xc8/sources/common/itoa.c"
  1344 ;; Parameters:    Size  Location     Type
  1345 ;;  buf             1    wreg     PTR unsigned char 
  1346 ;;		 -> main@buf(9), 
  1347 ;;  val             2    4[BANK0 ] int 
  1348 ;;  base            2    6[BANK0 ] int 
  1349 ;; Auto vars:     Size  Location     Type
  1350 ;;  buf             1    9[BANK0 ] PTR unsigned char 
  1351 ;;		 -> main@buf(9), 
  1352 ;;  cp              1    8[BANK0 ] PTR unsigned char 
  1353 ;;		 -> main@buf(9), 
  1354 ;; Return value:  Size  Location     Type
  1355 ;;                  1    wreg      PTR unsigned char 
  1356 ;; Registers used:
  1357 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1358 ;; Tracked objects:
  1359 ;;		On entry : 0/0
  1360 ;;		On exit  : 0/0
  1361 ;;		Unchanged: 0/0
  1362 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1363 ;;      Params:         0       4       0       0
  1364 ;;      Locals:         0       2       0       0
  1365 ;;      Temps:          1       0       0       0
  1366 ;;      Totals:         1       6       0       0
  1367 ;;Total ram usage:        7 bytes
  1368 ;; Hardware stack levels used:    1
  1369 ;; Hardware stack levels required when called:    2
  1370 ;; This function calls:
  1371 ;;		_utoa
  1372 ;; This function is called by:
  1373 ;;		_main
  1374 ;; This function uses a non-reentrant model
  1375 ;;
  1376                           
  1377                           
  1378                           ;psect for function _itoa
  1379  0235                     _itoa:	
  1380                           
  1381                           ;incstack = 0
  1382                           ; Regs used in _itoa: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  1383                           ;itoa@buf stored from wreg
  1384  0235  0020               	movlb	0	; select bank0
  1385  0236  00A9               	movwf	itoa@buf
  1386  0237  0829               	movf	itoa@buf,w
  1387  0238  00FD               	movwf	??_itoa
  1388  0239  087D               	movf	??_itoa,w
  1389  023A  00A8               	movwf	itoa@cp
  1390  023B  1FA5               	btfss	itoa@val+1,7
  1391  023C  2A4D               	goto	l1793
  1392  023D  302D               	movlw	45
  1393  023E  00FD               	movwf	??_itoa
  1394  023F  0829               	movf	itoa@buf,w
  1395  0240  0086               	movwf	6
  1396  0241  0187               	clrf	7
  1397  0242  087D               	movf	??_itoa,w
  1398  0243  0081               	movwf	1
  1399  0244  3001               	movlw	1
  1400  0245  00FD               	movwf	??_itoa
  1401  0246  087D               	movf	??_itoa,w
  1402  0247  07A9               	addwf	itoa@buf,f
  1403  0248  09A4               	comf	itoa@val,f
  1404  0249  09A5               	comf	itoa@val+1,f
  1405  024A  0AA4               	incf	itoa@val,f
  1406  024B  1903               	skipnz
  1407  024C  0AA5               	incf	itoa@val+1,f
  1408  024D                     l1793:	
  1409  024D  0825               	movf	itoa@val+1,w
  1410  024E  00F9               	movwf	utoa@val+1
  1411  024F  0824               	movf	itoa@val,w
  1412  0250  00F8               	movwf	utoa@val
  1413  0251  0827               	movf	itoa@base+1,w
  1414  0252  00FB               	movwf	utoa@base+1
  1415  0253  0826               	movf	itoa@base,w
  1416  0254  00FA               	movwf	utoa@base
  1417  0255  0829               	movf	itoa@buf,w
  1418  0256  3182  22E3         	fcall	_utoa
  1419  0258  0008               	return
  1420  0259                     __end_of_itoa:	
  1421                           ;	Return value of _itoa is never used
  1422                           
  1423                           
  1424                           	psect	text3
  1425  02E3                     __ptext3:	
  1426 ;; *************** function _utoa *****************
  1427 ;; Defined at:
  1428 ;;		line 17 in file "/opt/mmplabv310/xc8/sources/common/itoa.c"
  1429 ;; Parameters:    Size  Location     Type
  1430 ;;  buf             1    wreg     PTR unsigned char 
  1431 ;;		 -> main@buf(9), 
  1432 ;;  val             2    8[COMMON] unsigned int 
  1433 ;;  base            2   10[COMMON] int 
  1434 ;; Auto vars:     Size  Location     Type
  1435 ;;  buf             1    3[BANK0 ] PTR unsigned char 
  1436 ;;		 -> main@buf(9), 
  1437 ;;  v               2    0[BANK0 ] unsigned int 
  1438 ;;  c               1    2[BANK0 ] unsigned char 
  1439 ;; Return value:  Size  Location     Type
  1440 ;;                  1    wreg      PTR unsigned char 
  1441 ;; Registers used:
  1442 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1443 ;; Tracked objects:
  1444 ;;		On entry : 0/0
  1445 ;;		On exit  : 0/0
  1446 ;;		Unchanged: 0/0
  1447 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1448 ;;      Params:         4       0       0       0
  1449 ;;      Locals:         0       4       0       0
  1450 ;;      Temps:          1       0       0       0
  1451 ;;      Totals:         5       4       0       0
  1452 ;;Total ram usage:        9 bytes
  1453 ;; Hardware stack levels used:    1
  1454 ;; Hardware stack levels required when called:    1
  1455 ;; This function calls:
  1456 ;;		___lwdiv
  1457 ;;		___lwmod
  1458 ;; This function is called by:
  1459 ;;		_itoa
  1460 ;; This function uses a non-reentrant model
  1461 ;;
  1462                           
  1463                           
  1464                           ;psect for function _utoa
  1465  02E3                     _utoa:	
  1466                           
  1467                           ;incstack = 0
  1468                           ; Regs used in _utoa: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  1469                           ;utoa@buf stored from wreg
  1470  02E3  0020               	movlb	0	; select bank0
  1471  02E4  00A3               	movwf	utoa@buf
  1472  02E5  0879               	movf	utoa@val+1,w
  1473  02E6  00A1               	movwf	utoa@v+1
  1474  02E7  0878               	movf	utoa@val,w
  1475  02E8  00A0               	movwf	utoa@v
  1476  02E9                     l1629:	
  1477  02E9  087B               	movf	utoa@base+1,w
  1478  02EA  00F1               	movwf	___lwdiv@divisor+1
  1479  02EB  087A               	movf	utoa@base,w
  1480  02EC  00F0               	movwf	___lwdiv@divisor
  1481  02ED  0821               	movf	utoa@v+1,w
  1482  02EE  00F3               	movwf	___lwdiv@dividend+1
  1483  02EF  0820               	movf	utoa@v,w
  1484  02F0  00F2               	movwf	___lwdiv@dividend
  1485  02F1  3182  22AF  3182   	fcall	___lwdiv
  1486  02F4  0871               	movf	?___lwdiv+1,w
  1487  02F5  0020               	movlb	0	; select bank0
  1488  02F6  00A1               	movwf	utoa@v+1
  1489  02F7  0870               	movf	?___lwdiv,w
  1490  02F8  00A0               	movwf	utoa@v
  1491  02F9  3001               	movlw	1
  1492  02FA  00FC               	movwf	??_utoa
  1493  02FB  087C               	movf	??_utoa,w
  1494  02FC  07A3               	addwf	utoa@buf,f
  1495  02FD  0820               	movf	utoa@v,w
  1496  02FE  0421               	iorwf	utoa@v+1,w
  1497  02FF  1D03               	btfss	3,2
  1498  0300  2AE9               	goto	l1629
  1499  0301  0823               	movf	utoa@buf,w
  1500  0302  0086               	movwf	6
  1501  0303  0187               	clrf	7
  1502  0304  0181               	clrf	1
  1503  0305  3001               	movlw	1
  1504  0306  02A3               	subwf	utoa@buf,f
  1505  0307                     l1639:	
  1506  0307  087B               	movf	utoa@base+1,w
  1507  0308  00F1               	movwf	___lwmod@divisor+1
  1508  0309  087A               	movf	utoa@base,w
  1509  030A  00F0               	movwf	___lwmod@divisor
  1510  030B  0879               	movf	utoa@val+1,w
  1511  030C  00F3               	movwf	___lwmod@dividend+1
  1512  030D  0878               	movf	utoa@val,w
  1513  030E  00F2               	movwf	___lwmod@dividend
  1514  030F  3182  2283  3182   	fcall	___lwmod
  1515  0312  0870               	movf	?___lwmod,w
  1516  0313  00FC               	movwf	??_utoa
  1517  0314  087C               	movf	??_utoa,w
  1518  0315  0020               	movlb	0	; select bank0
  1519  0316  00A2               	movwf	utoa@c
  1520  0317  087B               	movf	utoa@base+1,w
  1521  0318  00F1               	movwf	___lwdiv@divisor+1
  1522  0319  087A               	movf	utoa@base,w
  1523  031A  00F0               	movwf	___lwdiv@divisor
  1524  031B  0879               	movf	utoa@val+1,w
  1525  031C  00F3               	movwf	___lwdiv@dividend+1
  1526  031D  0878               	movf	utoa@val,w
  1527  031E  00F2               	movwf	___lwdiv@dividend
  1528  031F  3182  22AF  3182   	fcall	___lwdiv
  1529  0322  0871               	movf	?___lwdiv+1,w
  1530  0323  00F9               	movwf	utoa@val+1
  1531  0324  0870               	movf	?___lwdiv,w
  1532  0325  00F8               	movwf	utoa@val
  1533  0326  300A               	movlw	10
  1534  0327  0020               	movlb	0	; select bank0
  1535  0328  0222               	subwf	utoa@c,w
  1536  0329  1C03               	skipc
  1537  032A  2B2F               	goto	l548
  1538  032B  3007               	movlw	7
  1539  032C  00FC               	movwf	??_utoa
  1540  032D  087C               	movf	??_utoa,w
  1541  032E  07A2               	addwf	utoa@c,f
  1542  032F                     l548:	
  1543  032F  3030               	movlw	48
  1544  0330  00FC               	movwf	??_utoa
  1545  0331  087C               	movf	??_utoa,w
  1546  0332  07A2               	addwf	utoa@c,f
  1547  0333  0822               	movf	utoa@c,w
  1548  0334  00FC               	movwf	??_utoa
  1549  0335  0823               	movf	utoa@buf,w
  1550  0336  0086               	movwf	6
  1551  0337  0187               	clrf	7
  1552  0338  087C               	movf	??_utoa,w
  1553  0339  0081               	movwf	1
  1554  033A  3001               	movlw	1
  1555  033B  02A3               	subwf	utoa@buf,f
  1556  033C  0878               	movf	utoa@val,w
  1557  033D  0479               	iorwf	utoa@val+1,w
  1558  033E  1D03               	btfss	3,2
  1559  033F  2B07               	goto	l1639
  1560                           
  1561                           ;	Return value of _utoa is never used
  1562  0340  3001               	movlw	1
  1563  0341  00FC               	movwf	??_utoa
  1564  0342  087C               	movf	??_utoa,w
  1565  0343  07A3               	addwf	utoa@buf,f
  1566  0344  0008               	return
  1567  0345                     __end_of_utoa:	
  1568                           
  1569                           	psect	text4
  1570  0283                     __ptext4:	
  1571 ;; *************** function ___lwmod *****************
  1572 ;; Defined at:
  1573 ;;		line 6 in file "/opt/mmplabv310/xc8/sources/common/lwmod.c"
  1574 ;; Parameters:    Size  Location     Type
  1575 ;;  divisor         2    0[COMMON] unsigned int 
  1576 ;;  dividend        2    2[COMMON] unsigned int 
  1577 ;; Auto vars:     Size  Location     Type
  1578 ;;  counter         1    5[COMMON] unsigned char 
  1579 ;; Return value:  Size  Location     Type
  1580 ;;                  2    0[COMMON] unsigned int 
  1581 ;; Registers used:
  1582 ;;		wreg, status,2, status,0
  1583 ;; Tracked objects:
  1584 ;;		On entry : 0/0
  1585 ;;		On exit  : 0/0
  1586 ;;		Unchanged: 0/0
  1587 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1588 ;;      Params:         4       0       0       0
  1589 ;;      Locals:         1       0       0       0
  1590 ;;      Temps:          1       0       0       0
  1591 ;;      Totals:         6       0       0       0
  1592 ;;Total ram usage:        6 bytes
  1593 ;; Hardware stack levels used:    1
  1594 ;; This function calls:
  1595 ;;		Nothing
  1596 ;; This function is called by:
  1597 ;;		_utoa
  1598 ;; This function uses a non-reentrant model
  1599 ;;
  1600                           
  1601                           
  1602                           ;psect for function ___lwmod
  1603  0283                     ___lwmod:	
  1604                           
  1605                           ;incstack = 0
  1606                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  1607  0283  0870               	movf	___lwmod@divisor,w
  1608  0284  0471               	iorwf	___lwmod@divisor+1,w
  1609  0285  1903               	btfsc	3,2
  1610  0286  2AAA               	goto	l1375
  1611  0287  01F5               	clrf	___lwmod@counter
  1612  0288  0AF5               	incf	___lwmod@counter,f
  1613  0289                     l1365:	
  1614  0289  1BF1               	btfsc	___lwmod@divisor+1,7
  1615  028A  2A95               	goto	l1367
  1616  028B  3001               	movlw	1
  1617  028C                     u1305:	
  1618  028C  35F0               	lslf	___lwmod@divisor,f
  1619  028D  0DF1               	rlf	___lwmod@divisor+1,f
  1620  028E  0B89               	decfsz	9,f
  1621  028F  2A8C               	goto	u1305
  1622  0290  3001               	movlw	1
  1623  0291  00F4               	movwf	??___lwmod
  1624  0292  0874               	movf	??___lwmod,w
  1625  0293  07F5               	addwf	___lwmod@counter,f
  1626  0294  2A89               	goto	l1365
  1627  0295                     l1367:	
  1628  0295  0871               	movf	___lwmod@divisor+1,w
  1629  0296  0273               	subwf	___lwmod@dividend+1,w
  1630  0297  1D03               	skipz
  1631  0298  2A9B               	goto	u1325
  1632  0299  0870               	movf	___lwmod@divisor,w
  1633  029A  0272               	subwf	___lwmod@dividend,w
  1634  029B                     u1325:	
  1635  029B  1C03               	skipc
  1636  029C  2AA1               	goto	l1371
  1637  029D  0870               	movf	___lwmod@divisor,w
  1638  029E  02F2               	subwf	___lwmod@dividend,f
  1639  029F  0871               	movf	___lwmod@divisor+1,w
  1640  02A0  3BF3               	subwfb	___lwmod@dividend+1,f
  1641  02A1                     l1371:	
  1642  02A1  3001               	movlw	1
  1643  02A2                     u1335:	
  1644  02A2  36F1               	lsrf	___lwmod@divisor+1,f
  1645  02A3  0CF0               	rrf	___lwmod@divisor,f
  1646  02A4  0B89               	decfsz	9,f
  1647  02A5  2AA2               	goto	u1335
  1648  02A6  3001               	movlw	1
  1649  02A7  02F5               	subwf	___lwmod@counter,f
  1650  02A8  1D03               	btfss	3,2
  1651  02A9  2A95               	goto	l1367
  1652  02AA                     l1375:	
  1653  02AA  0873               	movf	___lwmod@dividend+1,w
  1654  02AB  00F1               	movwf	?___lwmod+1
  1655  02AC  0872               	movf	___lwmod@dividend,w
  1656  02AD  00F0               	movwf	?___lwmod
  1657  02AE  0008               	return
  1658  02AF                     __end_of___lwmod:	
  1659                           
  1660                           	psect	text5
  1661  02AF                     __ptext5:	
  1662 ;; *************** function ___lwdiv *****************
  1663 ;; Defined at:
  1664 ;;		line 6 in file "/opt/mmplabv310/xc8/sources/common/lwdiv.c"
  1665 ;; Parameters:    Size  Location     Type
  1666 ;;  divisor         2    0[COMMON] unsigned int 
  1667 ;;  dividend        2    2[COMMON] unsigned int 
  1668 ;; Auto vars:     Size  Location     Type
  1669 ;;  quotient        2    5[COMMON] unsigned int 
  1670 ;;  counter         1    7[COMMON] unsigned char 
  1671 ;; Return value:  Size  Location     Type
  1672 ;;                  2    0[COMMON] unsigned int 
  1673 ;; Registers used:
  1674 ;;		wreg, status,2, status,0
  1675 ;; Tracked objects:
  1676 ;;		On entry : 0/0
  1677 ;;		On exit  : 0/0
  1678 ;;		Unchanged: 0/0
  1679 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1680 ;;      Params:         4       0       0       0
  1681 ;;      Locals:         3       0       0       0
  1682 ;;      Temps:          1       0       0       0
  1683 ;;      Totals:         8       0       0       0
  1684 ;;Total ram usage:        8 bytes
  1685 ;; Hardware stack levels used:    1
  1686 ;; This function calls:
  1687 ;;		Nothing
  1688 ;; This function is called by:
  1689 ;;		_utoa
  1690 ;; This function uses a non-reentrant model
  1691 ;;
  1692                           
  1693                           
  1694                           ;psect for function ___lwdiv
  1695  02AF                     ___lwdiv:	
  1696                           
  1697                           ;incstack = 0
  1698                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  1699  02AF  01F5               	clrf	___lwdiv@quotient
  1700  02B0  01F6               	clrf	___lwdiv@quotient+1
  1701  02B1  0870               	movf	___lwdiv@divisor,w
  1702  02B2  0471               	iorwf	___lwdiv@divisor+1,w
  1703  02B3  1903               	btfsc	3,2
  1704  02B4  2ADE               	goto	l1353
  1705  02B5  01F7               	clrf	___lwdiv@counter
  1706  02B6  0AF7               	incf	___lwdiv@counter,f
  1707  02B7                     l1341:	
  1708  02B7  1BF1               	btfsc	___lwdiv@divisor+1,7
  1709  02B8  2AC3               	goto	l1343
  1710  02B9  3001               	movlw	1
  1711  02BA                     u1235:	
  1712  02BA  35F0               	lslf	___lwdiv@divisor,f
  1713  02BB  0DF1               	rlf	___lwdiv@divisor+1,f
  1714  02BC  0B89               	decfsz	9,f
  1715  02BD  2ABA               	goto	u1235
  1716  02BE  3001               	movlw	1
  1717  02BF  00F4               	movwf	??___lwdiv
  1718  02C0  0874               	movf	??___lwdiv,w
  1719  02C1  07F7               	addwf	___lwdiv@counter,f
  1720  02C2  2AB7               	goto	l1341
  1721  02C3                     l1343:	
  1722  02C3  3001               	movlw	1
  1723  02C4                     u1255:	
  1724  02C4  35F5               	lslf	___lwdiv@quotient,f
  1725  02C5  0DF6               	rlf	___lwdiv@quotient+1,f
  1726  02C6  0B89               	decfsz	9,f
  1727  02C7  2AC4               	goto	u1255
  1728  02C8  0871               	movf	___lwdiv@divisor+1,w
  1729  02C9  0273               	subwf	___lwdiv@dividend+1,w
  1730  02CA  1D03               	skipz
  1731  02CB  2ACE               	goto	u1265
  1732  02CC  0870               	movf	___lwdiv@divisor,w
  1733  02CD  0272               	subwf	___lwdiv@dividend,w
  1734  02CE                     u1265:	
  1735  02CE  1C03               	skipc
  1736  02CF  2AD5               	goto	l1349
  1737  02D0  0870               	movf	___lwdiv@divisor,w
  1738  02D1  02F2               	subwf	___lwdiv@dividend,f
  1739  02D2  0871               	movf	___lwdiv@divisor+1,w
  1740  02D3  3BF3               	subwfb	___lwdiv@dividend+1,f
  1741  02D4  1475               	bsf	___lwdiv@quotient,0
  1742  02D5                     l1349:	
  1743  02D5  3001               	movlw	1
  1744  02D6                     u1275:	
  1745  02D6  36F1               	lsrf	___lwdiv@divisor+1,f
  1746  02D7  0CF0               	rrf	___lwdiv@divisor,f
  1747  02D8  0B89               	decfsz	9,f
  1748  02D9  2AD6               	goto	u1275
  1749  02DA  3001               	movlw	1
  1750  02DB  02F7               	subwf	___lwdiv@counter,f
  1751  02DC  1D03               	btfss	3,2
  1752  02DD  2AC3               	goto	l1343
  1753  02DE                     l1353:	
  1754  02DE  0876               	movf	___lwdiv@quotient+1,w
  1755  02DF  00F1               	movwf	?___lwdiv+1
  1756  02E0  0875               	movf	___lwdiv@quotient,w
  1757  02E1  00F0               	movwf	?___lwdiv
  1758  02E2  0008               	return
  1759  02E3                     __end_of___lwdiv:	
  1760                           
  1761                           	psect	text6
  1762  01D9                     __ptext6:	
  1763 ;; *************** function _init_io *****************
  1764 ;; Defined at:
  1765 ;;		line 63 in file "main.c"
  1766 ;; Parameters:    Size  Location     Type
  1767 ;;		None
  1768 ;; Auto vars:     Size  Location     Type
  1769 ;;		None
  1770 ;; Return value:  Size  Location     Type
  1771 ;;		None               void
  1772 ;; Registers used:
  1773 ;;		status,2
  1774 ;; Tracked objects:
  1775 ;;		On entry : 0/0
  1776 ;;		On exit  : 0/0
  1777 ;;		Unchanged: 0/0
  1778 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1779 ;;      Params:         0       0       0       0
  1780 ;;      Locals:         0       0       0       0
  1781 ;;      Temps:          0       0       0       0
  1782 ;;      Totals:         0       0       0       0
  1783 ;;Total ram usage:        0 bytes
  1784 ;; Hardware stack levels used:    1
  1785 ;; This function calls:
  1786 ;;		Nothing
  1787 ;; This function is called by:
  1788 ;;		_main
  1789 ;; This function uses a non-reentrant model
  1790 ;;
  1791                           
  1792                           
  1793                           ;psect for function _init_io
  1794  01D9                     _init_io:	
  1795                           
  1796                           ;main.c: 65: ANSELA = 0x00;
  1797                           
  1798                           ;incstack = 0
  1799                           ; Regs used in _init_io: [status,2]
  1800  01D9  0023               	movlb	3	; select bank3
  1801  01DA  018C               	clrf	12	;volatile
  1802                           
  1803                           ;main.c: 66: ANSELB = 0x00;
  1804  01DB  018D               	clrf	13	;volatile
  1805                           
  1806                           ;main.c: 67: ANSELC = 0x00;
  1807  01DC  018E               	clrf	14	;volatile
  1808                           
  1809                           ;main.c: 69: TRISAbits.TRISA0 = 1;
  1810  01DD  0021               	movlb	1	; select bank1
  1811  01DE  140C               	bsf	12,0	;volatile
  1812                           
  1813                           ;main.c: 70: TRISAbits.TRISA1 = 1;
  1814  01DF  148C               	bsf	12,1	;volatile
  1815                           
  1816                           ;main.c: 71: TRISAbits.TRISA2 = 1;
  1817  01E0  150C               	bsf	12,2	;volatile
  1818                           
  1819                           ;main.c: 72: TRISAbits.TRISA3 = 1;
  1820  01E1  158C               	bsf	12,3	;volatile
  1821                           
  1822                           ;main.c: 73: TRISAbits.TRISA4 = 1;
  1823  01E2  160C               	bsf	12,4	;volatile
  1824                           
  1825                           ;main.c: 74: TRISAbits.TRISA5 = 1;
  1826  01E3  168C               	bsf	12,5	;volatile
  1827                           
  1828                           ;main.c: 76: TRISBbits.TRISB4 = 1;
  1829  01E4  160D               	bsf	13,4	;volatile
  1830                           
  1831                           ;main.c: 77: TRISBbits.TRISB5 = 1;
  1832  01E5  168D               	bsf	13,5	;volatile
  1833                           
  1834                           ;main.c: 78: TRISBbits.TRISB6 = 1;
  1835  01E6  170D               	bsf	13,6	;volatile
  1836                           
  1837                           ;main.c: 79: TRISBbits.TRISB7 = 0;
  1838  01E7  138D               	bcf	13,7	;volatile
  1839                           
  1840                           ;main.c: 81: TRISCbits.TRISC0 = 0;
  1841  01E8  100E               	bcf	14,0	;volatile
  1842                           
  1843                           ;main.c: 82: TRISCbits.TRISC1 = 0;
  1844  01E9  108E               	bcf	14,1	;volatile
  1845                           
  1846                           ;main.c: 83: TRISCbits.TRISC2 = 0;
  1847  01EA  110E               	bcf	14,2	;volatile
  1848                           
  1849                           ;main.c: 84: TRISCbits.TRISC3 = 0;
  1850  01EB  118E               	bcf	14,3	;volatile
  1851                           
  1852                           ;main.c: 85: TRISCbits.TRISC4 = 0;
  1853  01EC  120E               	bcf	14,4	;volatile
  1854                           
  1855                           ;main.c: 86: TRISCbits.TRISC5 = 0;
  1856  01ED  128E               	bcf	14,5	;volatile
  1857                           
  1858                           ;main.c: 87: TRISCbits.TRISC6 = 0;
  1859  01EE  130E               	bcf	14,6	;volatile
  1860                           
  1861                           ;main.c: 88: TRISCbits.TRISC7 = 0;
  1862  01EF  138E               	bcf	14,7	;volatile
  1863                           
  1864                           ;main.c: 90: LATCbits.LATC0 = 1;
  1865  01F0  0022               	movlb	2	; select bank2
  1866  01F1  140E               	bsf	14,0	;volatile
  1867                           
  1868                           ;main.c: 91: LATCbits.LATC1 = 0;
  1869  01F2  108E               	bcf	14,1	;volatile
  1870                           
  1871                           ;main.c: 92: LATCbits.LATC2 = 0;
  1872  01F3  110E               	bcf	14,2	;volatile
  1873  01F4  0008               	return
  1874  01F5                     __end_of_init_io:	
  1875                           
  1876                           	psect	text7
  1877  0215                     __ptext7:	
  1878 ;; *************** function _UART_String *****************
  1879 ;; Defined at:
  1880 ;;		line 340 in file "main.c"
  1881 ;; Parameters:    Size  Location     Type
  1882 ;;  letters         2    2[COMMON] PTR unsigned char 
  1883 ;;		 -> STR_2(11), STR_1(14), main@buf(9), 
  1884 ;; Auto vars:     Size  Location     Type
  1885 ;;  i               2    6[COMMON] int 
  1886 ;; Return value:  Size  Location     Type
  1887 ;;		None               void
  1888 ;; Registers used:
  1889 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1890 ;; Tracked objects:
  1891 ;;		On entry : 0/0
  1892 ;;		On exit  : 0/0
  1893 ;;		Unchanged: 0/0
  1894 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1895 ;;      Params:         2       0       0       0
  1896 ;;      Locals:         2       0       0       0
  1897 ;;      Temps:          2       0       0       0
  1898 ;;      Totals:         6       0       0       0
  1899 ;;Total ram usage:        6 bytes
  1900 ;; Hardware stack levels used:    1
  1901 ;; Hardware stack levels required when called:    1
  1902 ;; This function calls:
  1903 ;;		_uart_xmit
  1904 ;; This function is called by:
  1905 ;;		_main
  1906 ;; This function uses a non-reentrant model
  1907 ;;
  1908                           
  1909                           
  1910                           ;psect for function _UART_String
  1911  0215                     _UART_String:	
  1912                           
  1913                           ;main.c: 341: int i = 0;
  1914                           
  1915                           ;incstack = 0
  1916                           ; Regs used in _UART_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1917  0215  01F6               	clrf	UART_String@i
  1918  0216  01F7               	clrf	UART_String@i+1
  1919  0217                     l1781:	
  1920                           ;main.c: 342: while(letters[i] != 0) {
  1921                           
  1922  0217  0872               	movf	UART_String@letters,w
  1923  0218  0776               	addwf	UART_String@i,w
  1924  0219  0084               	movwf	4
  1925  021A  0873               	movf	UART_String@letters+1,w
  1926  021B  3D77               	addwfc	UART_String@i+1,w
  1927  021C  0085               	movwf	5
  1928  021D  0012               	moviw fsr0++
  1929  021E  1903               	btfsc	3,2
  1930  021F  0008               	return
  1931                           
  1932                           ;main.c: 343: uart_xmit(letters[i++]);
  1933  0220  0872               	movf	UART_String@letters,w
  1934  0221  0776               	addwf	UART_String@i,w
  1935  0222  0084               	movwf	4
  1936  0223  0873               	movf	UART_String@letters+1,w
  1937  0224  3D77               	addwfc	UART_String@i+1,w
  1938  0225  0085               	movwf	5
  1939  0226  0800               	movf	0,w	;code access
  1940  0227  00F4               	movwf	??_UART_String
  1941  0228  01F5               	clrf	??_UART_String+1
  1942  0229  0874               	movf	??_UART_String,w
  1943  022A  00F0               	movwf	uart_xmit@mydata_byte
  1944  022B  0875               	movf	??_UART_String+1,w
  1945  022C  00F1               	movwf	uart_xmit@mydata_byte+1
  1946  022D  3181  2142  3182   	fcall	_uart_xmit
  1947  0230  3001               	movlw	1
  1948  0231  07F6               	addwf	UART_String@i,f
  1949  0232  3000               	movlw	0
  1950  0233  3DF7               	addwfc	UART_String@i+1,f
  1951  0234  2A17               	goto	l1781
  1952  0235                     __end_of_UART_String:	
  1953                           
  1954                           	psect	text8
  1955  0142                     __ptext8:	
  1956 ;; *************** function _uart_xmit *****************
  1957 ;; Defined at:
  1958 ;;		line 95 in file "main.c"
  1959 ;; Parameters:    Size  Location     Type
  1960 ;;  mydata_byte     2    0[COMMON] unsigned int 
  1961 ;; Auto vars:     Size  Location     Type
  1962 ;;		None
  1963 ;; Return value:  Size  Location     Type
  1964 ;;		None               void
  1965 ;; Registers used:
  1966 ;;		wreg
  1967 ;; Tracked objects:
  1968 ;;		On entry : 0/0
  1969 ;;		On exit  : 0/0
  1970 ;;		Unchanged: 0/0
  1971 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1972 ;;      Params:         2       0       0       0
  1973 ;;      Locals:         0       0       0       0
  1974 ;;      Temps:          0       0       0       0
  1975 ;;      Totals:         2       0       0       0
  1976 ;;Total ram usage:        2 bytes
  1977 ;; Hardware stack levels used:    1
  1978 ;; This function calls:
  1979 ;;		Nothing
  1980 ;; This function is called by:
  1981 ;;		_UART_String
  1982 ;;		_main
  1983 ;; This function uses a non-reentrant model
  1984 ;;
  1985                           
  1986                           
  1987                           ;psect for function _uart_xmit
  1988  0142                     _uart_xmit:	
  1989  0142                     l84:	
  1990                           ;main.c: 97: while(!TXSTAbits.TRMT);
  1991                           
  1992                           ;incstack = 0
  1993                           ; Regs used in _uart_xmit: [wreg]
  1994                           
  1995  0142  0023               	movlb	3	; select bank3
  1996  0143  1C9E               	btfss	30,1	;volatile
  1997  0144  2942               	goto	l84
  1998                           
  1999                           ;main.c: 98: TXREG = mydata_byte;
  2000  0145  0870               	movf	uart_xmit@mydata_byte,w
  2001  0146  009A               	movwf	26	;volatile
  2002  0147  0008               	return
  2003  0148                     __end_of_uart_xmit:	
  2004                           
  2005                           	psect	text9
  2006  0547                     __ptext9:	
  2007 ;; *************** function _GetReading *****************
  2008 ;; Defined at:
  2009 ;;		line 279 in file "main.c"
  2010 ;; Parameters:    Size  Location     Type
  2011 ;;		None
  2012 ;; Auto vars:     Size  Location     Type
  2013 ;;  local           8   11[BANK0 ] struct sht_return
  2014 ;;  crc_g1          1   19[BANK0 ] unsigned char 
  2015 ;;  hl              1   10[BANK0 ] unsigned char 
  2016 ;;  hh              1    9[BANK0 ] unsigned char 
  2017 ;;  tl              1    8[BANK0 ] unsigned char 
  2018 ;;  th              1    7[BANK0 ] unsigned char 
  2019 ;;  crc2            1    6[BANK0 ] unsigned char 
  2020 ;;  crc1            1    5[BANK0 ] unsigned char 
  2021 ;;  crc_g2          1    0        unsigned char 
  2022 ;; Return value:  Size  Location     Type
  2023 ;;                  8    6[COMMON] struct sht_return
  2024 ;; Registers used:
  2025 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2026 ;; Tracked objects:
  2027 ;;		On entry : 0/0
  2028 ;;		On exit  : 0/0
  2029 ;;		Unchanged: 0/0
  2030 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2031 ;;      Params:         8       0       0       0
  2032 ;;      Locals:         0      15       0       0
  2033 ;;      Temps:          0       5       0       0
  2034 ;;      Totals:         8      20       0       0
  2035 ;;Total ram usage:       28 bytes
  2036 ;; Hardware stack levels used:    1
  2037 ;; Hardware stack levels required when called:    2
  2038 ;; This function calls:
  2039 ;;		_I2C_ACK
  2040 ;;		_I2C_Control_Read
  2041 ;;		_I2C_Control_Write
  2042 ;;		_I2C_NAK
  2043 ;;		_I2C_Start_Bit
  2044 ;;		_I2C_Stop_Bit
  2045 ;;		_I2C_restart
  2046 ;;		_RX_I2C_Data
  2047 ;;		_Send_I2C_Data
  2048 ;;		_doCRC
  2049 ;; This function is called by:
  2050 ;;		_main
  2051 ;; This function uses a non-reentrant model
  2052 ;;
  2053                           
  2054                           
  2055                           ;psect for function _GetReading
  2056  0547                     _GetReading:	
  2057                           
  2058                           ;main.c: 280: Sht_rtn local;
  2059                           ;main.c: 281: unsigned char th,tl,hh,hl,crc1,crc2;
  2060                           ;main.c: 282: unsigned char crc_g1 = 0xFF;
  2061                           
  2062                           ;incstack = 0
  2063                           ; Regs used in _GetReading: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2064  0547  30FF               	movlw	255
  2065  0548  0020               	movlb	0	; select bank0
  2066  0549  00A0               	movwf	??_GetReading
  2067  054A  0820               	movf	??_GetReading,w
  2068  054B  00B3               	movwf	GetReading@crc_g1
  2069                           
  2070                           ;main.c: 283: unsigned char crc_g2;
  2071                           ;main.c: 284: I2C_Start_Bit();
  2072  054C  3181  2189  3185   	fcall	_I2C_Start_Bit
  2073                           
  2074                           ;main.c: 285: I2C_Control_Write();
  2075  054F  3181  21A8  3185   	fcall	_I2C_Control_Write
  2076                           
  2077                           ;main.c: 287: if (!SSP1CON2bits.ACKSTAT)
  2078  0552  0024               	movlb	4	; select bank4
  2079  0553  1B16               	btfsc	22,6	;volatile
  2080  0554  2D57               	goto	l1729
  2081                           
  2082                           ;main.c: 288: LATCbits.LATC1 = 0;
  2083  0555  0022               	movlb	2	; select bank2
  2084  0556  108E               	bcf	14,1	;volatile
  2085  0557                     l1729:	
  2086                           
  2087                           ;main.c: 290: Send_I2C_Data(0x2C);
  2088  0557  302C               	movlw	44
  2089  0558  00F0               	movwf	Send_I2C_Data@databyte
  2090  0559  3000               	movlw	0
  2091  055A  00F1               	movwf	Send_I2C_Data@databyte+1
  2092  055B  3181  2159  3185   	fcall	_Send_I2C_Data
  2093                           
  2094                           ;main.c: 291: Send_I2C_Data(0x06);
  2095  055E  3006               	movlw	6
  2096  055F  00F0               	movwf	Send_I2C_Data@databyte
  2097  0560  3000               	movlw	0
  2098  0561  00F1               	movwf	Send_I2C_Data@databyte+1
  2099  0562  3181  2159  3185   	fcall	_Send_I2C_Data
  2100                           
  2101                           ;main.c: 292: I2C_Stop_Bit();
  2102  0565  3181  216E  3185   	fcall	_I2C_Stop_Bit
  2103                           
  2104                           ;main.c: 294: _delay((unsigned long)((15)*(4000000/4000.0)));
  2105  0568  3014               	movlw	20
  2106  0569  0020               	movlb	0	; select bank0
  2107  056A  00A1               	movwf	??_GetReading+1
  2108  056B  3079               	movlw	121
  2109  056C  00A0               	movwf	??_GetReading
  2110  056D                     u2077:	
  2111  056D  0BA0               	decfsz	??_GetReading,f
  2112  056E  2D6D               	goto	u2077
  2113  056F  0BA1               	decfsz	??_GetReading+1,f
  2114  0570  2D6D               	goto	u2077
  2115  0571  3200               	nop2
  2116                           
  2117                           ;main.c: 302: I2C_restart();
  2118  0572  3181  2148  3185   	fcall	_I2C_restart
  2119                           
  2120                           ;main.c: 303: I2C_Control_Read();
  2121  0575  3181  2198  3185   	fcall	_I2C_Control_Read
  2122                           
  2123                           ;main.c: 306: th = RX_I2C_Data();
  2124  0578  3181  2162  3185   	fcall	_RX_I2C_Data
  2125  057B  0020               	movlb	0	; select bank0
  2126  057C  00A0               	movwf	??_GetReading
  2127  057D  0820               	movf	??_GetReading,w
  2128  057E  00A7               	movwf	GetReading@th
  2129                           
  2130                           ;main.c: 307: I2C_ACK();
  2131  057F  3181  2150  3185   	fcall	_I2C_ACK
  2132                           
  2133                           ;main.c: 308: doCRC(0xBE,&crc_g1);
  2134  0582  3033               	movlw	(low (GetReading@crc_g1| 0))& (0+255)
  2135  0583  0020               	movlb	0	; select bank0
  2136  0584  00A0               	movwf	??_GetReading
  2137  0585  0820               	movf	??_GetReading,w
  2138  0586  00F0               	movwf	doCRC@crc
  2139  0587  30BE               	movlw	190
  2140  0588  3182  2259  3185   	fcall	_doCRC
  2141                           
  2142                           ;main.c: 309: tl = RX_I2C_Data();
  2143  058B  3181  2162  3185   	fcall	_RX_I2C_Data
  2144  058E  0020               	movlb	0	; select bank0
  2145  058F  00A0               	movwf	??_GetReading
  2146  0590  0820               	movf	??_GetReading,w
  2147  0591  00A8               	movwf	GetReading@tl
  2148                           
  2149                           ;main.c: 310: I2C_ACK();
  2150  0592  3181  2150  3185   	fcall	_I2C_ACK
  2151                           
  2152                           ;main.c: 311: doCRC(0xEF,&crc_g1);
  2153  0595  3033               	movlw	(low (GetReading@crc_g1| 0))& (0+255)
  2154  0596  0020               	movlb	0	; select bank0
  2155  0597  00A0               	movwf	??_GetReading
  2156  0598  0820               	movf	??_GetReading,w
  2157  0599  00F0               	movwf	doCRC@crc
  2158  059A  30EF               	movlw	239
  2159  059B  3182  2259  3185   	fcall	_doCRC
  2160                           
  2161                           ;main.c: 313: crc1 = RX_I2C_Data();
  2162  059E  3181  2162  3185   	fcall	_RX_I2C_Data
  2163  05A1  0020               	movlb	0	; select bank0
  2164  05A2  00A0               	movwf	??_GetReading
  2165  05A3  0820               	movf	??_GetReading,w
  2166  05A4  00A5               	movwf	GetReading@crc1
  2167                           
  2168                           ;main.c: 314: local.vt = (th<<8) + tl;
  2169  05A5  0828               	movf	GetReading@tl,w
  2170  05A6  00A0               	movwf	??_GetReading
  2171  05A7  01A1               	clrf	??_GetReading+1
  2172  05A8  0827               	movf	GetReading@th,w
  2173  05A9  00A2               	movwf	??_GetReading+2
  2174  05AA  01A3               	clrf	??_GetReading+3
  2175  05AB  0822               	movf	??_GetReading+2,w
  2176  05AC  00A3               	movwf	??_GetReading+3
  2177  05AD  01A2               	clrf	??_GetReading+2
  2178  05AE  0820               	movf	??_GetReading,w
  2179  05AF  0722               	addwf	??_GetReading+2,w
  2180  05B0  00AB               	movwf	GetReading@local
  2181  05B1  0821               	movf	??_GetReading+1,w
  2182  05B2  3D23               	addwfc	??_GetReading+3,w
  2183  05B3  00AC               	movwf	GetReading@local+1
  2184                           
  2185                           ;main.c: 316: local.crc_ok = crc_g1;
  2186  05B4  0833               	movf	GetReading@crc_g1,w
  2187  05B5  00A0               	movwf	??_GetReading
  2188  05B6  0820               	movf	??_GetReading,w
  2189  05B7  00B2               	movwf	GetReading@local+7
  2190                           
  2191                           ;main.c: 320: I2C_ACK();
  2192  05B8  3181  2150  3185   	fcall	_I2C_ACK
  2193                           
  2194                           ;main.c: 321: hh = RX_I2C_Data();
  2195  05BB  3181  2162  3185   	fcall	_RX_I2C_Data
  2196  05BE  0020               	movlb	0	; select bank0
  2197  05BF  00A0               	movwf	??_GetReading
  2198  05C0  0820               	movf	??_GetReading,w
  2199  05C1  00A9               	movwf	GetReading@hh
  2200                           
  2201                           ;main.c: 322: I2C_ACK();
  2202  05C2  3181  2150  3185   	fcall	_I2C_ACK
  2203                           
  2204                           ;main.c: 323: hl = RX_I2C_Data();
  2205  05C5  3181  2162  3185   	fcall	_RX_I2C_Data
  2206  05C8  0020               	movlb	0	; select bank0
  2207  05C9  00A0               	movwf	??_GetReading
  2208  05CA  0820               	movf	??_GetReading,w
  2209  05CB  00AA               	movwf	GetReading@hl
  2210                           
  2211                           ;main.c: 324: I2C_ACK();
  2212  05CC  3181  2150  3185   	fcall	_I2C_ACK
  2213                           
  2214                           ;main.c: 325: crc2 = RX_I2C_Data();
  2215  05CF  3181  2162  3185   	fcall	_RX_I2C_Data
  2216  05D2  0020               	movlb	0	; select bank0
  2217  05D3  00A0               	movwf	??_GetReading
  2218  05D4  0820               	movf	??_GetReading,w
  2219  05D5  00A6               	movwf	GetReading@crc2
  2220                           
  2221                           ;main.c: 326: local.vh = (hh<<8) + hl;
  2222  05D6  082A               	movf	GetReading@hl,w
  2223  05D7  00A0               	movwf	??_GetReading
  2224  05D8  01A1               	clrf	??_GetReading+1
  2225  05D9  0829               	movf	GetReading@hh,w
  2226  05DA  00A2               	movwf	??_GetReading+2
  2227  05DB  01A3               	clrf	??_GetReading+3
  2228  05DC  0822               	movf	??_GetReading+2,w
  2229  05DD  00A3               	movwf	??_GetReading+3
  2230  05DE  01A2               	clrf	??_GetReading+2
  2231  05DF  0820               	movf	??_GetReading,w
  2232  05E0  0722               	addwf	??_GetReading+2,w
  2233  05E1  00AD               	movwf	GetReading@local+2
  2234  05E2  0821               	movf	??_GetReading+1,w
  2235  05E3  3D23               	addwfc	??_GetReading+3,w
  2236  05E4  00AE               	movwf	GetReading@local+3
  2237                           
  2238                           ;main.c: 328: I2C_NAK();
  2239  05E5  3181  217B  3185   	fcall	_I2C_NAK
  2240                           
  2241                           ;main.c: 330: I2C_Stop_Bit();
  2242  05E8  3181  216E  3185   	fcall	_I2C_Stop_Bit
  2243                           
  2244                           ;main.c: 332: return local;
  2245  05EB  302B               	movlw	low GetReading@local
  2246  05EC  0086               	movwf	6
  2247  05ED  3000               	movlw	high GetReading@local
  2248  05EE  0087               	movwf	7
  2249  05EF  3076               	movlw	low ?_GetReading
  2250  05F0  0084               	movwf	4
  2251  05F1  3000               	movlw	high ?_GetReading
  2252  05F2  0085               	movwf	5
  2253  05F3  3008               	movlw	8
  2254  05F4  0020               	movlb	0	; select bank0
  2255  05F5  00A0               	movwf	??_GetReading
  2256  05F6                     u1990:	
  2257  05F6  0016               	moviw fsr1++
  2258  05F7  001A               	movwi fsr0++
  2259  05F8  0BA0               	decfsz	??_GetReading,f
  2260  05F9  2DF6               	goto	u1990
  2261  05FA  0008               	return
  2262  05FB                     __end_of_GetReading:	
  2263                           
  2264                           	psect	text10
  2265  0259                     __ptext10:	
  2266 ;; *************** function _doCRC *****************
  2267 ;; Defined at:
  2268 ;;		line 142 in file "main.c"
  2269 ;; Parameters:    Size  Location     Type
  2270 ;;  ch              1    wreg     unsigned char 
  2271 ;;  crc             1    0[COMMON] PTR unsigned char 
  2272 ;;		 -> GetReading@crc_g1(1), 
  2273 ;; Auto vars:     Size  Location     Type
  2274 ;;  ch              1    2[COMMON] unsigned char 
  2275 ;;  ix              2    4[COMMON] int 
  2276 ;;  b7              1    3[COMMON] unsigned char 
  2277 ;; Return value:  Size  Location     Type
  2278 ;;		None               void
  2279 ;; Registers used:
  2280 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  2281 ;; Tracked objects:
  2282 ;;		On entry : 0/0
  2283 ;;		On exit  : 0/0
  2284 ;;		Unchanged: 0/0
  2285 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2286 ;;      Params:         1       0       0       0
  2287 ;;      Locals:         4       0       0       0
  2288 ;;      Temps:          1       0       0       0
  2289 ;;      Totals:         6       0       0       0
  2290 ;;Total ram usage:        6 bytes
  2291 ;; Hardware stack levels used:    1
  2292 ;; This function calls:
  2293 ;;		Nothing
  2294 ;; This function is called by:
  2295 ;;		_GetReading
  2296 ;; This function uses a non-reentrant model
  2297 ;;
  2298                           
  2299                           
  2300                           ;psect for function _doCRC
  2301  0259                     _doCRC:	
  2302                           
  2303                           ;incstack = 0
  2304                           ; Regs used in _doCRC: [wreg+fsr1l+fsr1h+status,2+status,0]
  2305                           ;doCRC@ch stored from wreg
  2306  0259  00F2               	movwf	doCRC@ch
  2307                           
  2308                           ;main.c: 144: int ix;
  2309                           ;main.c: 145: unsigned char b7;
  2310                           ;main.c: 147: for (ix = 0; ix < 8; ix++) {
  2311  025A  01F4               	clrf	doCRC@ix
  2312  025B  01F5               	clrf	doCRC@ix+1
  2313  025C                     L1:	
  2314  025C  0875               	movf	doCRC@ix+1,w
  2315  025D  3A80               	xorlw	128
  2316  025E  00F1               	movwf	??_doCRC
  2317  025F  3080               	movlw	128
  2318  0260  0271               	subwf	??_doCRC,w
  2319  0261  3008               	movlw	8
  2320  0262  1903               	btfsc	3,2
  2321  0263  0274               	subwf	doCRC@ix,w
  2322  0264  1803               	btfsc	3,0
  2323  0265  0008               	return
  2324                           
  2325                           ;main.c: 148: b7 = ch ^ *crc;
  2326  0266  0870               	movf	doCRC@crc,w
  2327  0267  0086               	movwf	6
  2328  0268  0187               	clrf	7
  2329  0269  0801               	movf	1,w
  2330  026A  0672               	xorwf	doCRC@ch,w
  2331  026B  00F1               	movwf	??_doCRC
  2332  026C  0871               	movf	??_doCRC,w
  2333  026D  00F3               	movwf	doCRC@b7
  2334                           
  2335                           ;main.c: 149: *crc <<= 1;
  2336  026E  0870               	movf	doCRC@crc,w
  2337  026F  0086               	movwf	6
  2338  0270  0187               	clrf	7
  2339  0271  1003               	clrc
  2340  0272  0D81               	rlf	1,f
  2341                           
  2342                           ;main.c: 150: ch <<= 1;
  2343  0273  1003               	clrc
  2344  0274  0DF2               	rlf	doCRC@ch,f
  2345                           
  2346                           ;main.c: 151: if (b7 & 0x80)
  2347  0275  1FF3               	btfss	doCRC@b7,7
  2348  0276  2A7E               	goto	l1399
  2349                           
  2350                           ;main.c: 152: *crc ^= 0x31;;
  2351  0277  3031               	movlw	49
  2352  0278  00F1               	movwf	??_doCRC
  2353  0279  0870               	movf	doCRC@crc,w
  2354  027A  0086               	movwf	6
  2355  027B  0187               	clrf	7
  2356  027C  0871               	movf	??_doCRC,w
  2357  027D  0681               	xorwf	1,f
  2358  027E                     l1399:	
  2359  027E  3001               	movlw	1
  2360  027F  07F4               	addwf	doCRC@ix,f
  2361  0280  3000               	movlw	0
  2362  0281  3DF5               	addwfc	doCRC@ix+1,f
  2363  0282  2A5C               	goto	L1
  2364  0283                     __end_of_doCRC:	
  2365                           ;main.c: 153: }
  2366                           ;main.c: 154: return;
  2367                           
  2368                           
  2369                           	psect	text11
  2370  0159                     __ptext11:	
  2371 ;; *************** function _Send_I2C_Data *****************
  2372 ;; Defined at:
  2373 ;;		line 167 in file "main.c"
  2374 ;; Parameters:    Size  Location     Type
  2375 ;;  databyte        2    0[COMMON] unsigned int 
  2376 ;; Auto vars:     Size  Location     Type
  2377 ;;		None
  2378 ;; Return value:  Size  Location     Type
  2379 ;;		None               void
  2380 ;; Registers used:
  2381 ;;		wreg
  2382 ;; Tracked objects:
  2383 ;;		On entry : 0/0
  2384 ;;		On exit  : 0/0
  2385 ;;		Unchanged: 0/0
  2386 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2387 ;;      Params:         2       0       0       0
  2388 ;;      Locals:         0       0       0       0
  2389 ;;      Temps:          0       0       0       0
  2390 ;;      Totals:         2       0       0       0
  2391 ;;Total ram usage:        2 bytes
  2392 ;; Hardware stack levels used:    1
  2393 ;; This function calls:
  2394 ;;		Nothing
  2395 ;; This function is called by:
  2396 ;;		_GetReading
  2397 ;; This function uses a non-reentrant model
  2398 ;;
  2399                           
  2400                           
  2401                           ;psect for function _Send_I2C_Data
  2402  0159                     _Send_I2C_Data:	
  2403                           
  2404                           ;main.c: 169: PIR1bits.SSP1IF=0;
  2405                           
  2406                           ;incstack = 0
  2407                           ; Regs used in _Send_I2C_Data: [wreg]
  2408  0159  0020               	movlb	0	; select bank0
  2409  015A  1191               	bcf	17,3	;volatile
  2410                           
  2411                           ;main.c: 170: SSPBUF = databyte;
  2412  015B  0870               	movf	Send_I2C_Data@databyte,w
  2413  015C  0024               	movlb	4	; select bank4
  2414  015D  0091               	movwf	17	;volatile
  2415  015E                     l113:	
  2416                           ;main.c: 171: while(!PIR1bits.SSP1IF);
  2417                           
  2418  015E  0020               	movlb	0	; select bank0
  2419  015F  1991               	btfsc	17,3	;volatile
  2420  0160  0008               	return
  2421  0161  295E               	goto	l113
  2422  0162                     __end_of_Send_I2C_Data:	
  2423                           
  2424                           	psect	text12
  2425  0162                     __ptext12:	
  2426 ;; *************** function _RX_I2C_Data *****************
  2427 ;; Defined at:
  2428 ;;		line 174 in file "main.c"
  2429 ;; Parameters:    Size  Location     Type
  2430 ;;		None
  2431 ;; Auto vars:     Size  Location     Type
  2432 ;;  byte            1    1[COMMON] unsigned char 
  2433 ;; Return value:  Size  Location     Type
  2434 ;;                  1    wreg      unsigned char 
  2435 ;; Registers used:
  2436 ;;		wreg
  2437 ;; Tracked objects:
  2438 ;;		On entry : 0/0
  2439 ;;		On exit  : 0/0
  2440 ;;		Unchanged: 0/0
  2441 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2442 ;;      Params:         0       0       0       0
  2443 ;;      Locals:         1       0       0       0
  2444 ;;      Temps:          1       0       0       0
  2445 ;;      Totals:         2       0       0       0
  2446 ;;Total ram usage:        2 bytes
  2447 ;; Hardware stack levels used:    1
  2448 ;; This function calls:
  2449 ;;		Nothing
  2450 ;; This function is called by:
  2451 ;;		_GetReading
  2452 ;; This function uses a non-reentrant model
  2453 ;;
  2454                           
  2455                           
  2456                           ;psect for function _RX_I2C_Data
  2457  0162                     _RX_I2C_Data:	
  2458                           
  2459                           ;main.c: 176: char byte;
  2460                           ;main.c: 177: RCEN = 1;
  2461                           
  2462                           ;incstack = 0
  2463                           ; Regs used in _RX_I2C_Data: [wreg]
  2464  0162  0024               	movlb	4	; select bank4
  2465  0163  1596               	bsf	22,3	;volatile
  2466  0164                     l119:	
  2467                           ;main.c: 178: while( RCEN ) continue;
  2468                           
  2469  0164  1996               	btfsc	22,3	;volatile
  2470  0165  2964               	goto	l119
  2471  0166                     l122:	
  2472                           ;main.c: 179: while( !BF ) continue;
  2473                           
  2474  0166  1C14               	btfss	20,0	;volatile
  2475  0167  2966               	goto	l122
  2476                           
  2477                           ;main.c: 180: byte = SSPBUF;
  2478  0168  0811               	movf	17,w	;volatile
  2479  0169  00F0               	movwf	??_RX_I2C_Data
  2480  016A  0870               	movf	??_RX_I2C_Data,w
  2481  016B  00F1               	movwf	RX_I2C_Data@byte
  2482                           
  2483                           ;main.c: 181: return byte;
  2484  016C  0871               	movf	RX_I2C_Data@byte,w
  2485  016D  0008               	return
  2486  016E                     __end_of_RX_I2C_Data:	
  2487                           
  2488                           	psect	text13
  2489  0148                     __ptext13:	
  2490 ;; *************** function _I2C_restart *****************
  2491 ;; Defined at:
  2492 ;;		line 235 in file "main.c"
  2493 ;; Parameters:    Size  Location     Type
  2494 ;;		None
  2495 ;; Auto vars:     Size  Location     Type
  2496 ;;		None
  2497 ;; Return value:  Size  Location     Type
  2498 ;;		None               void
  2499 ;; Registers used:
  2500 ;;		wreg, status,2, status,0, pclath, cstack
  2501 ;; Tracked objects:
  2502 ;;		On entry : 0/0
  2503 ;;		On exit  : 0/0
  2504 ;;		Unchanged: 0/0
  2505 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2506 ;;      Params:         0       0       0       0
  2507 ;;      Locals:         0       0       0       0
  2508 ;;      Temps:          0       0       0       0
  2509 ;;      Totals:         0       0       0       0
  2510 ;;Total ram usage:        0 bytes
  2511 ;; Hardware stack levels used:    1
  2512 ;; Hardware stack levels required when called:    1
  2513 ;; This function calls:
  2514 ;;		_I2C_check_idle
  2515 ;; This function is called by:
  2516 ;;		_GetReading
  2517 ;; This function uses a non-reentrant model
  2518 ;;
  2519                           
  2520                           
  2521                           ;psect for function _I2C_restart
  2522  0148                     _I2C_restart:	
  2523                           
  2524                           ;main.c: 237: I2C_check_idle();
  2525                           
  2526                           ;incstack = 0
  2527                           ; Regs used in _I2C_restart: [wreg+status,2+status,0+pclath+cstack]
  2528  0148  3181  21B8  3181   	fcall	_I2C_check_idle
  2529                           
  2530                           ;main.c: 238: RSEN = 1;
  2531  014B  0024               	movlb	4	; select bank4
  2532  014C  1496               	bsf	22,1	;volatile
  2533  014D                     l151:	
  2534                           ;main.c: 239: while( RSEN ) continue;
  2535                           
  2536  014D  1C96               	btfss	22,1	;volatile
  2537  014E  0008               	return
  2538  014F  294D               	goto	l151
  2539  0150                     __end_of_I2C_restart:	
  2540                           
  2541                           	psect	text14
  2542  01B8                     __ptext14:	
  2543 ;; *************** function _I2C_check_idle *****************
  2544 ;; Defined at:
  2545 ;;		line 221 in file "main.c"
  2546 ;; Parameters:    Size  Location     Type
  2547 ;;		None
  2548 ;; Auto vars:     Size  Location     Type
  2549 ;;  byte2           1    2[COMMON] unsigned char 
  2550 ;;  byte1           1    1[COMMON] unsigned char 
  2551 ;; Return value:  Size  Location     Type
  2552 ;;		None               void
  2553 ;; Registers used:
  2554 ;;		wreg, status,2, status,0
  2555 ;; Tracked objects:
  2556 ;;		On entry : 0/0
  2557 ;;		On exit  : 0/0
  2558 ;;		Unchanged: 0/0
  2559 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2560 ;;      Params:         0       0       0       0
  2561 ;;      Locals:         2       0       0       0
  2562 ;;      Temps:          1       0       0       0
  2563 ;;      Totals:         3       0       0       0
  2564 ;;Total ram usage:        3 bytes
  2565 ;; Hardware stack levels used:    1
  2566 ;; This function calls:
  2567 ;;		Nothing
  2568 ;; This function is called by:
  2569 ;;		_I2C_restart
  2570 ;; This function uses a non-reentrant model
  2571 ;;
  2572                           
  2573                           
  2574                           ;psect for function _I2C_check_idle
  2575  01B8                     _I2C_check_idle:	
  2576  01B8                     l146:	
  2577                           ;incstack = 0
  2578                           ; Regs used in _I2C_check_idle: [wreg+status,2+status,0]
  2579                           ;main.c: 223: unsigned char byte1;
  2580                           ;main.c: 224: unsigned char byte2;
  2581                           ;main.c: 226: do
  2582                           
  2583                           
  2584                           ;main.c: 227: {
  2585                           ;main.c: 228: byte1 = SSPSTAT & 0x04;
  2586  01B8  0024               	movlb	4	; select bank4
  2587  01B9  0814               	movf	20,w	;volatile
  2588  01BA  3904               	andlw	4
  2589  01BB  00F0               	movwf	??_I2C_check_idle
  2590  01BC  0870               	movf	??_I2C_check_idle,w
  2591  01BD  00F1               	movwf	I2C_check_idle@byte1
  2592                           
  2593                           ;main.c: 229: byte2 = SSPCON2 & 0x1F;
  2594  01BE  0816               	movf	22,w	;volatile
  2595  01BF  391F               	andlw	31
  2596  01C0  00F0               	movwf	??_I2C_check_idle
  2597  01C1  0870               	movf	??_I2C_check_idle,w
  2598  01C2  00F2               	movwf	I2C_check_idle@byte2
  2599                           
  2600                           ;main.c: 230: } while( byte1 | byte2 );
  2601  01C3  0871               	movf	I2C_check_idle@byte1,w
  2602  01C4  0472               	iorwf	I2C_check_idle@byte2,w
  2603  01C5  1903               	btfsc	3,2
  2604  01C6  0008               	return
  2605  01C7  29B8               	goto	l146
  2606  01C8                     __end_of_I2C_check_idle:	
  2607                           
  2608                           	psect	text15
  2609  016E                     __ptext15:	
  2610 ;; *************** function _I2C_Stop_Bit *****************
  2611 ;; Defined at:
  2612 ;;		line 242 in file "main.c"
  2613 ;; Parameters:    Size  Location     Type
  2614 ;;		None
  2615 ;; Auto vars:     Size  Location     Type
  2616 ;;		None
  2617 ;; Return value:  Size  Location     Type
  2618 ;;		None               void
  2619 ;; Registers used:
  2620 ;;		wreg
  2621 ;; Tracked objects:
  2622 ;;		On entry : 0/0
  2623 ;;		On exit  : 0/0
  2624 ;;		Unchanged: 0/0
  2625 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2626 ;;      Params:         0       0       0       0
  2627 ;;      Locals:         0       0       0       0
  2628 ;;      Temps:          0       0       0       0
  2629 ;;      Totals:         0       0       0       0
  2630 ;;Total ram usage:        0 bytes
  2631 ;; Hardware stack levels used:    1
  2632 ;; This function calls:
  2633 ;;		Nothing
  2634 ;; This function is called by:
  2635 ;;		_GetReading
  2636 ;; This function uses a non-reentrant model
  2637 ;;
  2638                           
  2639                           
  2640                           ;psect for function _I2C_Stop_Bit
  2641  016E                     _I2C_Stop_Bit:	
  2642                           
  2643                           ;main.c: 244: PIR1bits.SSP1IF=0;
  2644                           
  2645                           ;incstack = 0
  2646                           ; Regs used in _I2C_Stop_Bit: [wreg]
  2647  016E  0020               	movlb	0	; select bank0
  2648  016F  1191               	bcf	17,3	;volatile
  2649                           
  2650                           ;main.c: 245: SSPCON2bits.PEN=1;
  2651  0170  0024               	movlb	4	; select bank4
  2652  0171  1516               	bsf	22,2	;volatile
  2653  0172                     l1445:	
  2654                           ;main.c: 246: while(!PIR1bits.SSP1IF)
  2655                           
  2656  0172  0020               	movlb	0	; select bank0
  2657  0173  1991               	btfsc	17,3	;volatile
  2658  0174  0008               	return
  2659                           
  2660                           ;main.c: 247: {
  2661                           ;main.c: 248: i = 1;
  2662  0175  3001               	movlw	1
  2663  0176  0020               	movlb	0	; select bank0
  2664  0177  00DD               	movwf	_i
  2665  0178  3000               	movlw	0
  2666  0179  00DE               	movwf	_i+1
  2667  017A  2972               	goto	l1445
  2668  017B                     __end_of_I2C_Stop_Bit:	
  2669                           
  2670                           	psect	text16
  2671  0189                     __ptext16:	
  2672 ;; *************** function _I2C_Start_Bit *****************
  2673 ;; Defined at:
  2674 ;;		line 210 in file "main.c"
  2675 ;; Parameters:    Size  Location     Type
  2676 ;;		None
  2677 ;; Auto vars:     Size  Location     Type
  2678 ;;		None
  2679 ;; Return value:  Size  Location     Type
  2680 ;;		None               void
  2681 ;; Registers used:
  2682 ;;		wreg
  2683 ;; Tracked objects:
  2684 ;;		On entry : 0/0
  2685 ;;		On exit  : 0/0
  2686 ;;		Unchanged: 0/0
  2687 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2688 ;;      Params:         0       0       0       0
  2689 ;;      Locals:         0       0       0       0
  2690 ;;      Temps:          0       0       0       0
  2691 ;;      Totals:         0       0       0       0
  2692 ;;Total ram usage:        0 bytes
  2693 ;; Hardware stack levels used:    1
  2694 ;; This function calls:
  2695 ;;		Nothing
  2696 ;; This function is called by:
  2697 ;;		_GetReading
  2698 ;; This function uses a non-reentrant model
  2699 ;;
  2700                           
  2701                           
  2702                           ;psect for function _I2C_Start_Bit
  2703  0189                     _I2C_Start_Bit:	
  2704                           
  2705                           ;main.c: 212: PIR1bits.SSP1IF=0;
  2706                           
  2707                           ;incstack = 0
  2708                           ; Regs used in _I2C_Start_Bit: [wreg]
  2709  0189  0020               	movlb	0	; select bank0
  2710  018A  1191               	bcf	17,3	;volatile
  2711                           
  2712                           ;main.c: 213: SSPCON2bits.SEN=1;
  2713  018B  0024               	movlb	4	; select bank4
  2714  018C  1416               	bsf	22,0	;volatile
  2715  018D                     l1435:	
  2716                           ;main.c: 214: while(!PIR1bits.SSP1IF)
  2717                           
  2718  018D  0020               	movlb	0	; select bank0
  2719  018E  1991               	btfsc	17,3	;volatile
  2720  018F  2996               	goto	l142
  2721                           
  2722                           ;main.c: 215: {
  2723                           ;main.c: 216: i = 1;
  2724  0190  3001               	movlw	1
  2725  0191  0020               	movlb	0	; select bank0
  2726  0192  00DD               	movwf	_i
  2727  0193  3000               	movlw	0
  2728  0194  00DE               	movwf	_i+1
  2729  0195  298D               	goto	l1435
  2730  0196                     l142:	
  2731                           
  2732                           ;main.c: 217: }
  2733                           ;main.c: 218: PIR1bits.SSP1IF=0;
  2734  0196  1191               	bcf	17,3	;volatile
  2735  0197  0008               	return
  2736  0198                     __end_of_I2C_Start_Bit:	
  2737                           
  2738                           	psect	text17
  2739  017B                     __ptext17:	
  2740 ;; *************** function _I2C_NAK *****************
  2741 ;; Defined at:
  2742 ;;		line 253 in file "main.c"
  2743 ;; Parameters:    Size  Location     Type
  2744 ;;		None
  2745 ;; Auto vars:     Size  Location     Type
  2746 ;;		None
  2747 ;; Return value:  Size  Location     Type
  2748 ;;		None               void
  2749 ;; Registers used:
  2750 ;;		wreg
  2751 ;; Tracked objects:
  2752 ;;		On entry : 0/0
  2753 ;;		On exit  : 0/0
  2754 ;;		Unchanged: 0/0
  2755 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2756 ;;      Params:         0       0       0       0
  2757 ;;      Locals:         0       0       0       0
  2758 ;;      Temps:          0       0       0       0
  2759 ;;      Totals:         0       0       0       0
  2760 ;;Total ram usage:        0 bytes
  2761 ;; Hardware stack levels used:    1
  2762 ;; This function calls:
  2763 ;;		Nothing
  2764 ;; This function is called by:
  2765 ;;		_GetReading
  2766 ;; This function uses a non-reentrant model
  2767 ;;
  2768                           
  2769                           
  2770                           ;psect for function _I2C_NAK
  2771  017B                     _I2C_NAK:	
  2772                           
  2773                           ;main.c: 255: PIR1bits.SSP1IF=0;
  2774                           
  2775                           ;incstack = 0
  2776                           ; Regs used in _I2C_NAK: [wreg]
  2777  017B  0020               	movlb	0	; select bank0
  2778  017C  1191               	bcf	17,3	;volatile
  2779                           
  2780                           ;main.c: 256: SSP1CON2bits.ACKDT=1;
  2781  017D  0024               	movlb	4	; select bank4
  2782  017E  1696               	bsf	22,5	;volatile
  2783                           
  2784                           ;main.c: 257: SSP1CON2bits.ACKEN=1;
  2785  017F  1616               	bsf	22,4	;volatile
  2786  0180                     l1451:	
  2787                           ;main.c: 258: while(!PIR1bits.SSP1IF)
  2788                           
  2789  0180  0020               	movlb	0	; select bank0
  2790  0181  1991               	btfsc	17,3	;volatile
  2791  0182  0008               	return
  2792                           
  2793                           ;main.c: 259: {
  2794                           ;main.c: 260: i = 1;
  2795  0183  3001               	movlw	1
  2796  0184  0020               	movlb	0	; select bank0
  2797  0185  00DD               	movwf	_i
  2798  0186  3000               	movlw	0
  2799  0187  00DE               	movwf	_i+1
  2800  0188  2980               	goto	l1451
  2801  0189                     __end_of_I2C_NAK:	
  2802                           
  2803                           	psect	text18
  2804  01A8                     __ptext18:	
  2805 ;; *************** function _I2C_Control_Write *****************
  2806 ;; Defined at:
  2807 ;;		line 184 in file "main.c"
  2808 ;; Parameters:    Size  Location     Type
  2809 ;;		None
  2810 ;; Auto vars:     Size  Location     Type
  2811 ;;		None
  2812 ;; Return value:  Size  Location     Type
  2813 ;;		None               void
  2814 ;; Registers used:
  2815 ;;		wreg
  2816 ;; Tracked objects:
  2817 ;;		On entry : 0/0
  2818 ;;		On exit  : 0/0
  2819 ;;		Unchanged: 0/0
  2820 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2821 ;;      Params:         0       0       0       0
  2822 ;;      Locals:         0       0       0       0
  2823 ;;      Temps:          0       0       0       0
  2824 ;;      Totals:         0       0       0       0
  2825 ;;Total ram usage:        0 bytes
  2826 ;; Hardware stack levels used:    1
  2827 ;; This function calls:
  2828 ;;		Nothing
  2829 ;; This function is called by:
  2830 ;;		_GetReading
  2831 ;; This function uses a non-reentrant model
  2832 ;;
  2833                           
  2834                           
  2835                           ;psect for function _I2C_Control_Write
  2836  01A8                     _I2C_Control_Write:	
  2837                           
  2838                           ;main.c: 186: PIR1bits.SSP1IF=0;
  2839                           
  2840                           ;incstack = 0
  2841                           ; Regs used in _I2C_Control_Write: [wreg]
  2842  01A8  0020               	movlb	0	; select bank0
  2843  01A9  1191               	bcf	17,3	;volatile
  2844                           
  2845                           ;main.c: 187: SSP1BUF = 0x44 << 1;
  2846  01AA  3088               	movlw	136
  2847  01AB  0024               	movlb	4	; select bank4
  2848  01AC  0091               	movwf	17	;volatile
  2849  01AD                     l1421:	
  2850                           ;main.c: 188: while(!PIR1bits.SSP1IF)
  2851                           
  2852  01AD  0020               	movlb	0	; select bank0
  2853  01AE  1991               	btfsc	17,3	;volatile
  2854  01AF  29B6               	goto	l130
  2855                           
  2856                           ;main.c: 189: {
  2857                           ;main.c: 190: i = 1;
  2858  01B0  3001               	movlw	1
  2859  01B1  0020               	movlb	0	; select bank0
  2860  01B2  00DD               	movwf	_i
  2861  01B3  3000               	movlw	0
  2862  01B4  00DE               	movwf	_i+1
  2863  01B5  29AD               	goto	l1421
  2864  01B6                     l130:	
  2865                           
  2866                           ;main.c: 192: }
  2867                           ;main.c: 193: PIR1bits.SSP1IF=0;
  2868  01B6  1191               	bcf	17,3	;volatile
  2869  01B7  0008               	return
  2870  01B8                     __end_of_I2C_Control_Write:	
  2871                           
  2872                           	psect	text19
  2873  0198                     __ptext19:	
  2874 ;; *************** function _I2C_Control_Read *****************
  2875 ;; Defined at:
  2876 ;;		line 197 in file "main.c"
  2877 ;; Parameters:    Size  Location     Type
  2878 ;;		None
  2879 ;; Auto vars:     Size  Location     Type
  2880 ;;		None
  2881 ;; Return value:  Size  Location     Type
  2882 ;;		None               void
  2883 ;; Registers used:
  2884 ;;		wreg
  2885 ;; Tracked objects:
  2886 ;;		On entry : 0/0
  2887 ;;		On exit  : 0/0
  2888 ;;		Unchanged: 0/0
  2889 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2890 ;;      Params:         0       0       0       0
  2891 ;;      Locals:         0       0       0       0
  2892 ;;      Temps:          0       0       0       0
  2893 ;;      Totals:         0       0       0       0
  2894 ;;Total ram usage:        0 bytes
  2895 ;; Hardware stack levels used:    1
  2896 ;; This function calls:
  2897 ;;		Nothing
  2898 ;; This function is called by:
  2899 ;;		_GetReading
  2900 ;; This function uses a non-reentrant model
  2901 ;;
  2902                           
  2903                           
  2904                           ;psect for function _I2C_Control_Read
  2905  0198                     _I2C_Control_Read:	
  2906                           
  2907                           ;main.c: 199: PIR1bits.SSP1IF=0;
  2908                           
  2909                           ;incstack = 0
  2910                           ; Regs used in _I2C_Control_Read: [wreg]
  2911  0198  0020               	movlb	0	; select bank0
  2912  0199  1191               	bcf	17,3	;volatile
  2913                           
  2914                           ;main.c: 200: SSP1BUF = (0x44 << 1) + 1;
  2915  019A  3089               	movlw	137
  2916  019B  0024               	movlb	4	; select bank4
  2917  019C  0091               	movwf	17	;volatile
  2918  019D                     l1429:	
  2919                           ;main.c: 201: while(!PIR1bits.SSP1IF){
  2920                           
  2921  019D  0020               	movlb	0	; select bank0
  2922  019E  1991               	btfsc	17,3	;volatile
  2923  019F  29A6               	goto	l136
  2924                           
  2925                           ;main.c: 202: i = 1;
  2926  01A0  3001               	movlw	1
  2927  01A1  0020               	movlb	0	; select bank0
  2928  01A2  00DD               	movwf	_i
  2929  01A3  3000               	movlw	0
  2930  01A4  00DE               	movwf	_i+1
  2931  01A5  299D               	goto	l1429
  2932  01A6                     l136:	
  2933                           
  2934                           ;main.c: 203: }
  2935                           ;main.c: 207: PIR1bits.SSP1IF=0;
  2936  01A6  1191               	bcf	17,3	;volatile
  2937  01A7  0008               	return
  2938  01A8                     __end_of_I2C_Control_Read:	
  2939                           
  2940                           	psect	text20
  2941  0150                     __ptext20:	
  2942 ;; *************** function _I2C_ACK *****************
  2943 ;; Defined at:
  2944 ;;		line 159 in file "main.c"
  2945 ;; Parameters:    Size  Location     Type
  2946 ;;		None
  2947 ;; Auto vars:     Size  Location     Type
  2948 ;;		None
  2949 ;; Return value:  Size  Location     Type
  2950 ;;		None               void
  2951 ;; Registers used:
  2952 ;;		None
  2953 ;; Tracked objects:
  2954 ;;		On entry : 0/0
  2955 ;;		On exit  : 0/0
  2956 ;;		Unchanged: 0/0
  2957 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2958 ;;      Params:         0       0       0       0
  2959 ;;      Locals:         0       0       0       0
  2960 ;;      Temps:          0       0       0       0
  2961 ;;      Totals:         0       0       0       0
  2962 ;;Total ram usage:        0 bytes
  2963 ;; Hardware stack levels used:    1
  2964 ;; This function calls:
  2965 ;;		Nothing
  2966 ;; This function is called by:
  2967 ;;		_GetReading
  2968 ;; This function uses a non-reentrant model
  2969 ;;
  2970                           
  2971                           
  2972                           ;psect for function _I2C_ACK
  2973  0150                     _I2C_ACK:	
  2974                           
  2975                           ;main.c: 161: PIR1bits.SSP1IF=0;
  2976                           
  2977                           ;incstack = 0
  2978                           ; Regs used in _I2C_ACK: []
  2979  0150  0020               	movlb	0	; select bank0
  2980  0151  1191               	bcf	17,3	;volatile
  2981                           
  2982                           ;main.c: 162: SSP1CON2bits.ACKDT=0;
  2983  0152  0024               	movlb	4	; select bank4
  2984  0153  1296               	bcf	22,5	;volatile
  2985                           
  2986                           ;main.c: 163: SSP1CON2bits.ACKEN=1;
  2987  0154  1616               	bsf	22,4	;volatile
  2988  0155                     l107:	
  2989                           ;main.c: 164: while(!PIR1bits.SSP1IF);
  2990                           
  2991  0155  0020               	movlb	0	; select bank0
  2992  0156  1991               	btfsc	17,3	;volatile
  2993  0157  0008               	return
  2994  0158  2955               	goto	l107
  2995  0159                     __end_of_I2C_ACK:	
  2996                           
  2997                           	psect	text21
  2998  03A9                     __ptext21:	
  2999 ;; *************** function _CalcHumid *****************
  3000 ;; Defined at:
  3001 ;;		line 271 in file "main.c"
  3002 ;; Parameters:    Size  Location     Type
  3003 ;;  b1              1    wreg     unsigned char 
  3004 ;;  b2              1   23[BANK0 ] unsigned char 
  3005 ;; Auto vars:     Size  Location     Type
  3006 ;;  b1              1   33[BANK0 ] unsigned char 
  3007 ;;  ans             3   34[BANK0 ] float 
  3008 ;;  rcv_val         3   30[BANK0 ] float 
  3009 ;; Return value:  Size  Location     Type
  3010 ;;                  2   23[BANK0 ] int 
  3011 ;; Registers used:
  3012 ;;		wreg, status,2, status,0, pclath, cstack
  3013 ;; Tracked objects:
  3014 ;;		On entry : 0/0
  3015 ;;		On exit  : 0/0
  3016 ;;		Unchanged: 0/0
  3017 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3018 ;;      Params:         0       2       0       0
  3019 ;;      Locals:         0       7       0       0
  3020 ;;      Temps:          0       5       0       0
  3021 ;;      Totals:         0      14       0       0
  3022 ;;Total ram usage:       14 bytes
  3023 ;; Hardware stack levels used:    1
  3024 ;; Hardware stack levels required when called:    2
  3025 ;; This function calls:
  3026 ;;		___awtoft
  3027 ;;		___ftadd
  3028 ;;		___ftmul
  3029 ;;		___fttol
  3030 ;; This function is called by:
  3031 ;;		_main
  3032 ;; This function uses a non-reentrant model
  3033 ;;
  3034                           
  3035                           
  3036                           ;psect for function _CalcHumid
  3037  03A9                     _CalcHumid:	
  3038                           
  3039                           ;incstack = 0
  3040                           ; Regs used in _CalcHumid: [wreg+status,2+status,0+pclath+cstack]
  3041                           ;CalcHumid@b1 stored from wreg
  3042  03A9  0020               	movlb	0	; select bank0
  3043  03AA  00C1               	movwf	CalcHumid@b1
  3044                           
  3045                           ;main.c: 272: float rcv_val = (b1 << 8) + b2;
  3046  03AB  0837               	movf	CalcHumid@b2,w
  3047  03AC  00B9               	movwf	??_CalcHumid
  3048  03AD  01BA               	clrf	??_CalcHumid+1
  3049  03AE  0841               	movf	CalcHumid@b1,w
  3050  03AF  00BB               	movwf	??_CalcHumid+2
  3051  03B0  01BC               	clrf	??_CalcHumid+3
  3052  03B1  083B               	movf	??_CalcHumid+2,w
  3053  03B2  00BC               	movwf	??_CalcHumid+3
  3054  03B3  01BB               	clrf	??_CalcHumid+2
  3055  03B4  0839               	movf	??_CalcHumid,w
  3056  03B5  073B               	addwf	??_CalcHumid+2,w
  3057  03B6  00F8               	movwf	___awtoft@c
  3058  03B7  083A               	movf	??_CalcHumid+1,w
  3059  03B8  3D3C               	addwfc	??_CalcHumid+3,w
  3060  03B9  00F9               	movwf	___awtoft@c+1
  3061  03BA  3181  21F5  3183   	fcall	___awtoft
  3062  03BD  0878               	movf	?___awtoft,w
  3063  03BE  0020               	movlb	0	; select bank0
  3064  03BF  00BE               	movwf	CalcHumid@rcv_val
  3065  03C0  0879               	movf	?___awtoft+1,w
  3066  03C1  00BF               	movwf	CalcHumid@rcv_val+1
  3067  03C2  087A               	movf	?___awtoft+2,w
  3068  03C3  00C0               	movwf	CalcHumid@rcv_val+2
  3069                           
  3070                           ;main.c: 273: float ans = ((0.002670329 * rcv_val) - 45);
  3071  03C4  3000               	movlw	0
  3072  03C5  00AA               	movwf	___ftadd@f1
  3073  03C6  3034               	movlw	52
  3074  03C7  00AB               	movwf	___ftadd@f1+1
  3075  03C8  30C2               	movlw	194
  3076  03C9  00AC               	movwf	___ftadd@f1+2
  3077  03CA  3001               	movlw	1
  3078  03CB  00F8               	movwf	___ftmul@f1
  3079  03CC  302F               	movlw	47
  3080  03CD  00F9               	movwf	___ftmul@f1+1
  3081  03CE  303B               	movlw	59
  3082  03CF  00FA               	movwf	___ftmul@f1+2
  3083  03D0  083E               	movf	CalcHumid@rcv_val,w
  3084  03D1  00FB               	movwf	___ftmul@f2
  3085  03D2  083F               	movf	CalcHumid@rcv_val+1,w
  3086  03D3  00FC               	movwf	___ftmul@f2+1
  3087  03D4  0840               	movf	CalcHumid@rcv_val+2,w
  3088  03D5  00FD               	movwf	___ftmul@f2+2
  3089  03D6  3184  2494  3183   	fcall	___ftmul
  3090  03D9  0878               	movf	?___ftmul,w
  3091  03DA  0020               	movlb	0	; select bank0
  3092  03DB  00AD               	movwf	___ftadd@f2
  3093  03DC  0879               	movf	?___ftmul+1,w
  3094  03DD  00AE               	movwf	___ftadd@f2+1
  3095  03DE  087A               	movf	?___ftmul+2,w
  3096  03DF  00AF               	movwf	___ftadd@f2+2
  3097  03E0  3185  25FB  3183   	fcall	___ftadd
  3098  03E3  0020               	movlb	0	; select bank0
  3099  03E4  082A               	movf	?___ftadd,w
  3100  03E5  00C2               	movwf	CalcHumid@ans
  3101  03E6  082B               	movf	?___ftadd+1,w
  3102  03E7  00C3               	movwf	CalcHumid@ans+1
  3103  03E8  082C               	movf	?___ftadd+2,w
  3104  03E9  00C4               	movwf	CalcHumid@ans+2
  3105                           
  3106                           ;main.c: 274: ans = ans * 100;
  3107  03EA  3000               	movlw	0
  3108  03EB  00F8               	movwf	___ftmul@f1
  3109  03EC  30C8               	movlw	200
  3110  03ED  00F9               	movwf	___ftmul@f1+1
  3111  03EE  3042               	movlw	66
  3112  03EF  00FA               	movwf	___ftmul@f1+2
  3113  03F0  0842               	movf	CalcHumid@ans,w
  3114  03F1  00FB               	movwf	___ftmul@f2
  3115  03F2  0843               	movf	CalcHumid@ans+1,w
  3116  03F3  00FC               	movwf	___ftmul@f2+1
  3117  03F4  0844               	movf	CalcHumid@ans+2,w
  3118  03F5  00FD               	movwf	___ftmul@f2+2
  3119  03F6  3184  2494  3183   	fcall	___ftmul
  3120  03F9  0878               	movf	?___ftmul,w
  3121  03FA  0020               	movlb	0	; select bank0
  3122  03FB  00C2               	movwf	CalcHumid@ans
  3123  03FC  0879               	movf	?___ftmul+1,w
  3124  03FD  00C3               	movwf	CalcHumid@ans+1
  3125  03FE  087A               	movf	?___ftmul+2,w
  3126  03FF  00C4               	movwf	CalcHumid@ans+2
  3127                           
  3128                           ;main.c: 276: return (int) ans;
  3129  0400  0842               	movf	CalcHumid@ans,w
  3130  0401  00F0               	movwf	___fttol@f1
  3131  0402  0843               	movf	CalcHumid@ans+1,w
  3132  0403  00F1               	movwf	___fttol@f1+1
  3133  0404  0844               	movf	CalcHumid@ans+2,w
  3134  0405  00F2               	movwf	___fttol@f1+2
  3135  0406  3184  240E         	fcall	___fttol
  3136  0408  0871               	movf	?___fttol+1,w
  3137  0409  0020               	movlb	0	; select bank0
  3138  040A  00B8               	movwf	?_CalcHumid+1
  3139  040B  0870               	movf	?___fttol,w
  3140  040C  00B7               	movwf	?_CalcHumid
  3141  040D  0008               	return
  3142  040E                     __end_of_CalcHumid:	
  3143                           
  3144                           	psect	text22
  3145  040E                     __ptext22:	
  3146 ;; *************** function ___fttol *****************
  3147 ;; Defined at:
  3148 ;;		line 44 in file "/opt/mmplabv310/xc8/sources/common/fttol.c"
  3149 ;; Parameters:    Size  Location     Type
  3150 ;;  f1              3    0[COMMON] float 
  3151 ;; Auto vars:     Size  Location     Type
  3152 ;;  lval            4    9[COMMON] unsigned long 
  3153 ;;  exp1            1   13[COMMON] unsigned char 
  3154 ;;  sign1           1    8[COMMON] unsigned char 
  3155 ;; Return value:  Size  Location     Type
  3156 ;;                  4    0[COMMON] long 
  3157 ;; Registers used:
  3158 ;;		wreg, status,2, status,0
  3159 ;; Tracked objects:
  3160 ;;		On entry : 0/0
  3161 ;;		On exit  : 0/0
  3162 ;;		Unchanged: 0/0
  3163 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3164 ;;      Params:         4       0       0       0
  3165 ;;      Locals:         6       0       0       0
  3166 ;;      Temps:          4       0       0       0
  3167 ;;      Totals:        14       0       0       0
  3168 ;;Total ram usage:       14 bytes
  3169 ;; Hardware stack levels used:    1
  3170 ;; This function calls:
  3171 ;;		Nothing
  3172 ;; This function is called by:
  3173 ;;		_CalcHumid
  3174 ;;		_CalcTemp
  3175 ;; This function uses a non-reentrant model
  3176 ;;
  3177                           
  3178                           
  3179                           ;psect for function ___fttol
  3180  040E                     ___fttol:	
  3181                           
  3182                           ;incstack = 0
  3183                           ; Regs used in ___fttol: [wreg+status,2+status,0]
  3184  040E  0870               	movf	___fttol@f1,w
  3185  040F  00F4               	movwf	??___fttol
  3186  0410  0871               	movf	___fttol@f1+1,w
  3187  0411  00F5               	movwf	??___fttol+1
  3188  0412  0872               	movf	___fttol@f1+2,w
  3189  0413  00F6               	movwf	??___fttol+2
  3190  0414  1003               	clrc
  3191  0415  0D75               	rlf	??___fttol+1,w
  3192  0416  0D76               	rlf	??___fttol+2,w
  3193  0417  00F7               	movwf	??___fttol+3
  3194  0418  0877               	movf	??___fttol+3,w
  3195  0419  00FD               	movwf	___fttol@exp1
  3196  041A  087D               	movf	___fttol@exp1,w
  3197  041B  1D03               	btfss	3,2
  3198  041C  2C26               	goto	l1591
  3199  041D  3000               	movlw	0
  3200  041E  00F3               	movwf	?___fttol+3
  3201  041F  3000               	movlw	0
  3202  0420  00F2               	movwf	?___fttol+2
  3203  0421  3000               	movlw	0
  3204  0422  00F1               	movwf	?___fttol+1
  3205  0423  3000               	movlw	0
  3206  0424  00F0               	movwf	?___fttol
  3207  0425  0008               	return
  3208  0426                     l1591:	
  3209  0426  0870               	movf	___fttol@f1,w
  3210  0427  00F4               	movwf	??___fttol
  3211  0428  0871               	movf	___fttol@f1+1,w
  3212  0429  00F5               	movwf	??___fttol+1
  3213  042A  0872               	movf	___fttol@f1+2,w
  3214  042B  00F6               	movwf	??___fttol+2
  3215  042C  3017               	movlw	23
  3216  042D                     u1865:	
  3217  042D  36F6               	lsrf	??___fttol+2,f
  3218  042E  0CF5               	rrf	??___fttol+1,f
  3219  042F  0CF4               	rrf	??___fttol,f
  3220  0430  0B89               	decfsz	9,f
  3221  0431  2C2D               	goto	u1865
  3222  0432  0874               	movf	??___fttol,w
  3223  0433  00F7               	movwf	??___fttol+3
  3224  0434  0877               	movf	??___fttol+3,w
  3225  0435  00F8               	movwf	___fttol@sign1
  3226  0436  17F1               	bsf	___fttol@f1+1,7
  3227  0437  30FF               	movlw	255
  3228  0438  05F0               	andwf	___fttol@f1,f
  3229  0439  30FF               	movlw	255
  3230  043A  05F1               	andwf	___fttol@f1+1,f
  3231  043B  3000               	movlw	0
  3232  043C  05F2               	andwf	___fttol@f1+2,f
  3233  043D  0870               	movf	___fttol@f1,w
  3234  043E  00F9               	movwf	___fttol@lval
  3235  043F  0871               	movf	___fttol@f1+1,w
  3236  0440  00FA               	movwf	___fttol@lval+1
  3237  0441  0872               	movf	___fttol@f1+2,w
  3238  0442  00FB               	movwf	___fttol@lval+2
  3239  0443  01FC               	clrf	___fttol@lval+3
  3240  0444  308E               	movlw	142
  3241  0445  02FD               	subwf	___fttol@exp1,f
  3242  0446  1FFD               	btfss	___fttol@exp1,7
  3243  0447  2C64               	goto	l1611
  3244  0448  087D               	movf	___fttol@exp1,w
  3245  0449  3A80               	xorlw	128
  3246  044A  3E8F               	addlw	143
  3247  044B  1803               	skipnc
  3248  044C  2C56               	goto	l1609
  3249  044D  3000               	movlw	0
  3250  044E  00F3               	movwf	?___fttol+3
  3251  044F  3000               	movlw	0
  3252  0450  00F2               	movwf	?___fttol+2
  3253  0451  3000               	movlw	0
  3254  0452  00F1               	movwf	?___fttol+1
  3255  0453  3000               	movlw	0
  3256  0454  00F0               	movwf	?___fttol
  3257  0455  0008               	return
  3258  0456                     l1609:	
  3259  0456  3001               	movlw	1
  3260  0457                     u1895:	
  3261  0457  36FC               	lsrf	___fttol@lval+3,f
  3262  0458  0CFB               	rrf	___fttol@lval+2,f
  3263  0459  0CFA               	rrf	___fttol@lval+1,f
  3264  045A  0CF9               	rrf	___fttol@lval,f
  3265  045B  0B89               	decfsz	9,f
  3266  045C  2C57               	goto	u1895
  3267  045D  3001               	movlw	1
  3268  045E  00F4               	movwf	??___fttol
  3269  045F  0874               	movf	??___fttol,w
  3270  0460  07FD               	addwf	___fttol@exp1,f
  3271  0461  1903               	btfsc	3,2
  3272  0462  2C7D               	goto	l1619
  3273  0463  2C56               	goto	l1609
  3274  0464                     l1611:	
  3275  0464  3018               	movlw	24
  3276  0465  027D               	subwf	___fttol@exp1,w
  3277  0466  1C03               	skipc
  3278  0467  2C7A               	goto	l533
  3279  0468  3000               	movlw	0
  3280  0469  00F3               	movwf	?___fttol+3
  3281  046A  3000               	movlw	0
  3282  046B  00F2               	movwf	?___fttol+2
  3283  046C  3000               	movlw	0
  3284  046D  00F1               	movwf	?___fttol+1
  3285  046E  3000               	movlw	0
  3286  046F  00F0               	movwf	?___fttol
  3287  0470  0008               	return
  3288  0471                     l1617:	
  3289  0471  3001               	movlw	1
  3290  0472                     u1925:	
  3291  0472  35F9               	lslf	___fttol@lval,f
  3292  0473  0DFA               	rlf	___fttol@lval+1,f
  3293  0474  0DFB               	rlf	___fttol@lval+2,f
  3294  0475  0DFC               	rlf	___fttol@lval+3,f
  3295  0476  0B89               	decfsz	9,f
  3296  0477  2C72               	goto	u1925
  3297  0478  3001               	movlw	1
  3298  0479  02FD               	subwf	___fttol@exp1,f
  3299  047A                     l533:	
  3300  047A  087D               	movf	___fttol@exp1,w
  3301  047B  1D03               	btfss	3,2
  3302  047C  2C71               	goto	l1617
  3303  047D                     l1619:	
  3304  047D  0878               	movf	___fttol@sign1,w
  3305  047E  1903               	btfsc	3,2
  3306  047F  2C8B               	goto	l1623
  3307  0480  09F9               	comf	___fttol@lval,f
  3308  0481  09FA               	comf	___fttol@lval+1,f
  3309  0482  09FB               	comf	___fttol@lval+2,f
  3310  0483  09FC               	comf	___fttol@lval+3,f
  3311  0484  0AF9               	incf	___fttol@lval,f
  3312  0485  1903               	skipnz
  3313  0486  0AFA               	incf	___fttol@lval+1,f
  3314  0487  1903               	skipnz
  3315  0488  0AFB               	incf	___fttol@lval+2,f
  3316  0489  1903               	skipnz
  3317  048A  0AFC               	incf	___fttol@lval+3,f
  3318  048B                     l1623:	
  3319  048B  087C               	movf	___fttol@lval+3,w
  3320  048C  00F3               	movwf	?___fttol+3
  3321  048D  087B               	movf	___fttol@lval+2,w
  3322  048E  00F2               	movwf	?___fttol+2
  3323  048F  087A               	movf	___fttol@lval+1,w
  3324  0490  00F1               	movwf	?___fttol+1
  3325  0491  0879               	movf	___fttol@lval,w
  3326  0492  00F0               	movwf	?___fttol
  3327  0493  0008               	return
  3328  0494                     __end_of___fttol:	
  3329                           
  3330                           	psect	text23
  3331  0494                     __ptext23:	
  3332 ;; *************** function ___ftmul *****************
  3333 ;; Defined at:
  3334 ;;		line 62 in file "/opt/mmplabv310/xc8/sources/common/ftmul.c"
  3335 ;; Parameters:    Size  Location     Type
  3336 ;;  f1              3    8[COMMON] float 
  3337 ;;  f2              3   11[COMMON] float 
  3338 ;; Auto vars:     Size  Location     Type
  3339 ;;  f3_as_produc    3    5[BANK0 ] unsigned um
  3340 ;;  sign            1    9[BANK0 ] unsigned char 
  3341 ;;  cntr            1    8[BANK0 ] unsigned char 
  3342 ;;  exp             1    4[BANK0 ] unsigned char 
  3343 ;; Return value:  Size  Location     Type
  3344 ;;                  3    8[COMMON] float 
  3345 ;; Registers used:
  3346 ;;		wreg, status,2, status,0, pclath, cstack
  3347 ;; Tracked objects:
  3348 ;;		On entry : 0/0
  3349 ;;		On exit  : 0/0
  3350 ;;		Unchanged: 0/0
  3351 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3352 ;;      Params:         6       0       0       0
  3353 ;;      Locals:         0       6       0       0
  3354 ;;      Temps:          0       4       0       0
  3355 ;;      Totals:         6      10       0       0
  3356 ;;Total ram usage:       16 bytes
  3357 ;; Hardware stack levels used:    1
  3358 ;; Hardware stack levels required when called:    1
  3359 ;; This function calls:
  3360 ;;		___ftpack
  3361 ;; This function is called by:
  3362 ;;		_CalcHumid
  3363 ;; This function uses a non-reentrant model
  3364 ;;
  3365                           
  3366                           
  3367                           ;psect for function ___ftmul
  3368  0494                     ___ftmul:	
  3369                           
  3370                           ;incstack = 0
  3371                           ; Regs used in ___ftmul: [wreg+status,2+status,0+pclath+cstack]
  3372  0494  0878               	movf	___ftmul@f1,w
  3373  0495  0020               	movlb	0	; select bank0
  3374  0496  00A0               	movwf	??___ftmul
  3375  0497  0879               	movf	___ftmul@f1+1,w
  3376  0498  00A1               	movwf	??___ftmul+1
  3377  0499  087A               	movf	___ftmul@f1+2,w
  3378  049A  00A2               	movwf	??___ftmul+2
  3379  049B  1003               	clrc
  3380  049C  0D21               	rlf	??___ftmul+1,w
  3381  049D  0D22               	rlf	??___ftmul+2,w
  3382  049E  00A3               	movwf	??___ftmul+3
  3383  049F  0823               	movf	??___ftmul+3,w
  3384  04A0  00A4               	movwf	___ftmul@exp
  3385  04A1  0824               	movf	___ftmul@exp,w
  3386  04A2  1D03               	btfss	3,2
  3387  04A3  2CAB               	goto	l1541
  3388  04A4  3000               	movlw	0
  3389  04A5  00F8               	movwf	?___ftmul
  3390  04A6  3000               	movlw	0
  3391  04A7  00F9               	movwf	?___ftmul+1
  3392  04A8  3000               	movlw	0
  3393  04A9  00FA               	movwf	?___ftmul+2
  3394  04AA  0008               	return
  3395  04AB                     l1541:	
  3396  04AB  087B               	movf	___ftmul@f2,w
  3397  04AC  00A0               	movwf	??___ftmul
  3398  04AD  087C               	movf	___ftmul@f2+1,w
  3399  04AE  00A1               	movwf	??___ftmul+1
  3400  04AF  087D               	movf	___ftmul@f2+2,w
  3401  04B0  00A2               	movwf	??___ftmul+2
  3402  04B1  1003               	clrc
  3403  04B2  0D21               	rlf	??___ftmul+1,w
  3404  04B3  0D22               	rlf	??___ftmul+2,w
  3405  04B4  00A3               	movwf	??___ftmul+3
  3406  04B5  0823               	movf	??___ftmul+3,w
  3407  04B6  00A9               	movwf	___ftmul@sign
  3408  04B7  0829               	movf	___ftmul@sign,w
  3409  04B8  1D03               	btfss	3,2
  3410  04B9  2CC1               	goto	l1547
  3411  04BA  3000               	movlw	0
  3412  04BB  00F8               	movwf	?___ftmul
  3413  04BC  3000               	movlw	0
  3414  04BD  00F9               	movwf	?___ftmul+1
  3415  04BE  3000               	movlw	0
  3416  04BF  00FA               	movwf	?___ftmul+2
  3417  04C0  0008               	return
  3418  04C1                     l1547:	
  3419  04C1  0829               	movf	___ftmul@sign,w
  3420  04C2  3E7B               	addlw	123
  3421  04C3  00A0               	movwf	??___ftmul
  3422  04C4  0820               	movf	??___ftmul,w
  3423  04C5  07A4               	addwf	___ftmul@exp,f
  3424  04C6  0878               	movf	___ftmul@f1,w
  3425  04C7  00A0               	movwf	??___ftmul
  3426  04C8  0879               	movf	___ftmul@f1+1,w
  3427  04C9  00A1               	movwf	??___ftmul+1
  3428  04CA  087A               	movf	___ftmul@f1+2,w
  3429  04CB  00A2               	movwf	??___ftmul+2
  3430  04CC  3010               	movlw	16
  3431  04CD                     u1755:	
  3432  04CD  36A2               	lsrf	??___ftmul+2,f
  3433  04CE  0CA1               	rrf	??___ftmul+1,f
  3434  04CF  0CA0               	rrf	??___ftmul,f
  3435  04D0  0B89               	decfsz	9,f
  3436  04D1  2CCD               	goto	u1755
  3437  04D2  0820               	movf	??___ftmul,w
  3438  04D3  00A3               	movwf	??___ftmul+3
  3439  04D4  0823               	movf	??___ftmul+3,w
  3440  04D5  00A9               	movwf	___ftmul@sign
  3441  04D6  087B               	movf	___ftmul@f2,w
  3442  04D7  00A0               	movwf	??___ftmul
  3443  04D8  087C               	movf	___ftmul@f2+1,w
  3444  04D9  00A1               	movwf	??___ftmul+1
  3445  04DA  087D               	movf	___ftmul@f2+2,w
  3446  04DB  00A2               	movwf	??___ftmul+2
  3447  04DC  3010               	movlw	16
  3448  04DD                     u1765:	
  3449  04DD  36A2               	lsrf	??___ftmul+2,f
  3450  04DE  0CA1               	rrf	??___ftmul+1,f
  3451  04DF  0CA0               	rrf	??___ftmul,f
  3452  04E0  0B89               	decfsz	9,f
  3453  04E1  2CDD               	goto	u1765
  3454  04E2  0820               	movf	??___ftmul,w
  3455  04E3  00A3               	movwf	??___ftmul+3
  3456  04E4  0823               	movf	??___ftmul+3,w
  3457  04E5  06A9               	xorwf	___ftmul@sign,f
  3458  04E6  3080               	movlw	128
  3459  04E7  00A0               	movwf	??___ftmul
  3460  04E8  0820               	movf	??___ftmul,w
  3461  04E9  05A9               	andwf	___ftmul@sign,f
  3462  04EA  17F9               	bsf	___ftmul@f1+1,7
  3463  04EB  17FC               	bsf	___ftmul@f2+1,7
  3464  04EC  30FF               	movlw	255
  3465  04ED  05FB               	andwf	___ftmul@f2,f
  3466  04EE  30FF               	movlw	255
  3467  04EF  05FC               	andwf	___ftmul@f2+1,f
  3468  04F0  3000               	movlw	0
  3469  04F1  05FD               	andwf	___ftmul@f2+2,f
  3470  04F2  3000               	movlw	0
  3471  04F3  00A5               	movwf	___ftmul@f3_as_product
  3472  04F4  3000               	movlw	0
  3473  04F5  00A6               	movwf	___ftmul@f3_as_product+1
  3474  04F6  3000               	movlw	0
  3475  04F7  00A7               	movwf	___ftmul@f3_as_product+2
  3476  04F8  3007               	movlw	7
  3477  04F9  00A0               	movwf	??___ftmul
  3478  04FA  0820               	movf	??___ftmul,w
  3479  04FB  00A8               	movwf	___ftmul@cntr
  3480  04FC                     l1559:	
  3481  04FC  1C78               	btfss	___ftmul@f1,0
  3482  04FD  2D04               	goto	l1563
  3483  04FE  087B               	movf	___ftmul@f2,w
  3484  04FF  07A5               	addwf	___ftmul@f3_as_product,f
  3485  0500  087C               	movf	___ftmul@f2+1,w
  3486  0501  3DA6               	addwfc	___ftmul@f3_as_product+1,f
  3487  0502  087D               	movf	___ftmul@f2+2,w
  3488  0503  3DA7               	addwfc	___ftmul@f3_as_product+2,f
  3489  0504                     l1563:	
  3490  0504  3001               	movlw	1
  3491  0505                     u1785:	
  3492  0505  36FA               	lsrf	___ftmul@f1+2,f
  3493  0506  0CF9               	rrf	___ftmul@f1+1,f
  3494  0507  0CF8               	rrf	___ftmul@f1,f
  3495  0508  0B89               	decfsz	9,f
  3496  0509  2D05               	goto	u1785
  3497  050A  3001               	movlw	1
  3498  050B                     u1795:	
  3499  050B  35FB               	lslf	___ftmul@f2,f
  3500  050C  0DFC               	rlf	___ftmul@f2+1,f
  3501  050D  0DFD               	rlf	___ftmul@f2+2,f
  3502  050E  0B89               	decfsz	9,f
  3503  050F  2D0B               	goto	u1795
  3504  0510  3001               	movlw	1
  3505  0511  02A8               	subwf	___ftmul@cntr,f
  3506  0512  1D03               	btfss	3,2
  3507  0513  2CFC               	goto	l1559
  3508  0514  3009               	movlw	9
  3509  0515  00A0               	movwf	??___ftmul
  3510  0516  0820               	movf	??___ftmul,w
  3511  0517  00A8               	movwf	___ftmul@cntr
  3512  0518                     l1571:	
  3513  0518  1C78               	btfss	___ftmul@f1,0
  3514  0519  2D20               	goto	l1575
  3515  051A  087B               	movf	___ftmul@f2,w
  3516  051B  07A5               	addwf	___ftmul@f3_as_product,f
  3517  051C  087C               	movf	___ftmul@f2+1,w
  3518  051D  3DA6               	addwfc	___ftmul@f3_as_product+1,f
  3519  051E  087D               	movf	___ftmul@f2+2,w
  3520  051F  3DA7               	addwfc	___ftmul@f3_as_product+2,f
  3521  0520                     l1575:	
  3522  0520  3001               	movlw	1
  3523  0521                     u1825:	
  3524  0521  36FA               	lsrf	___ftmul@f1+2,f
  3525  0522  0CF9               	rrf	___ftmul@f1+1,f
  3526  0523  0CF8               	rrf	___ftmul@f1,f
  3527  0524  0B89               	decfsz	9,f
  3528  0525  2D21               	goto	u1825
  3529  0526  3001               	movlw	1
  3530  0527                     u1835:	
  3531  0527  36A7               	lsrf	___ftmul@f3_as_product+2,f
  3532  0528  0CA6               	rrf	___ftmul@f3_as_product+1,f
  3533  0529  0CA5               	rrf	___ftmul@f3_as_product,f
  3534  052A  0B89               	decfsz	9,f
  3535  052B  2D27               	goto	u1835
  3536  052C  3001               	movlw	1
  3537  052D  02A8               	subwf	___ftmul@cntr,f
  3538  052E  1D03               	btfss	3,2
  3539  052F  2D18               	goto	l1571
  3540  0530  0825               	movf	___ftmul@f3_as_product,w
  3541  0531  00F0               	movwf	___ftpack@arg
  3542  0532  0826               	movf	___ftmul@f3_as_product+1,w
  3543  0533  00F1               	movwf	___ftpack@arg+1
  3544  0534  0827               	movf	___ftmul@f3_as_product+2,w
  3545  0535  00F2               	movwf	___ftpack@arg+2
  3546  0536  0824               	movf	___ftmul@exp,w
  3547  0537  00A0               	movwf	??___ftmul
  3548  0538  0820               	movf	??___ftmul,w
  3549  0539  00F3               	movwf	___ftpack@exp
  3550  053A  0829               	movf	___ftmul@sign,w
  3551  053B  00A1               	movwf	??___ftmul+1
  3552  053C  0821               	movf	??___ftmul+1,w
  3553  053D  00F4               	movwf	___ftpack@sign
  3554  053E  3183  2345         	fcall	___ftpack
  3555  0540  0870               	movf	?___ftpack,w
  3556  0541  00F8               	movwf	?___ftmul
  3557  0542  0871               	movf	?___ftpack+1,w
  3558  0543  00F9               	movwf	?___ftmul+1
  3559  0544  0872               	movf	?___ftpack+2,w
  3560  0545  00FA               	movwf	?___ftmul+2
  3561  0546  0008               	return
  3562  0547                     __end_of___ftmul:	
  3563                           
  3564                           	psect	text24
  3565  05FB                     __ptext24:	
  3566 ;; *************** function ___ftadd *****************
  3567 ;; Defined at:
  3568 ;;		line 86 in file "/opt/mmplabv310/xc8/sources/common/ftadd.c"
  3569 ;; Parameters:    Size  Location     Type
  3570 ;;  f1              3   10[BANK0 ] float 
  3571 ;;  f2              3   13[BANK0 ] float 
  3572 ;; Auto vars:     Size  Location     Type
  3573 ;;  exp1            1   22[BANK0 ] unsigned char 
  3574 ;;  exp2            1   21[BANK0 ] unsigned char 
  3575 ;;  sign            1   20[BANK0 ] unsigned char 
  3576 ;; Return value:  Size  Location     Type
  3577 ;;                  3   10[BANK0 ] float 
  3578 ;; Registers used:
  3579 ;;		wreg, status,2, status,0, pclath, cstack
  3580 ;; Tracked objects:
  3581 ;;		On entry : 0/0
  3582 ;;		On exit  : 0/0
  3583 ;;		Unchanged: 0/0
  3584 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3585 ;;      Params:         0       6       0       0
  3586 ;;      Locals:         0       3       0       0
  3587 ;;      Temps:          0       4       0       0
  3588 ;;      Totals:         0      13       0       0
  3589 ;;Total ram usage:       13 bytes
  3590 ;; Hardware stack levels used:    1
  3591 ;; Hardware stack levels required when called:    1
  3592 ;; This function calls:
  3593 ;;		___ftpack
  3594 ;; This function is called by:
  3595 ;;		_CalcHumid
  3596 ;; This function uses a non-reentrant model
  3597 ;;
  3598                           
  3599                           
  3600                           ;psect for function ___ftadd
  3601  05FB                     ___ftadd:	
  3602                           
  3603                           ;incstack = 0
  3604                           ; Regs used in ___ftadd: [wreg+status,2+status,0+pclath+cstack]
  3605  05FB  0020               	movlb	0	; select bank0
  3606  05FC  082A               	movf	___ftadd@f1,w
  3607  05FD  00B0               	movwf	??___ftadd
  3608  05FE  082B               	movf	___ftadd@f1+1,w
  3609  05FF  00B1               	movwf	??___ftadd+1
  3610  0600  082C               	movf	___ftadd@f1+2,w
  3611  0601  00B2               	movwf	??___ftadd+2
  3612  0602  1003               	clrc
  3613  0603  0D31               	rlf	??___ftadd+1,w
  3614  0604  0D32               	rlf	??___ftadd+2,w
  3615  0605  00B3               	movwf	??___ftadd+3
  3616  0606  0833               	movf	??___ftadd+3,w
  3617  0607  00B6               	movwf	___ftadd@exp1
  3618  0608  082D               	movf	___ftadd@f2,w
  3619  0609  00B0               	movwf	??___ftadd
  3620  060A  082E               	movf	___ftadd@f2+1,w
  3621  060B  00B1               	movwf	??___ftadd+1
  3622  060C  082F               	movf	___ftadd@f2+2,w
  3623  060D  00B2               	movwf	??___ftadd+2
  3624  060E  1003               	clrc
  3625  060F  0D31               	rlf	??___ftadd+1,w
  3626  0610  0D32               	rlf	??___ftadd+2,w
  3627  0611  00B3               	movwf	??___ftadd+3
  3628  0612  0833               	movf	??___ftadd+3,w
  3629  0613  00B5               	movwf	___ftadd@exp2
  3630  0614  0836               	movf	___ftadd@exp1,w
  3631  0615  1903               	btfsc	3,2
  3632  0616  2E23               	goto	l1471
  3633  0617  0835               	movf	___ftadd@exp2,w
  3634  0618  0236               	subwf	___ftadd@exp1,w
  3635  0619  1803               	skipnc
  3636  061A  2E2A               	goto	l1475
  3637  061B  0336               	decf	___ftadd@exp1,w
  3638  061C  3AFF               	xorlw	255
  3639  061D  0735               	addwf	___ftadd@exp2,w
  3640  061E  00B0               	movwf	??___ftadd
  3641  061F  3019               	movlw	25
  3642  0620  0230               	subwf	??___ftadd,w
  3643  0621  1C03               	skipc
  3644  0622  2E2A               	goto	l1475
  3645  0623                     l1471:	
  3646  0623  082D               	movf	___ftadd@f2,w
  3647  0624  00AA               	movwf	?___ftadd
  3648  0625  082E               	movf	___ftadd@f2+1,w
  3649  0626  00AB               	movwf	?___ftadd+1
  3650  0627  082F               	movf	___ftadd@f2+2,w
  3651  0628  00AC               	movwf	?___ftadd+2
  3652  0629  0008               	return
  3653  062A                     l1475:	
  3654  062A  0835               	movf	___ftadd@exp2,w
  3655  062B  1903               	btfsc	3,2
  3656  062C  0008               	return
  3657  062D  0836               	movf	___ftadd@exp1,w
  3658  062E  0235               	subwf	___ftadd@exp2,w
  3659  062F  1803               	skipnc
  3660  0630  2E39               	goto	l1481
  3661  0631  0335               	decf	___ftadd@exp2,w
  3662  0632  3AFF               	xorlw	255
  3663  0633  0736               	addwf	___ftadd@exp1,w
  3664  0634  00B0               	movwf	??___ftadd
  3665  0635  3019               	movlw	25
  3666  0636  0230               	subwf	??___ftadd,w
  3667  0637  1803               	btfsc	3,0
  3668  0638  0008               	return
  3669  0639                     l1481:	
  3670  0639  3006               	movlw	6
  3671  063A  00B0               	movwf	??___ftadd
  3672  063B  0830               	movf	??___ftadd,w
  3673  063C  00B4               	movwf	___ftadd@sign
  3674  063D  1BAC               	btfsc	___ftadd@f1+2,7
  3675  063E  17B4               	bsf	___ftadd@sign,7
  3676  063F  1BAF               	btfsc	___ftadd@f2+2,7
  3677  0640  1734               	bsf	___ftadd@sign,6
  3678  0641  17AB               	bsf	___ftadd@f1+1,7
  3679  0642  30FF               	movlw	255
  3680  0643  05AA               	andwf	___ftadd@f1,f
  3681  0644  30FF               	movlw	255
  3682  0645  05AB               	andwf	___ftadd@f1+1,f
  3683  0646  3000               	movlw	0
  3684  0647  05AC               	andwf	___ftadd@f1+2,f
  3685  0648  17AE               	bsf	___ftadd@f2+1,7
  3686  0649  30FF               	movlw	255
  3687  064A  05AD               	andwf	___ftadd@f2,f
  3688  064B  30FF               	movlw	255
  3689  064C  05AE               	andwf	___ftadd@f2+1,f
  3690  064D  3000               	movlw	0
  3691  064E  05AF               	andwf	___ftadd@f2+2,f
  3692  064F  0835               	movf	___ftadd@exp2,w
  3693  0650  0236               	subwf	___ftadd@exp1,w
  3694  0651  1803               	skipnc
  3695  0652  2E75               	goto	l1503
  3696  0653                     l1493:	
  3697  0653  3001               	movlw	1
  3698  0654                     u1595:	
  3699  0654  35AD               	lslf	___ftadd@f2,f
  3700  0655  0DAE               	rlf	___ftadd@f2+1,f
  3701  0656  0DAF               	rlf	___ftadd@f2+2,f
  3702  0657  0B89               	decfsz	9,f
  3703  0658  2E54               	goto	u1595
  3704  0659  3001               	movlw	1
  3705  065A  02B5               	subwf	___ftadd@exp2,f
  3706  065B  0835               	movf	___ftadd@exp2,w
  3707  065C  0636               	xorwf	___ftadd@exp1,w
  3708  065D  1903               	skipnz
  3709  065E  2E70               	goto	l1501
  3710  065F  3001               	movlw	1
  3711  0660  02B4               	subwf	___ftadd@sign,f
  3712  0661  0834               	movf	___ftadd@sign,w
  3713  0662  3907               	andlw	7
  3714  0663  1903               	btfsc	3,2
  3715  0664  2E70               	goto	l1501
  3716  0665  2E53               	goto	l1493
  3717  0666                     l1499:	
  3718  0666  3001               	movlw	1
  3719  0667                     u1625:	
  3720  0667  36AC               	lsrf	___ftadd@f1+2,f
  3721  0668  0CAB               	rrf	___ftadd@f1+1,f
  3722  0669  0CAA               	rrf	___ftadd@f1,f
  3723  066A  0B89               	decfsz	9,f
  3724  066B  2E67               	goto	u1625
  3725  066C  3001               	movlw	1
  3726  066D  00B0               	movwf	??___ftadd
  3727  066E  0830               	movf	??___ftadd,w
  3728  066F  07B6               	addwf	___ftadd@exp1,f
  3729  0670                     l1501:	
  3730  0670  0836               	movf	___ftadd@exp1,w
  3731  0671  0635               	xorwf	___ftadd@exp2,w
  3732  0672  1903               	btfsc	3,2
  3733  0673  2E9A               	goto	l473
  3734  0674  2E66               	goto	l1499
  3735  0675                     l1503:	
  3736  0675  0836               	movf	___ftadd@exp1,w
  3737  0676  0235               	subwf	___ftadd@exp2,w
  3738  0677  1803               	skipnc
  3739  0678  2E9A               	goto	l473
  3740  0679                     l1505:	
  3741  0679  3001               	movlw	1
  3742  067A                     u1655:	
  3743  067A  35AA               	lslf	___ftadd@f1,f
  3744  067B  0DAB               	rlf	___ftadd@f1+1,f
  3745  067C  0DAC               	rlf	___ftadd@f1+2,f
  3746  067D  0B89               	decfsz	9,f
  3747  067E  2E7A               	goto	u1655
  3748  067F  3001               	movlw	1
  3749  0680  02B6               	subwf	___ftadd@exp1,f
  3750  0681  0835               	movf	___ftadd@exp2,w
  3751  0682  0636               	xorwf	___ftadd@exp1,w
  3752  0683  1903               	skipnz
  3753  0684  2E96               	goto	l1513
  3754  0685  3001               	movlw	1
  3755  0686  02B4               	subwf	___ftadd@sign,f
  3756  0687  0834               	movf	___ftadd@sign,w
  3757  0688  3907               	andlw	7
  3758  0689  1903               	btfsc	3,2
  3759  068A  2E96               	goto	l1513
  3760  068B  2E79               	goto	l1505
  3761  068C                     l1511:	
  3762  068C  3001               	movlw	1
  3763  068D                     u1685:	
  3764  068D  36AF               	lsrf	___ftadd@f2+2,f
  3765  068E  0CAE               	rrf	___ftadd@f2+1,f
  3766  068F  0CAD               	rrf	___ftadd@f2,f
  3767  0690  0B89               	decfsz	9,f
  3768  0691  2E8D               	goto	u1685
  3769  0692  3001               	movlw	1
  3770  0693  00B0               	movwf	??___ftadd
  3771  0694  0830               	movf	??___ftadd,w
  3772  0695  07B5               	addwf	___ftadd@exp2,f
  3773  0696                     l1513:	
  3774  0696  0836               	movf	___ftadd@exp1,w
  3775  0697  0635               	xorwf	___ftadd@exp2,w
  3776  0698  1D03               	skipz
  3777  0699  2E8C               	goto	l1511
  3778  069A                     l473:	
  3779  069A  1FB4               	btfss	___ftadd@sign,7
  3780  069B  2EAC               	goto	l1517
  3781  069C  30FF               	movlw	255
  3782  069D  06AA               	xorwf	___ftadd@f1,f
  3783  069E  30FF               	movlw	255
  3784  069F  06AB               	xorwf	___ftadd@f1+1,f
  3785  06A0  30FF               	movlw	255
  3786  06A1  06AC               	xorwf	___ftadd@f1+2,f
  3787  06A2  3001               	movlw	1
  3788  06A3  07AA               	addwf	___ftadd@f1,f
  3789  06A4  3000               	movlw	0
  3790  06A5  1803               	skipnc
  3791  06A6  3001               	movlw	1
  3792  06A7  07AB               	addwf	___ftadd@f1+1,f
  3793  06A8  3000               	movlw	0
  3794  06A9  1803               	skipnc
  3795  06AA  3001               	movlw	1
  3796  06AB  07AC               	addwf	___ftadd@f1+2,f
  3797  06AC                     l1517:	
  3798  06AC  1F34               	btfss	___ftadd@sign,6
  3799  06AD  2EBE               	goto	l1521
  3800  06AE  30FF               	movlw	255
  3801  06AF  06AD               	xorwf	___ftadd@f2,f
  3802  06B0  30FF               	movlw	255
  3803  06B1  06AE               	xorwf	___ftadd@f2+1,f
  3804  06B2  30FF               	movlw	255
  3805  06B3  06AF               	xorwf	___ftadd@f2+2,f
  3806  06B4  3001               	movlw	1
  3807  06B5  07AD               	addwf	___ftadd@f2,f
  3808  06B6  3000               	movlw	0
  3809  06B7  1803               	skipnc
  3810  06B8  3001               	movlw	1
  3811  06B9  07AE               	addwf	___ftadd@f2+1,f
  3812  06BA  3000               	movlw	0
  3813  06BB  1803               	skipnc
  3814  06BC  3001               	movlw	1
  3815  06BD  07AF               	addwf	___ftadd@f2+2,f
  3816  06BE                     l1521:	
  3817  06BE  01B4               	clrf	___ftadd@sign
  3818  06BF  082A               	movf	___ftadd@f1,w
  3819  06C0  07AD               	addwf	___ftadd@f2,f
  3820  06C1  082B               	movf	___ftadd@f1+1,w
  3821  06C2  3DAE               	addwfc	___ftadd@f2+1,f
  3822  06C3  082C               	movf	___ftadd@f1+2,w
  3823  06C4  3DAF               	addwfc	___ftadd@f2+2,f
  3824  06C5  1FAF               	btfss	___ftadd@f2+2,7
  3825  06C6  2ED9               	goto	l1531
  3826  06C7  30FF               	movlw	255
  3827  06C8  06AD               	xorwf	___ftadd@f2,f
  3828  06C9  30FF               	movlw	255
  3829  06CA  06AE               	xorwf	___ftadd@f2+1,f
  3830  06CB  30FF               	movlw	255
  3831  06CC  06AF               	xorwf	___ftadd@f2+2,f
  3832  06CD  3001               	movlw	1
  3833  06CE  07AD               	addwf	___ftadd@f2,f
  3834  06CF  3000               	movlw	0
  3835  06D0  1803               	skipnc
  3836  06D1  3001               	movlw	1
  3837  06D2  07AE               	addwf	___ftadd@f2+1,f
  3838  06D3  3000               	movlw	0
  3839  06D4  1803               	skipnc
  3840  06D5  3001               	movlw	1
  3841  06D6  07AF               	addwf	___ftadd@f2+2,f
  3842  06D7  01B4               	clrf	___ftadd@sign
  3843  06D8  0AB4               	incf	___ftadd@sign,f
  3844  06D9                     l1531:	
  3845  06D9  082D               	movf	___ftadd@f2,w
  3846  06DA  00F0               	movwf	___ftpack@arg
  3847  06DB  082E               	movf	___ftadd@f2+1,w
  3848  06DC  00F1               	movwf	___ftpack@arg+1
  3849  06DD  082F               	movf	___ftadd@f2+2,w
  3850  06DE  00F2               	movwf	___ftpack@arg+2
  3851  06DF  0836               	movf	___ftadd@exp1,w
  3852  06E0  00B0               	movwf	??___ftadd
  3853  06E1  0830               	movf	??___ftadd,w
  3854  06E2  00F3               	movwf	___ftpack@exp
  3855  06E3  0834               	movf	___ftadd@sign,w
  3856  06E4  00B1               	movwf	??___ftadd+1
  3857  06E5  0831               	movf	??___ftadd+1,w
  3858  06E6  00F4               	movwf	___ftpack@sign
  3859  06E7  3183  2345         	fcall	___ftpack
  3860  06E9  0870               	movf	?___ftpack,w
  3861  06EA  0020               	movlb	0	; select bank0
  3862  06EB  00AA               	movwf	?___ftadd
  3863  06EC  0871               	movf	?___ftpack+1,w
  3864  06ED  00AB               	movwf	?___ftadd+1
  3865  06EE  0872               	movf	?___ftpack+2,w
  3866  06EF  00AC               	movwf	?___ftadd+2
  3867  06F0  0008               	return
  3868  06F1                     __end_of___ftadd:	
  3869                           
  3870                           	psect	text25
  3871  01F5                     __ptext25:	
  3872 ;; *************** function ___awtoft *****************
  3873 ;; Defined at:
  3874 ;;		line 32 in file "/opt/mmplabv310/xc8/sources/common/awtoft.c"
  3875 ;; Parameters:    Size  Location     Type
  3876 ;;  c               2    8[COMMON] int 
  3877 ;; Auto vars:     Size  Location     Type
  3878 ;;  sign            1   13[COMMON] unsigned char 
  3879 ;; Return value:  Size  Location     Type
  3880 ;;                  3    8[COMMON] float 
  3881 ;; Registers used:
  3882 ;;		wreg, status,2, status,0, pclath, cstack
  3883 ;; Tracked objects:
  3884 ;;		On entry : 0/0
  3885 ;;		On exit  : 0/0
  3886 ;;		Unchanged: 0/0
  3887 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3888 ;;      Params:         3       0       0       0
  3889 ;;      Locals:         1       0       0       0
  3890 ;;      Temps:          2       0       0       0
  3891 ;;      Totals:         6       0       0       0
  3892 ;;Total ram usage:        6 bytes
  3893 ;; Hardware stack levels used:    1
  3894 ;; Hardware stack levels required when called:    1
  3895 ;; This function calls:
  3896 ;;		___ftpack
  3897 ;; This function is called by:
  3898 ;;		_CalcHumid
  3899 ;; This function uses a non-reentrant model
  3900 ;;
  3901                           
  3902                           
  3903                           ;psect for function ___awtoft
  3904  01F5                     ___awtoft:	
  3905                           
  3906                           ;incstack = 0
  3907                           ; Regs used in ___awtoft: [wreg+status,2+status,0+pclath+cstack]
  3908  01F5  01FD               	clrf	___awtoft@sign
  3909  01F6  1FF9               	btfss	___awtoft@c+1,7
  3910  01F7  29FF               	goto	l1461
  3911  01F8  09F8               	comf	___awtoft@c,f
  3912  01F9  09F9               	comf	___awtoft@c+1,f
  3913  01FA  0AF8               	incf	___awtoft@c,f
  3914  01FB  1903               	skipnz
  3915  01FC  0AF9               	incf	___awtoft@c+1,f
  3916  01FD  01FD               	clrf	___awtoft@sign
  3917  01FE  0AFD               	incf	___awtoft@sign,f
  3918  01FF                     l1461:	
  3919  01FF  0878               	movf	___awtoft@c,w
  3920  0200  00F0               	movwf	___ftpack@arg
  3921  0201  0879               	movf	___awtoft@c+1,w
  3922  0202  00F1               	movwf	___ftpack@arg+1
  3923  0203  01F2               	clrf	___ftpack@arg+2
  3924  0204  308E               	movlw	142
  3925  0205  00FB               	movwf	??___awtoft
  3926  0206  087B               	movf	??___awtoft,w
  3927  0207  00F3               	movwf	___ftpack@exp
  3928  0208  087D               	movf	___awtoft@sign,w
  3929  0209  00FC               	movwf	??___awtoft+1
  3930  020A  087C               	movf	??___awtoft+1,w
  3931  020B  00F4               	movwf	___ftpack@sign
  3932  020C  3183  2345         	fcall	___ftpack
  3933  020E  0870               	movf	?___ftpack,w
  3934  020F  00F8               	movwf	?___awtoft
  3935  0210  0871               	movf	?___ftpack+1,w
  3936  0211  00F9               	movwf	?___awtoft+1
  3937  0212  0872               	movf	?___ftpack+2,w
  3938  0213  00FA               	movwf	?___awtoft+2
  3939  0214  0008               	return
  3940  0215                     __end_of___awtoft:	
  3941                           
  3942                           	psect	text26
  3943  0345                     __ptext26:	
  3944 ;; *************** function ___ftpack *****************
  3945 ;; Defined at:
  3946 ;;		line 62 in file "/opt/mmplabv310/xc8/sources/common/float.c"
  3947 ;; Parameters:    Size  Location     Type
  3948 ;;  arg             3    0[COMMON] unsigned um
  3949 ;;  exp             1    3[COMMON] unsigned char 
  3950 ;;  sign            1    4[COMMON] unsigned char 
  3951 ;; Auto vars:     Size  Location     Type
  3952 ;;		None
  3953 ;; Return value:  Size  Location     Type
  3954 ;;                  3    0[COMMON] float 
  3955 ;; Registers used:
  3956 ;;		wreg, status,2, status,0
  3957 ;; Tracked objects:
  3958 ;;		On entry : 0/0
  3959 ;;		On exit  : 0/0
  3960 ;;		Unchanged: 0/0
  3961 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3962 ;;      Params:         5       0       0       0
  3963 ;;      Locals:         0       0       0       0
  3964 ;;      Temps:          3       0       0       0
  3965 ;;      Totals:         8       0       0       0
  3966 ;;Total ram usage:        8 bytes
  3967 ;; Hardware stack levels used:    1
  3968 ;; This function calls:
  3969 ;;		Nothing
  3970 ;; This function is called by:
  3971 ;;		___awtoft
  3972 ;;		___ftadd
  3973 ;;		___ftmul
  3974 ;; This function uses a non-reentrant model
  3975 ;;
  3976                           
  3977                           
  3978                           ;psect for function ___ftpack
  3979  0345                     ___ftpack:	
  3980                           
  3981                           ;incstack = 0
  3982                           ; Regs used in ___ftpack: [wreg+status,2+status,0]
  3983  0345  0873               	movf	___ftpack@exp,w
  3984  0346  1903               	btfsc	3,2
  3985  0347  2B4D               	goto	l1303
  3986  0348  0872               	movf	___ftpack@arg+2,w
  3987  0349  0471               	iorwf	___ftpack@arg+1,w
  3988  034A  0470               	iorwf	___ftpack@arg,w
  3989  034B  1D03               	skipz
  3990  034C  2B5E               	goto	l1309
  3991  034D                     l1303:	
  3992  034D  3000               	movlw	0
  3993  034E  00F0               	movwf	?___ftpack
  3994  034F  3000               	movlw	0
  3995  0350  00F1               	movwf	?___ftpack+1
  3996  0351  3000               	movlw	0
  3997  0352  00F2               	movwf	?___ftpack+2
  3998  0353  0008               	return
  3999  0354                     l1307:	
  4000  0354  3001               	movlw	1
  4001  0355  00F5               	movwf	??___ftpack
  4002  0356  0875               	movf	??___ftpack,w
  4003  0357  07F3               	addwf	___ftpack@exp,f
  4004  0358  3001               	movlw	1
  4005  0359                     u1125:	
  4006  0359  36F2               	lsrf	___ftpack@arg+2,f
  4007  035A  0CF1               	rrf	___ftpack@arg+1,f
  4008  035B  0CF0               	rrf	___ftpack@arg,f
  4009  035C  0B89               	decfsz	9,f
  4010  035D  2B59               	goto	u1125
  4011  035E                     l1309:	
  4012  035E  30FE               	movlw	254
  4013  035F  0572               	andwf	___ftpack@arg+2,w
  4014  0360  1903               	btfsc	3,2
  4015  0361  2B77               	goto	l442
  4016  0362  2B54               	goto	l1307
  4017  0363                     l1311:	
  4018  0363  3001               	movlw	1
  4019  0364  00F5               	movwf	??___ftpack
  4020  0365  0875               	movf	??___ftpack,w
  4021  0366  07F3               	addwf	___ftpack@exp,f
  4022  0367  3001               	movlw	1
  4023  0368  07F0               	addwf	___ftpack@arg,f
  4024  0369  3000               	movlw	0
  4025  036A  1803               	skipnc
  4026  036B  3001               	movlw	1
  4027  036C  07F1               	addwf	___ftpack@arg+1,f
  4028  036D  3000               	movlw	0
  4029  036E  1803               	skipnc
  4030  036F  3001               	movlw	1
  4031  0370  07F2               	addwf	___ftpack@arg+2,f
  4032  0371  3001               	movlw	1
  4033  0372                     u1145:	
  4034  0372  36F2               	lsrf	___ftpack@arg+2,f
  4035  0373  0CF1               	rrf	___ftpack@arg+1,f
  4036  0374  0CF0               	rrf	___ftpack@arg,f
  4037  0375  0B89               	decfsz	9,f
  4038  0376  2B72               	goto	u1145
  4039  0377                     l442:	
  4040  0377  30FF               	movlw	255
  4041  0378  0572               	andwf	___ftpack@arg+2,w
  4042  0379  1903               	btfsc	3,2
  4043  037A  2B84               	goto	l1319
  4044  037B  2B63               	goto	l1311
  4045  037C                     l1317:	
  4046  037C  3001               	movlw	1
  4047  037D  02F3               	subwf	___ftpack@exp,f
  4048  037E  3001               	movlw	1
  4049  037F                     u1165:	
  4050  037F  35F0               	lslf	___ftpack@arg,f
  4051  0380  0DF1               	rlf	___ftpack@arg+1,f
  4052  0381  0DF2               	rlf	___ftpack@arg+2,f
  4053  0382  0B89               	decfsz	9,f
  4054  0383  2B7F               	goto	u1165
  4055  0384                     l1319:	
  4056  0384  1BF1               	btfsc	___ftpack@arg+1,7
  4057  0385  2B8A               	goto	l449
  4058  0386  3002               	movlw	2
  4059  0387  0273               	subwf	___ftpack@exp,w
  4060  0388  1803               	skipnc
  4061  0389  2B7C               	goto	l1317
  4062  038A                     l449:	
  4063  038A  1873               	btfsc	___ftpack@exp,0
  4064  038B  2B92               	goto	l450
  4065  038C  30FF               	movlw	255
  4066  038D  05F0               	andwf	___ftpack@arg,f
  4067  038E  307F               	movlw	127
  4068  038F  05F1               	andwf	___ftpack@arg+1,f
  4069  0390  30FF               	movlw	255
  4070  0391  05F2               	andwf	___ftpack@arg+2,f
  4071  0392                     l450:	
  4072  0392  1003               	clrc
  4073  0393  0CF3               	rrf	___ftpack@exp,f
  4074  0394  0873               	movf	___ftpack@exp,w
  4075  0395  00F5               	movwf	??___ftpack
  4076  0396  01F6               	clrf	??___ftpack+1
  4077  0397  01F7               	clrf	??___ftpack+2
  4078  0398  3010               	movlw	16
  4079  0399                     u1205:	
  4080  0399  35F5               	lslf	??___ftpack,f
  4081  039A  0DF6               	rlf	??___ftpack+1,f
  4082  039B  0DF7               	rlf	??___ftpack+2,f
  4083  039C  0B89               	decfsz	9,f
  4084  039D  2B99               	goto	u1205
  4085  039E  0875               	movf	??___ftpack,w
  4086  039F  04F0               	iorwf	___ftpack@arg,f
  4087  03A0  0876               	movf	??___ftpack+1,w
  4088  03A1  04F1               	iorwf	___ftpack@arg+1,f
  4089  03A2  0877               	movf	??___ftpack+2,w
  4090  03A3  04F2               	iorwf	___ftpack@arg+2,f
  4091  03A4  0874               	movf	___ftpack@sign,w
  4092  03A5  1903               	btfsc	3,2
  4093  03A6  0008               	return
  4094  03A7  17F2               	bsf	___ftpack@arg+2,7
  4095  03A8  0008               	return
  4096  03A9                     __end_of___ftpack:	
  4097  007E                     btemp	set	126	;btemp
  4098  007E                     wtemp	set	126
  4099  007E                     wtemp0	set	126
  4100  0080                     wtemp1	set	128
  4101  0082                     wtemp2	set	130
  4102  0084                     wtemp3	set	132
  4103  0086                     wtemp4	set	134
  4104  0088                     wtemp5	set	136
  4105  007F                     wtemp6	set	127
  4106  007E                     ttemp	set	126
  4107  007E                     ttemp0	set	126
  4108  0081                     ttemp1	set	129
  4109  0084                     ttemp2	set	132
  4110  0087                     ttemp3	set	135
  4111  007F                     ttemp4	set	127
  4112  007E                     ltemp	set	126
  4113  007E                     ltemp0	set	126
  4114  0082                     ltemp1	set	130
  4115  0086                     ltemp2	set	134
  4116  0080                     ltemp3	set	128


Data Sizes:
    Strings     25
    Constant    0
    Data        0
    BSS         10
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     59      69
    BANK1            80      0       0
    BANK2            80      0       0

Pointer List with Targets:

    utoa@buf	PTR unsigned char  size(1) Largest target is 9
		 -> main@buf(BANK0[9]), 

    sp__utoa	PTR unsigned char  size(1) Largest target is 9
		 -> main@buf(BANK0[9]), 

    itoa@buf	PTR unsigned char  size(1) Largest target is 9
		 -> main@buf(BANK0[9]), 

    itoa@cp	PTR unsigned char  size(1) Largest target is 9
		 -> main@buf(BANK0[9]), 

    sp__itoa	PTR unsigned char  size(1) Largest target is 9
		 -> main@buf(BANK0[9]), 

    UART_String@letters	PTR unsigned char  size(2) Largest target is 14
		 -> STR_2(CODE[11]), STR_1(CODE[14]), main@buf(BANK0[9]), 

    doCRC@crc	PTR unsigned char  size(1) Largest target is 1
		 -> GetReading@crc_g1(BANK0[1]), 


Critical Paths under _main in COMMON

    _main->_GetReading
    _main->_itoa
    _itoa->_utoa
    _utoa->___lwdiv
    _UART_String->_uart_xmit
    _GetReading->_doCRC
    _I2C_restart->_I2C_check_idle
    _CalcHumid->___awtoft
    _CalcHumid->___ftmul
    _CalcHumid->___fttol
    ___ftmul->___ftpack
    ___ftadd->___ftmul
    ___awtoft->___ftpack

Critical Paths under _main in BANK0

    _main->_CalcHumid
    _itoa->_utoa
    _CalcHumid->___ftadd
    ___ftadd->___ftmul

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                24    24      0   11168
                                             37 BANK0     22    22      0
                          _CalcHumid
                         _GetReading
                        _UART_String
                            _init_io
                               _itoa
                        _serial_init
                          _uart_xmit
 ---------------------------------------------------------------------------------
 (1) _serial_init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _itoa                                                 7     3      4    1503
                                             13 COMMON     1     1      0
                                              4 BANK0      6     2      4
                               _utoa
 ---------------------------------------------------------------------------------
 (2) _utoa                                                 9     5      4    1074
                                              8 COMMON     5     1      4
                                              0 BANK0      4     4      0
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              6     2      4     265
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              8     4      4     374
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (1) _init_io                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _UART_String                                          6     4      2     960
                                              2 COMMON     6     4      2
                          _uart_xmit
 ---------------------------------------------------------------------------------
 (1) _uart_xmit                                            2     0      2     605
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (1) _GetReading                                          29    21      8     698
                                              6 COMMON     8     0      8
                                              0 BANK0     20    20      0
                            _I2C_ACK
                   _I2C_Control_Read
                  _I2C_Control_Write
                            _I2C_NAK
                      _I2C_Start_Bit
                       _I2C_Stop_Bit
                        _I2C_restart
                        _RX_I2C_Data
                      _Send_I2C_Data
                              _doCRC
 ---------------------------------------------------------------------------------
 (2) _doCRC                                                6     5      1     264
                                              0 COMMON     6     5      1
 ---------------------------------------------------------------------------------
 (2) _Send_I2C_Data                                        2     0      2     128
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (2) _RX_I2C_Data                                          2     2      0      23
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) _I2C_restart                                          0     0      0      46
                     _I2C_check_idle
 ---------------------------------------------------------------------------------
 (3) _I2C_check_idle                                       3     3      0      46
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (2) _I2C_Stop_Bit                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C_Start_Bit                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C_NAK                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C_Control_Write                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C_Control_Read                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C_ACK                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _CalcHumid                                           14    12      2    7236
                                             23 BANK0     14    12      2
                           ___awtoft
                            ___ftadd
                            ___ftmul
                            ___fttol
 ---------------------------------------------------------------------------------
 (2) ___fttol                                             14    10      4     358
                                              0 COMMON    14    10      4
 ---------------------------------------------------------------------------------
 (2) ___ftmul                                             16    10      6    2206
                                              8 COMMON     6     0      6
                                              0 BANK0     10    10      0
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___ftadd                                             13     7      6    2694
                                             10 BANK0     13     7      6
                            ___ftmul (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___awtoft                                             6     3      3    1812
                                              8 COMMON     6     3      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (3) ___ftpack                                             8     3      5    1668
                                              0 COMMON     8     3      5
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _CalcHumid
     ___awtoft
       ___ftpack
     ___ftadd
       ___ftmul (ARG)
         ___ftpack
       ___ftpack (ARG)
     ___ftmul
       ___ftpack
     ___fttol
   _GetReading
     _I2C_ACK
     _I2C_Control_Read
     _I2C_Control_Write
     _I2C_NAK
     _I2C_Start_Bit
     _I2C_Stop_Bit
     _I2C_restart
       _I2C_check_idle
     _RX_I2C_Data
     _Send_I2C_Data
     _doCRC
   _UART_String
     _uart_xmit
   _init_io
   _itoa
     _utoa
       ___lwdiv
       ___lwmod
   _serial_init
   _uart_xmit

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM              F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      53       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50     3B      45       6       86.2%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
DATA                 0      0      53      11        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.35 build -356382666 
Symbol Table                                                                                   Sat Nov 21 01:32:21 2015

                         _i 005D                 __CFG_CP$OFF 0000                 _SSPSTATbits 0214  
                        _BF 10A0                          l84 0142                ___ftadd@exp1 0036  
              ___ftadd@exp2 0035                 __CFG_LVP$ON 0000                ___ftadd@sign 0034  
                       l113 015E                         l130 01B6                         l122 0166  
                       l107 0155                         l142 0196                         l151 014D  
                       l119 0164                         l136 01A6                         l146 01B8  
                       l185 070B                         l450 0392                         l442 0377  
                       l533 047A                         l449 038A                         l473 069A  
                       l548 032F                         _PEN 10B2             __end_of_I2C_ACK 0159  
           __end_of_I2C_NAK 0189                         _tb1 0061                         _tb2 0062  
              __CFG_BORV$LO 0000                         wreg 0009                __CFG_IESO$ON 0000  
               _RX_I2C_Data 0162                        l1311 0363                        l1303 034D  
                      l1307 0354                        l1317 037C                        l1309 035E  
                      l1501 0670                        l1421 01AD                        l1341 02B7  
                      l1319 0384                        l1511 068C                        l1503 0675  
                      l1343 02C3                        l1521 06BE                        l1513 0696  
                      l1505 0679                        l1353 02DE                        l1531 06D9  
                      l1611 0464                        l1451 0180                        l1435 018D  
                      l1371 02A1                        l1461 01FF                        l1517 06AC  
                      l1541 04AB                        l1429 019D                        l1445 0172  
                      l1349 02D5                        l1365 0289                        l1471 0623  
                      l1623 048B                        l1367 0295                        l1375 02AA  
                      l1481 0639                        l1617 0471                        l1609 0456  
                      l1475 062A                        l1571 0518                        l1563 0504  
                      l1547 04C1                        l1619 047D                        l1493 0653  
                      l1629 02E9                        l1575 0520                        l1559 04FC  
                      l1591 0426                        l1399 027E                        l1639 0307  
                      l1729 0557                        l1499 0666                        l1781 0217  
                      l1793 024D                        STR_1 0800                        STR_2 080E  
                      u2020 0757                        u1205 0399                        u1125 0359  
                      u1145 0372                        u1305 028C                        u1235 02BA  
                      u1165 037F                        u1325 029B                        u2037 0710  
                      u1255 02C4                        u1335 02A2                        u2047 0744  
                      u1265 02CE                        u2057 0761                        u1275 02D6  
                      u2067 0771                        u2077 056D                        u1625 0667  
                      u1655 067A                        u1825 0521                        u1595 0654  
                      u1835 0527                        u1755 04CD                        u1685 068D  
                      u1765 04DD                        u1925 0472                        u1785 0505  
                      u1865 042D                        u1795 050B                        u1990 05F6  
                      u1895 0457                        _RCEN 10B3                        _RSEN 10B1  
         ?_I2C_Control_Read 0070                __CFG_WRT$OFF 0000               __CFG_FCMEN$ON 0000  
                      _main 06F1                ___ftpack@arg 0070                        _kirk 005F  
                      _itoa 0235                ___ftpack@exp 0073                        fsr0h 0005  
                      fsr1h 0007                        fsr0l 0004                        indf0 0000  
                      indf1 0001                        fsr1l 0006                        btemp 007E  
                      _utoa 02E3          ??_I2C_Control_Read 0070               __CFG_BOREN$ON 0000  
                      ltemp 007E                        start 0002                        ttemp 007E  
                      wtemp 007E               __CFG_MCLRE$ON 0000                ___ftmul@cntr 0028  
              ___ftmul@sign 0029        __size_of_I2C_restart 0008               __CFG_LPBOR$ON 0000  
                _GetReading 0547                ___fttol@exp1 007D                ___fttol@lval 0079  
     __size_of_I2C_Stop_Bit 000D                       ?_main 0070                       _ACKEN 10B4  
                     _ACKDT 10B5                       ?_itoa 0024             __end_of___ftadd 06F1  
             __CFG_WDTE$OFF 0000                       ?_utoa 0078             __end_of___ftmul 0547  
           __end_of___fttol 0494             __end_of___lwdiv 02E3             __end_of___lwmod 02AF  
         _I2C_Control_Write 01A8                       _TRISA 008C                       _TRISB 008D  
                     _TXREG 019A                main@received 0053          ?_I2C_Control_Write 0070  
                     _doCRC 0259               ___awtoft@sign 007D                       _kirk2 0060  
           __end_of_init_io 01F5               ___ftpack@sign 0074                       ltemp0 007E  
                     ltemp1 0082                       ltemp2 0086                       ltemp3 0080  
       ??_I2C_Control_Write 0070                       ttemp0 007E                       ttemp1 0081  
                     ttemp2 0084                       ttemp3 0087                       ttemp4 007F  
                     utoa@c 0022                       utoa@v 0020                       status 0003  
                     wtemp0 007E                       wtemp1 0080                       wtemp2 0082  
                     wtemp3 0084                       wtemp4 0086                       wtemp5 0088  
                     wtemp6 007F          __size_of_CalcHumid 0065                _I2C_Stop_Bit 016E  
           __initialization 07F3                __end_of_main 07F3                __end_of_itoa 0259  
              __end_of_utoa 0345                   ??_I2C_ACK 0070                   ??_I2C_NAK 0070  
          CalcHumid@rcv_val 003E   __end_of_I2C_Control_Write 01B8                      ??_main 0045  
             ___fttol@sign1 0078                      ??_itoa 007D      __size_of_I2C_Start_Bit 000F  
                    ??_utoa 007C                      ?_doCRC 0070            __end_of___awtoft 0215  
                    _ANSELA 018C                      _ANSELB 018D                      _ANSELC 018E  
          __end_of___ftpack 03A9                      _SPBRGH 019C                      _SPBRGL 019B  
                    _SSPADD 0212                      _SSPCON 0215                      _SSPBUF 0211  
            __CFG_PWRTE$OFF 0000                ?_UART_String 0072                ?_serial_init 0070  
    __size_of_Send_I2C_Data 0009                   ??___ftadd 0030              __CFG_STVREN$ON 0000  
               ?_GetReading 0076                   ??___ftmul 0020                   ??___fttol 0074  
                 ??___lwdiv 0074                   ??___lwmod 0074                      main@ct 0048  
     ___ftmul@f3_as_product 0025                      itoa@cp 0028                   ??_init_io 0070  
         __end_of_CalcHumid 040E       Send_I2C_Data@databyte 0070     __end_of__initialization 07FD  
             _I2C_Start_Bit 0189                  ___ftadd@f1 002A                  ___ftadd@f2 002D  
              CalcHumid@ans 0042                  ___awtoft@c 0078                  ___ftmul@f1 0078  
                ___ftmul@f2 007B                  ___fttol@f1 0070              __pcstackCOMMON 0070  
             __end_of_doCRC 0283  __size_of_I2C_Control_Write 0010              _OPTION_REGbits 0095  
                   ??_doCRC 0071               _Send_I2C_Data 0159                ?_RX_I2C_Data 0070  
                __pbssBANK0 005B         __size_of_GetReading 00B4              ?_I2C_Start_Bit 0070  
                __pmaintext 06F1                     _I2C_ACK 0150   __size_of_I2C_Control_Read 0010  
                   _I2C_NAK 017B                   ?___awtoft 0078                   ?___ftpack 0070  
                   _ACK_bit 005B          __size_of_uart_xmit 0006              ?_Send_I2C_Data 0070  
                   _SSP1ADD 0212                     _SSP1BUF 0211                     _SSPCON2 0216  
                   _SSPSTAT 0214     __size_of_I2C_check_idle 0010               ??_I2C_restart 0073  
           RX_I2C_Data@byte 0071                     doCRC@b7 0073                     doCRC@ch 0072  
                   doCRC@ix 0074                     ___ftadd 05FB                     ___ftmul 0494  
                   ___fttol 040E        __size_of_UART_String 0020                     ___lwdiv 02AF  
                   ___lwmod 0283        __size_of_serial_init 0011                  ??___awtoft 007B  
                ??___ftpack 0075                     __ptext1 01C8                     __ptext2 0235  
                   __ptext3 02E3                     __ptext4 0283                     __ptext5 02AF  
                   __ptext6 01D9                     __ptext7 0215                     __ptext8 0142  
                   __ptext9 0547                     _init_io 01D9                     main@buf 004A  
           ??_I2C_Start_Bit 0070        end_of_initialization 07FD                     itoa@buf 0029  
                   itoa@val 0024           __end_of_uart_xmit 0148                   _RCSTAbits 019D  
              ??_GetReading 0020         __end_of_I2C_restart 0150                __pstringtext 0800  
                   utoa@buf 0023                     utoa@val 0078             ??_Send_I2C_Data 0072  
          __CFG_FOSC$INTOSC 0000                   _TRISAbits 008C                   _TRISBbits 008D  
                 _TRISCbits 008E                   _CalcHumid 03A9        uart_xmit@mydata_byte 0070  
        __end_of_GetReading 05FB        __size_of_RX_I2C_Data 000C                   _TXSTAbits 019E  
               ___ftmul@exp 0024            _I2C_Control_Read 0198         start_initialization 07F3  
                ?_CalcHumid 0037              _I2C_check_idle 01B8         I2C_check_idle@byte1 0071  
       I2C_check_idle@byte2 0072                 _I2C_restart 0148                    ?_I2C_ACK 0070  
                  ?_I2C_NAK 0070           __size_of___awtoft 0020           __size_of___ftpack 0064  
               CalcHumid@b1 0041                 CalcHumid@b2 0037                   ___latbits 0001  
             __pcstackBANK0 0020      __end_of_I2C_check_idle 01C8               ?_I2C_Stop_Bit 0070  
          ___lwdiv@dividend 0072                    ?___ftadd 002A                    ?___ftmul 0078  
                  ?___fttol 0070                    ?___lwdiv 0070                    ?___lwmod 0070  
                  ?_init_io 0070              __size_of_doCRC 002A            ___lwdiv@quotient 0075  
               ??_CalcHumid 0039             ?_I2C_check_idle 0070          UART_String@letters 0072  
          GetReading@crc_g1 0033                    _LATCbits 010E              ??_I2C_Stop_Bit 0070  
                  _PIE1bits 0091               ??_UART_String 0074                    _PIR1bits 0011  
              GetReading@hh 0029                GetReading@hl 002A                GetReading@th 0027  
              GetReading@tl 0028               ??_serial_init 0070                   _tempbyte1 0063  
                 _tempbyte2 0064                   _uart_xmit 0142                    _SSP1STAT 0214  
          __size_of_I2C_ACK 0009            __size_of_I2C_NAK 000E    __end_of_I2C_Control_Read 01A8  
     __end_of_I2C_Start_Bit 0198                  ?_uart_xmit 0070            __size_of___ftadd 00F6  
                  doCRC@crc 0070            __size_of___ftmul 00B3            __size_of___fttol 0086  
          __size_of___lwdiv 0034            __size_of___lwmod 002C                    ___awtoft 01F5  
                  ___ftpack 0345         __end_of_UART_String 0235         __end_of_serial_init 01D9  
          __size_of_init_io 001C             ___lwdiv@divisor 0070       __end_of_Send_I2C_Data 0162  
           ___lwdiv@counter 0077                    __ptext10 0259                    __ptext11 0159  
                  __ptext20 0150                    __ptext12 0162                    __ptext21 03A9  
                  __ptext13 0148                    __ptext22 040E                    __ptext14 01B8  
                  __ptext23 0494                    __ptext15 016E                    __ptext24 05FB  
                  __ptext16 0189                    __ptext25 01F5                    __ptext17 017B  
                  __ptext26 0345                    __ptext18 01A8                    __ptext19 0198  
             ??_RX_I2C_Data 0070                _SSP1CON2bits 0216               __size_of_main 0102  
             __size_of_itoa 0024               __size_of_utoa 0062                ?_I2C_restart 0070  
           GetReading@local 002B                UART_String@i 0076                _SSP1STATbits 0214  
                _INTCONbits 000B        __end_of_I2C_Stop_Bit 017B                    itoa@base 0026  
          ___lwmod@dividend 0072           __CFG_CLKOUTEN$OFF 0000         __end_of_RX_I2C_Data 016E  
            GetReading@crc1 0025              GetReading@crc2 0026                  _OSCCONbits 0099  
               _UART_String 0215                 _serial_init 01C8                 ??_uart_xmit 0072  
                  utoa@base 007A             ___lwmod@divisor 0070            ??_I2C_check_idle 0070  
           ___lwmod@counter 0075                 _SSPCON2bits 0216                  _SSPCONbits 0215  
