

Microchip Technology PIC LITE Macro Assembler V1.35 build -356382666 
                                                                                               Fri Nov 13 00:36:13 2015

Microchip Technology Omniscient Code Generator v1.35 (Free mode) build 201507080246
     1                           	processor	16F1508
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2
    10                           	psect	text2,local,class=CODE,merge=1,delta=2
    11                           	psect	text3,local,class=CODE,merge=1,delta=2
    12                           	psect	text4,local,class=CODE,merge=1,delta=2
    13                           	psect	text5,local,class=CODE,merge=1,delta=2
    14                           	psect	text6,local,class=CODE,merge=1,delta=2
    15                           	psect	text7,local,class=CODE,merge=1,delta=2
    16                           	psect	text8,local,class=CODE,merge=1,delta=2
    17                           	psect	text9,local,class=CODE,merge=1,delta=2
    18                           	psect	text10,local,class=CODE,merge=1,delta=2
    19                           	psect	text11,local,class=CODE,merge=1,delta=2
    20                           	psect	text12,local,class=CODE,merge=1,delta=2
    21                           	psect	text13,local,class=CODE,merge=1,delta=2
    22                           	dabs	1,0x7E,2
    23  0000                     	;# 
    24  0001                     	;# 
    25  0002                     	;# 
    26  0003                     	;# 
    27  0004                     	;# 
    28  0005                     	;# 
    29  0006                     	;# 
    30  0007                     	;# 
    31  0008                     	;# 
    32  0009                     	;# 
    33  000A                     	;# 
    34  000B                     	;# 
    35  000C                     	;# 
    36  000D                     	;# 
    37  000E                     	;# 
    38  0011                     	;# 
    39  0012                     	;# 
    40  0013                     	;# 
    41  0015                     	;# 
    42  0016                     	;# 
    43  0016                     	;# 
    44  0017                     	;# 
    45  0018                     	;# 
    46  0019                     	;# 
    47  001A                     	;# 
    48  001B                     	;# 
    49  001C                     	;# 
    50  008C                     	;# 
    51  008D                     	;# 
    52  008E                     	;# 
    53  0091                     	;# 
    54  0092                     	;# 
    55  0093                     	;# 
    56  0095                     	;# 
    57  0096                     	;# 
    58  0097                     	;# 
    59  0099                     	;# 
    60  009A                     	;# 
    61  009B                     	;# 
    62  009B                     	;# 
    63  009C                     	;# 
    64  009D                     	;# 
    65  009E                     	;# 
    66  009F                     	;# 
    67  010C                     	;# 
    68  010D                     	;# 
    69  010E                     	;# 
    70  0111                     	;# 
    71  0112                     	;# 
    72  0113                     	;# 
    73  0114                     	;# 
    74  0115                     	;# 
    75  0116                     	;# 
    76  0117                     	;# 
    77  0118                     	;# 
    78  0119                     	;# 
    79  011D                     	;# 
    80  018C                     	;# 
    81  018D                     	;# 
    82  018E                     	;# 
    83  0191                     	;# 
    84  0191                     	;# 
    85  0192                     	;# 
    86  0193                     	;# 
    87  0193                     	;# 
    88  0194                     	;# 
    89  0195                     	;# 
    90  0196                     	;# 
    91  0197                     	;# 
    92  0199                     	;# 
    93  019A                     	;# 
    94  019B                     	;# 
    95  019B                     	;# 
    96  019C                     	;# 
    97  019D                     	;# 
    98  019E                     	;# 
    99  019F                     	;# 
   100  020C                     	;# 
   101  020D                     	;# 
   102  0211                     	;# 
   103  0211                     	;# 
   104  0212                     	;# 
   105  0212                     	;# 
   106  0213                     	;# 
   107  0213                     	;# 
   108  0214                     	;# 
   109  0214                     	;# 
   110  0215                     	;# 
   111  0215                     	;# 
   112  0215                     	;# 
   113  0216                     	;# 
   114  0216                     	;# 
   115  0217                     	;# 
   116  0217                     	;# 
   117  0391                     	;# 
   118  0392                     	;# 
   119  0393                     	;# 
   120  0394                     	;# 
   121  0395                     	;# 
   122  0396                     	;# 
   123  0498                     	;# 
   124  0498                     	;# 
   125  0499                     	;# 
   126  049A                     	;# 
   127  049B                     	;# 
   128  049B                     	;# 
   129  049C                     	;# 
   130  049D                     	;# 
   131  049E                     	;# 
   132  049F                     	;# 
   133  0611                     	;# 
   134  0612                     	;# 
   135  0613                     	;# 
   136  0613                     	;# 
   137  0614                     	;# 
   138  0615                     	;# 
   139  0616                     	;# 
   140  0616                     	;# 
   141  0617                     	;# 
   142  0618                     	;# 
   143  0619                     	;# 
   144  0619                     	;# 
   145  061A                     	;# 
   146  061B                     	;# 
   147  061C                     	;# 
   148  061C                     	;# 
   149  0691                     	;# 
   150  0692                     	;# 
   151  0693                     	;# 
   152  0694                     	;# 
   153  0695                     	;# 
   154  0F0F                     	;# 
   155  0F10                     	;# 
   156  0F11                     	;# 
   157  0F12                     	;# 
   158  0F13                     	;# 
   159  0F14                     	;# 
   160  0F15                     	;# 
   161  0F16                     	;# 
   162  0F17                     	;# 
   163  0F18                     	;# 
   164  0F19                     	;# 
   165  0F1A                     	;# 
   166  0F1B                     	;# 
   167  0F1C                     	;# 
   168  0F1D                     	;# 
   169  0F1E                     	;# 
   170  0F1F                     	;# 
   171  0F20                     	;# 
   172  0F21                     	;# 
   173  0F22                     	;# 
   174  0F23                     	;# 
   175  0F24                     	;# 
   176  0F25                     	;# 
   177  0F26                     	;# 
   178  0F27                     	;# 
   179  0F28                     	;# 
   180  0F29                     	;# 
   181  0F2A                     	;# 
   182  0F2B                     	;# 
   183  0F2C                     	;# 
   184  0F2D                     	;# 
   185  0F2E                     	;# 
   186  0F2F                     	;# 
   187  0F8C                     	;# 
   188  0F8D                     	;# 
   189  0F91                     	;# 
   190  0F95                     	;# 
   191  0F96                     	;# 
   192  0F97                     	;# 
   193  0F9C                     	;# 
   194  0F9D                     	;# 
   195  0F9E                     	;# 
   196  0FE3                     	;# 
   197  0FE4                     	;# 
   198  0FE5                     	;# 
   199  0FE6                     	;# 
   200  0FE7                     	;# 
   201  0FE8                     	;# 
   202  0FE9                     	;# 
   203  0FEA                     	;# 
   204  0FEB                     	;# 
   205  0FED                     	;# 
   206  0FEE                     	;# 
   207  0FEF                     	;# 
   208  0000                     	;# 
   209  0001                     	;# 
   210  0002                     	;# 
   211  0003                     	;# 
   212  0004                     	;# 
   213  0005                     	;# 
   214  0006                     	;# 
   215  0007                     	;# 
   216  0008                     	;# 
   217  0009                     	;# 
   218  000A                     	;# 
   219  000B                     	;# 
   220  000C                     	;# 
   221  000D                     	;# 
   222  000E                     	;# 
   223  0011                     	;# 
   224  0012                     	;# 
   225  0013                     	;# 
   226  0015                     	;# 
   227  0016                     	;# 
   228  0016                     	;# 
   229  0017                     	;# 
   230  0018                     	;# 
   231  0019                     	;# 
   232  001A                     	;# 
   233  001B                     	;# 
   234  001C                     	;# 
   235  008C                     	;# 
   236  008D                     	;# 
   237  008E                     	;# 
   238  0091                     	;# 
   239  0092                     	;# 
   240  0093                     	;# 
   241  0095                     	;# 
   242  0096                     	;# 
   243  0097                     	;# 
   244  0099                     	;# 
   245  009A                     	;# 
   246  009B                     	;# 
   247  009B                     	;# 
   248  009C                     	;# 
   249  009D                     	;# 
   250  009E                     	;# 
   251  009F                     	;# 
   252  010C                     	;# 
   253  010D                     	;# 
   254  010E                     	;# 
   255  0111                     	;# 
   256  0112                     	;# 
   257  0113                     	;# 
   258  0114                     	;# 
   259  0115                     	;# 
   260  0116                     	;# 
   261  0117                     	;# 
   262  0118                     	;# 
   263  0119                     	;# 
   264  011D                     	;# 
   265  018C                     	;# 
   266  018D                     	;# 
   267  018E                     	;# 
   268  0191                     	;# 
   269  0191                     	;# 
   270  0192                     	;# 
   271  0193                     	;# 
   272  0193                     	;# 
   273  0194                     	;# 
   274  0195                     	;# 
   275  0196                     	;# 
   276  0197                     	;# 
   277  0199                     	;# 
   278  019A                     	;# 
   279  019B                     	;# 
   280  019B                     	;# 
   281  019C                     	;# 
   282  019D                     	;# 
   283  019E                     	;# 
   284  019F                     	;# 
   285  020C                     	;# 
   286  020D                     	;# 
   287  0211                     	;# 
   288  0211                     	;# 
   289  0212                     	;# 
   290  0212                     	;# 
   291  0213                     	;# 
   292  0213                     	;# 
   293  0214                     	;# 
   294  0214                     	;# 
   295  0215                     	;# 
   296  0215                     	;# 
   297  0215                     	;# 
   298  0216                     	;# 
   299  0216                     	;# 
   300  0217                     	;# 
   301  0217                     	;# 
   302  0391                     	;# 
   303  0392                     	;# 
   304  0393                     	;# 
   305  0394                     	;# 
   306  0395                     	;# 
   307  0396                     	;# 
   308  0498                     	;# 
   309  0498                     	;# 
   310  0499                     	;# 
   311  049A                     	;# 
   312  049B                     	;# 
   313  049B                     	;# 
   314  049C                     	;# 
   315  049D                     	;# 
   316  049E                     	;# 
   317  049F                     	;# 
   318  0611                     	;# 
   319  0612                     	;# 
   320  0613                     	;# 
   321  0613                     	;# 
   322  0614                     	;# 
   323  0615                     	;# 
   324  0616                     	;# 
   325  0616                     	;# 
   326  0617                     	;# 
   327  0618                     	;# 
   328  0619                     	;# 
   329  0619                     	;# 
   330  061A                     	;# 
   331  061B                     	;# 
   332  061C                     	;# 
   333  061C                     	;# 
   334  0691                     	;# 
   335  0692                     	;# 
   336  0693                     	;# 
   337  0694                     	;# 
   338  0695                     	;# 
   339  0F0F                     	;# 
   340  0F10                     	;# 
   341  0F11                     	;# 
   342  0F12                     	;# 
   343  0F13                     	;# 
   344  0F14                     	;# 
   345  0F15                     	;# 
   346  0F16                     	;# 
   347  0F17                     	;# 
   348  0F18                     	;# 
   349  0F19                     	;# 
   350  0F1A                     	;# 
   351  0F1B                     	;# 
   352  0F1C                     	;# 
   353  0F1D                     	;# 
   354  0F1E                     	;# 
   355  0F1F                     	;# 
   356  0F20                     	;# 
   357  0F21                     	;# 
   358  0F22                     	;# 
   359  0F23                     	;# 
   360  0F24                     	;# 
   361  0F25                     	;# 
   362  0F26                     	;# 
   363  0F27                     	;# 
   364  0F28                     	;# 
   365  0F29                     	;# 
   366  0F2A                     	;# 
   367  0F2B                     	;# 
   368  0F2C                     	;# 
   369  0F2D                     	;# 
   370  0F2E                     	;# 
   371  0F2F                     	;# 
   372  0F8C                     	;# 
   373  0F8D                     	;# 
   374  0F91                     	;# 
   375  0F95                     	;# 
   376  0F96                     	;# 
   377  0F97                     	;# 
   378  0F9C                     	;# 
   379  0F9D                     	;# 
   380  0F9E                     	;# 
   381  0FE3                     	;# 
   382  0FE4                     	;# 
   383  0FE5                     	;# 
   384  0FE6                     	;# 
   385  0FE7                     	;# 
   386  0FE8                     	;# 
   387  0FE9                     	;# 
   388  0FEA                     	;# 
   389  0FEB                     	;# 
   390  0FED                     	;# 
   391  0FEE                     	;# 
   392  0FEF                     	;# 
   393  000B                     _INTCONbits	set	11
   394  0011                     _PIR1bits	set	17
   395  0095                     _OPTION_REGbits	set	149
   396  0099                     _OSCCONbits	set	153
   397  0091                     _PIE1bits	set	145
   398  008C                     _TRISA	set	140
   399  008C                     _TRISAbits	set	140
   400  008D                     _TRISB	set	141
   401  008D                     _TRISBbits	set	141
   402  008E                     _TRISCbits	set	142
   403  010E                     _LATCbits	set	270
   404  018C                     _ANSELA	set	396
   405  018D                     _ANSELB	set	397
   406  018E                     _ANSELC	set	398
   407  019D                     _RCSTAbits	set	413
   408  019C                     _SPBRGH	set	412
   409  019B                     _SPBRGL	set	411
   410  019A                     _TXREG	set	410
   411  019E                     _TXSTAbits	set	414
   412  0212                     _SSP1ADD	set	530
   413  0211                     _SSP1BUF	set	529
   414  0216                     _SSP1CON2bits	set	534
   415  0214                     _SSP1STAT	set	532
   416  0214                     _SSP1STATbits	set	532
   417  0212                     _SSPADD	set	530
   418  0211                     _SSPBUF	set	529
   419  0215                     _SSPCON	set	533
   420  0216                     _SSPCON2	set	534
   421  0216                     _SSPCON2bits	set	534
   422  0215                     _SSPCONbits	set	533
   423  0214                     _SSPSTAT	set	532
   424  0214                     _SSPSTATbits	set	532
   425  10B5                     _ACKDT	set	4277
   426  10B4                     _ACKEN	set	4276
   427  10A0                     _BF	set	4256
   428  10B2                     _PEN	set	4274
   429  10B3                     _RCEN	set	4275
   430  10B1                     _RSEN	set	4273
   431                           
   432                           ; #config settings
   433  0000                     
   434                           	psect	cinit
   435  07F2                     start_initialization:	
   436  07F2                     __initialization:	
   437                           
   438                           ; Clear objects allocated to COMMON
   439  07F2  01F0               	clrf	__pbssCOMMON& (0+127)
   440  07F3  01F1               	clrf	(__pbssCOMMON+1)& (0+127)
   441  07F4  01F2               	clrf	(__pbssCOMMON+2)& (0+127)
   442  07F5  01F3               	clrf	(__pbssCOMMON+3)& (0+127)
   443  07F6  01F4               	clrf	(__pbssCOMMON+4)& (0+127)
   444  07F7  01F5               	clrf	(__pbssCOMMON+5)& (0+127)
   445  07F8  01F6               	clrf	(__pbssCOMMON+6)& (0+127)
   446                           
   447                           ; Clear objects allocated to BANK0
   448  07F9  01A0               	clrf	__pbssBANK0& (0+127)
   449  07FA  01A1               	clrf	(__pbssBANK0+1)& (0+127)
   450  07FB  01A2               	clrf	(__pbssBANK0+2)& (0+127)
   451  07FC  01A3               	clrf	(__pbssBANK0+3)& (0+127)
   452  07FD                     end_of_initialization:	
   453                           ;End of C runtime variable initialization code
   454                           
   455  07FD                     __end_of__initialization:	
   456  07FD  0020               	movlb	0
   457  07FE  3187  2F17         	ljmp	_main	;jump to C main() function
   458                           
   459                           	psect	bssCOMMON
   460  0070                     __pbssCOMMON:	
   461  0070                     _byte:	
   462  0070                     	ds	1
   463  0071                     _kirk:	
   464  0071                     	ds	1
   465  0072                     _kirk2:	
   466  0072                     	ds	1
   467  0073                     _tb1:	
   468  0073                     	ds	1
   469  0074                     _tb2:	
   470  0074                     	ds	1
   471  0075                     _tempbyte1:	
   472  0075                     	ds	1
   473  0076                     _tempbyte2:	
   474  0076                     	ds	1
   475                           
   476                           	psect	bssBANK0
   477  0020                     __pbssBANK0:	
   478  0020                     _ACK_bit:	
   479  0020                     	ds	2
   480  0022                     _i:	
   481  0022                     	ds	2
   482                           
   483                           	psect	cstackCOMMON
   484  0077                     __pcstackCOMMON:	
   485  0077                     ?_init_io:	
   486  0077                     ??_init_io:	
   487                           ; 0 bytes @ 0x0
   488                           
   489  0077                     ?_uart_xmit:	
   490                           ; 0 bytes @ 0x0
   491                           
   492  0077                     ?_serial_init:	
   493                           ; 0 bytes @ 0x0
   494                           
   495  0077                     ?_I2C_ACK:	
   496                           ; 0 bytes @ 0x0
   497                           
   498  0077                     ??_I2C_ACK:	
   499                           ; 0 bytes @ 0x0
   500                           
   501  0077                     ?_Send_I2C_Data:	
   502                           ; 0 bytes @ 0x0
   503                           
   504  0077                     ??_RX_I2C_Data:	
   505                           ; 0 bytes @ 0x0
   506                           
   507  0077                     ?_I2C_Control_Write:	
   508                           ; 0 bytes @ 0x0
   509                           
   510  0077                     ??_I2C_Control_Write:	
   511                           ; 0 bytes @ 0x0
   512                           
   513  0077                     ?_I2C_Control_Read:	
   514                           ; 0 bytes @ 0x0
   515                           
   516  0077                     ??_I2C_Control_Read:	
   517                           ; 0 bytes @ 0x0
   518                           
   519  0077                     ?_I2C_Start_Bit:	
   520                           ; 0 bytes @ 0x0
   521                           
   522  0077                     ??_I2C_Start_Bit:	
   523                           ; 0 bytes @ 0x0
   524                           
   525  0077                     ?_I2C_check_idle:	
   526                           ; 0 bytes @ 0x0
   527                           
   528  0077                     ??_I2C_check_idle:	
   529                           ; 0 bytes @ 0x0
   530                           
   531  0077                     ?_I2C_restart:	
   532                           ; 0 bytes @ 0x0
   533                           
   534  0077                     ?_I2C_Stop_Bit:	
   535                           ; 0 bytes @ 0x0
   536                           
   537  0077                     ??_I2C_Stop_Bit:	
   538                           ; 0 bytes @ 0x0
   539                           
   540  0077                     ?_I2C_NAK:	
   541                           ; 0 bytes @ 0x0
   542                           
   543  0077                     ??_I2C_NAK:	
   544                           ; 0 bytes @ 0x0
   545                           
   546  0077                     ?_RX_I2C_Data:	
   547                           ; 0 bytes @ 0x0
   548                           
   549  0077                     ?_main:	
   550                           ; 1 bytes @ 0x0
   551                           
   552  0077                     uart_xmit@mydata_byte:	
   553                           ; 2 bytes @ 0x0
   554                           
   555  0077                     Send_I2C_Data@databyte:	
   556                           ; 2 bytes @ 0x0
   557                           
   558                           
   559                           ; 2 bytes @ 0x0
   560  0077                     	ds	1
   561  0078                     I2C_check_idle@byte1:	
   562                           
   563                           ; 1 bytes @ 0x1
   564  0078                     	ds	1
   565  0079                     ??_uart_xmit:	
   566  0079                     ??_serial_init:	
   567                           ; 0 bytes @ 0x2
   568                           
   569  0079                     ??_Send_I2C_Data:	
   570                           ; 0 bytes @ 0x2
   571                           
   572  0079                     I2C_check_idle@byte2:	
   573                           ; 0 bytes @ 0x2
   574                           
   575                           
   576                           ; 1 bytes @ 0x2
   577  0079                     	ds	1
   578  007A                     ??_I2C_restart:	
   579                           
   580                           ; 0 bytes @ 0x3
   581  007A                     	ds	1
   582  007B                     ??_main:	
   583                           
   584                           ; 0 bytes @ 0x4
   585  007B                     	ds	3
   586                           
   587                           	psect	maintext
   588  0717                     __pmaintext:	
   589 ;;
   590 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   591 ;;
   592 ;; *************** function _main *****************
   593 ;; Defined at:
   594 ;;		line 239 in file "main.c"
   595 ;; Parameters:    Size  Location     Type
   596 ;;		None
   597 ;; Auto vars:     Size  Location     Type
   598 ;;		None
   599 ;; Return value:  Size  Location     Type
   600 ;;                  2  154[None  ] int 
   601 ;; Registers used:
   602 ;;		wreg, status,2, status,0, pclath, cstack
   603 ;; Tracked objects:
   604 ;;		On entry : B1F/0
   605 ;;		On exit  : 0/0
   606 ;;		Unchanged: 0/0
   607 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   608 ;;      Params:         0       0       0       0
   609 ;;      Locals:         0       0       0       0
   610 ;;      Temps:          3       0       0       0
   611 ;;      Totals:         3       0       0       0
   612 ;;Total ram usage:        3 bytes
   613 ;; Hardware stack levels required when called:    2
   614 ;; This function calls:
   615 ;;		_I2C_ACK
   616 ;;		_I2C_Control_Read
   617 ;;		_I2C_Control_Write
   618 ;;		_I2C_NAK
   619 ;;		_I2C_Start_Bit
   620 ;;		_I2C_Stop_Bit
   621 ;;		_I2C_restart
   622 ;;		_RX_I2C_Data
   623 ;;		_Send_I2C_Data
   624 ;;		_init_io
   625 ;;		_serial_init
   626 ;;		_uart_xmit
   627 ;; This function is called by:
   628 ;;		Startup code after reset
   629 ;; This function uses a non-reentrant model
   630 ;;
   631                           
   632                           
   633                           ;psect for function _main
   634  0717                     _main:	
   635                           
   636                           ;main.c: 241: OSCCONbits.IRCF = 0x0d;
   637                           
   638                           ;incstack = 0
   639                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   640  0717  0021               	movlb	1	; select bank1
   641  0718  0819               	movf	25,w	;volatile
   642  0719  3987               	andlw	-121
   643  071A  3868               	iorlw	104
   644  071B  0099               	movwf	25	;volatile
   645                           
   646                           ;main.c: 242: OSCCONbits.SCS = 0x02;
   647  071C  0819               	movf	25,w	;volatile
   648  071D  39FC               	andlw	-4
   649  071E  3802               	iorlw	2
   650  071F  0099               	movwf	25	;volatile
   651                           
   652                           ;main.c: 243: OPTION_REGbits.nWPUEN = 0;
   653  0720  1395               	bcf	21,7	;volatile
   654                           
   655                           ;main.c: 245: init_io();
   656  0721  3186  26CD  3187   	fcall	_init_io
   657                           
   658                           ;main.c: 246: serial_init();
   659  0724  3186  26E9  3187   	fcall	_serial_init
   660                           
   661                           ;main.c: 248: SSPCONbits.SSPM=0x08;
   662  0727  0024               	movlb	4	; select bank4
   663  0728  0815               	movf	21,w	;volatile
   664  0729  39F0               	andlw	-16
   665  072A  3808               	iorlw	8
   666  072B  0095               	movwf	21	;volatile
   667                           
   668                           ;main.c: 249: SSPCONbits.SSPEN=1;
   669  072C  1695               	bsf	21,5	;volatile
   670                           
   671                           ;main.c: 250: SSPADD = 0x09;
   672  072D  3009               	movlw	9
   673  072E  0092               	movwf	18	;volatile
   674                           
   675                           ;main.c: 251: SSP1ADD = 0x09;
   676  072F  3009               	movlw	9
   677  0730  0092               	movwf	18	;volatile
   678                           
   679                           ;main.c: 254: _delay((unsigned long)((50)*(4000000/4000.0)));
   680  0731  3041               	movlw	65
   681  0732  00FC               	movwf	??_main+1
   682  0733  30EE               	movlw	238
   683  0734  00FB               	movwf	??_main
   684  0735                     u317:	
   685  0735  0BFB               	decfsz	??_main,f
   686  0736  2F35               	goto	u317
   687  0737  0BFC               	decfsz	??_main+1,f
   688  0738  2F35               	goto	u317
   689  0739  0000               	nop
   690                           
   691                           ;main.c: 256: I2C_Start_Bit();
   692  073A  3186  268E  3187   	fcall	_I2C_Start_Bit
   693                           
   694                           ;main.c: 257: I2C_Control_Write();
   695  073D  3186  26AD  3187   	fcall	_I2C_Control_Write
   696                           
   697                           ;main.c: 259: if (!SSP1CON2bits.ACKSTAT)
   698  0740  0024               	movlb	4	; select bank4
   699  0741  1B16               	btfsc	22,6	;volatile
   700  0742  2F45               	goto	l938
   701                           
   702                           ;main.c: 260: LATCbits.LATC1 = 0;
   703  0743  0022               	movlb	2	; select bank2
   704  0744  108E               	bcf	14,1	;volatile
   705  0745                     l938:	
   706                           
   707                           ;main.c: 262: Send_I2C_Data(0x2C);
   708  0745  302C               	movlw	44
   709  0746  00F7               	movwf	Send_I2C_Data@databyte
   710  0747  3000               	movlw	0
   711  0748  00F8               	movwf	Send_I2C_Data@databyte+1
   712  0749  3186  265F  3187   	fcall	_Send_I2C_Data
   713                           
   714                           ;main.c: 263: Send_I2C_Data(0x06);
   715  074C  3006               	movlw	6
   716  074D  00F7               	movwf	Send_I2C_Data@databyte
   717  074E  3000               	movlw	0
   718  074F  00F8               	movwf	Send_I2C_Data@databyte+1
   719  0750  3186  265F  3187   	fcall	_Send_I2C_Data
   720                           
   721                           ;main.c: 264: I2C_Stop_Bit();
   722  0753  3186  2673  3187   	fcall	_I2C_Stop_Bit
   723                           
   724                           ;main.c: 266: _delay((unsigned long)((15)*(4000000/4000.0)));
   725  0756  3014               	movlw	20
   726  0757  00FC               	movwf	??_main+1
   727  0758  3079               	movlw	121
   728  0759  00FB               	movwf	??_main
   729  075A                     u327:	
   730  075A  0BFB               	decfsz	??_main,f
   731  075B  2F5A               	goto	u327
   732  075C  0BFC               	decfsz	??_main+1,f
   733  075D  2F5A               	goto	u327
   734  075E  3200               	nop2
   735                           
   736                           ;main.c: 274: I2C_restart();
   737  075F  3186  264E  3187   	fcall	_I2C_restart
   738                           
   739                           ;main.c: 275: I2C_Control_Read();
   740  0762  3186  269D  3187   	fcall	_I2C_Control_Read
   741                           
   742                           ;main.c: 276: RX_I2C_Data();
   743  0765  3186  2668  3187   	fcall	_RX_I2C_Data
   744                           
   745                           ;main.c: 277: tempbyte1=byte;
   746  0768  0870               	movf	_byte,w
   747  0769  00FB               	movwf	??_main
   748  076A  087B               	movf	??_main,w
   749  076B  00F5               	movwf	_tempbyte1
   750                           
   751                           ;main.c: 278: I2C_ACK();
   752  076C  3186  2656  3187   	fcall	_I2C_ACK
   753                           
   754                           ;main.c: 279: RX_I2C_Data();
   755  076F  3186  2668  3187   	fcall	_RX_I2C_Data
   756                           
   757                           ;main.c: 280: tempbyte2=byte;
   758  0772  0870               	movf	_byte,w
   759  0773  00FB               	movwf	??_main
   760  0774  087B               	movf	??_main,w
   761  0775  00F6               	movwf	_tempbyte2
   762                           
   763                           ;main.c: 282: I2C_ACK();
   764  0776  3186  2656  3187   	fcall	_I2C_ACK
   765                           
   766                           ;main.c: 283: RX_I2C_Data();
   767  0779  3186  2668  3187   	fcall	_RX_I2C_Data
   768                           
   769                           ;main.c: 284: kirk=byte;
   770  077C  0870               	movf	_byte,w
   771  077D  00FB               	movwf	??_main
   772  077E  087B               	movf	??_main,w
   773  077F  00F1               	movwf	_kirk
   774                           
   775                           ;main.c: 286: I2C_ACK();
   776  0780  3186  2656  3187   	fcall	_I2C_ACK
   777                           
   778                           ;main.c: 287: RX_I2C_Data();
   779  0783  3186  2668  3187   	fcall	_RX_I2C_Data
   780                           
   781                           ;main.c: 288: tb1=byte;
   782  0786  0870               	movf	_byte,w
   783  0787  00FB               	movwf	??_main
   784  0788  087B               	movf	??_main,w
   785  0789  00F3               	movwf	_tb1
   786                           
   787                           ;main.c: 290: I2C_ACK();
   788  078A  3186  2656  3187   	fcall	_I2C_ACK
   789                           
   790                           ;main.c: 291: RX_I2C_Data();
   791  078D  3186  2668  3187   	fcall	_RX_I2C_Data
   792                           
   793                           ;main.c: 292: tb2=byte;
   794  0790  0870               	movf	_byte,w
   795  0791  00FB               	movwf	??_main
   796  0792  087B               	movf	??_main,w
   797  0793  00F4               	movwf	_tb2
   798                           
   799                           ;main.c: 294: I2C_ACK();
   800  0794  3186  2656  3187   	fcall	_I2C_ACK
   801                           
   802                           ;main.c: 295: RX_I2C_Data();
   803  0797  3186  2668  3187   	fcall	_RX_I2C_Data
   804                           
   805                           ;main.c: 296: kirk2=byte;
   806  079A  0870               	movf	_byte,w
   807  079B  00FB               	movwf	??_main
   808  079C  087B               	movf	??_main,w
   809  079D  00F2               	movwf	_kirk2
   810                           
   811                           ;main.c: 300: I2C_NAK();
   812  079E  3186  2680  3187   	fcall	_I2C_NAK
   813                           
   814                           ;main.c: 303: I2C_Stop_Bit();
   815  07A1  3186  2673  3187   	fcall	_I2C_Stop_Bit
   816                           
   817                           ;main.c: 308: uart_xmit(tempbyte1);
   818  07A4  0875               	movf	_tempbyte1,w
   819  07A5  00FB               	movwf	??_main
   820  07A6  01FC               	clrf	??_main+1
   821  07A7  087B               	movf	??_main,w
   822  07A8  00F7               	movwf	uart_xmit@mydata_byte
   823  07A9  087C               	movf	??_main+1,w
   824  07AA  00F8               	movwf	uart_xmit@mydata_byte+1
   825  07AB  3186  2648  3187   	fcall	_uart_xmit
   826                           
   827                           ;main.c: 309: uart_xmit(tempbyte2);
   828  07AE  0876               	movf	_tempbyte2,w
   829  07AF  00FB               	movwf	??_main
   830  07B0  01FC               	clrf	??_main+1
   831  07B1  087B               	movf	??_main,w
   832  07B2  00F7               	movwf	uart_xmit@mydata_byte
   833  07B3  087C               	movf	??_main+1,w
   834  07B4  00F8               	movwf	uart_xmit@mydata_byte+1
   835  07B5  3186  2648  3187   	fcall	_uart_xmit
   836                           
   837                           ;main.c: 310: uart_xmit(tb1);
   838  07B8  0873               	movf	_tb1,w
   839  07B9  00FB               	movwf	??_main
   840  07BA  01FC               	clrf	??_main+1
   841  07BB  087B               	movf	??_main,w
   842  07BC  00F7               	movwf	uart_xmit@mydata_byte
   843  07BD  087C               	movf	??_main+1,w
   844  07BE  00F8               	movwf	uart_xmit@mydata_byte+1
   845  07BF  3186  2648  3187   	fcall	_uart_xmit
   846                           
   847                           ;main.c: 311: uart_xmit(tb2);
   848  07C2  0874               	movf	_tb2,w
   849  07C3  00FB               	movwf	??_main
   850  07C4  01FC               	clrf	??_main+1
   851  07C5  087B               	movf	??_main,w
   852  07C6  00F7               	movwf	uart_xmit@mydata_byte
   853  07C7  087C               	movf	??_main+1,w
   854  07C8  00F8               	movwf	uart_xmit@mydata_byte+1
   855  07C9  3186  2648  3187   	fcall	_uart_xmit
   856                           
   857                           ;main.c: 313: _delay((unsigned long)((1)*(4000000/4000.0)));
   858  07CC  30F9               	movlw	249
   859  07CD  00FB               	movwf	??_main
   860  07CE                     u337:	
   861  07CE  0000               	nop
   862  07CF  0BFB               	decfsz	??_main,f
   863  07D0  2FCE               	goto	u337
   864  07D1  3200               	nop2	;nop
   865  07D2  0000               	nop
   866  07D3                     l978:	
   867                           ;main.c: 315: while (1) {
   868                           
   869                           
   870                           ;main.c: 316: _delay((unsigned long)((500)*(4000000/4000.0)));
   871  07D3  3003               	movlw	3
   872  07D4  00FD               	movwf	??_main+2
   873  07D5  308A               	movlw	138
   874  07D6  00FC               	movwf	??_main+1
   875  07D7  3056               	movlw	86
   876  07D8  00FB               	movwf	??_main
   877  07D9                     u347:	
   878  07D9  0BFB               	decfsz	??_main,f
   879  07DA  2FD9               	goto	u347
   880  07DB  0BFC               	decfsz	??_main+1,f
   881  07DC  2FD9               	goto	u347
   882  07DD  0BFD               	decfsz	??_main+2,f
   883  07DE  2FD9               	goto	u347
   884  07DF  3200               	nop2
   885                           
   886                           ;main.c: 317: LATCbits.LATC0 = 1;
   887  07E0  0022               	movlb	2	; select bank2
   888  07E1  140E               	bsf	14,0	;volatile
   889                           
   890                           ;main.c: 318: _delay((unsigned long)((500)*(4000000/4000.0)));
   891  07E2  3003               	movlw	3
   892  07E3  00FD               	movwf	??_main+2
   893  07E4  308A               	movlw	138
   894  07E5  00FC               	movwf	??_main+1
   895  07E6  3056               	movlw	86
   896  07E7  00FB               	movwf	??_main
   897  07E8                     u357:	
   898  07E8  0BFB               	decfsz	??_main,f
   899  07E9  2FE8               	goto	u357
   900  07EA  0BFC               	decfsz	??_main+1,f
   901  07EB  2FE8               	goto	u357
   902  07EC  0BFD               	decfsz	??_main+2,f
   903  07ED  2FE8               	goto	u357
   904  07EE  3200               	nop2
   905                           
   906                           ;main.c: 319: LATCbits.LATC0 = 0;
   907  07EF  0022               	movlb	2	; select bank2
   908  07F0  100E               	bcf	14,0	;volatile
   909  07F1  2FD3               	goto	l978
   910  07F2                     __end_of_main:	
   911                           ;main.c: 320: }
   912                           ;main.c: 321: return;
   913                           
   914                           
   915                           	psect	text1
   916  06E9                     __ptext1:	
   917 ;; *************** function _serial_init *****************
   918 ;; Defined at:
   919 ;;		line 102 in file "main.c"
   920 ;; Parameters:    Size  Location     Type
   921 ;;		None
   922 ;; Auto vars:     Size  Location     Type
   923 ;;		None
   924 ;; Return value:  Size  Location     Type
   925 ;;		None               void
   926 ;; Registers used:
   927 ;;		wreg, status,2, status,0, pclath, cstack
   928 ;; Tracked objects:
   929 ;;		On entry : 0/0
   930 ;;		On exit  : 0/0
   931 ;;		Unchanged: 0/0
   932 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   933 ;;      Params:         0       0       0       0
   934 ;;      Locals:         0       0       0       0
   935 ;;      Temps:          2       0       0       0
   936 ;;      Totals:         2       0       0       0
   937 ;;Total ram usage:        2 bytes
   938 ;; Hardware stack levels used:    1
   939 ;; Hardware stack levels required when called:    1
   940 ;; This function calls:
   941 ;;		_uart_xmit
   942 ;; This function is called by:
   943 ;;		_main
   944 ;; This function uses a non-reentrant model
   945 ;;
   946                           
   947                           
   948                           ;psect for function _serial_init
   949  06E9                     _serial_init:	
   950                           
   951                           ;main.c: 110: TXSTAbits.BRGH=1;
   952                           
   953                           ;incstack = 0
   954                           ; Regs used in _serial_init: [wreg+status,2+status,0+pclath+cstack]
   955  06E9  0023               	movlb	3	; select bank3
   956  06EA  151E               	bsf	30,2	;volatile
   957                           
   958                           ;main.c: 111: TXSTAbits.TX9=0;
   959  06EB  131E               	bcf	30,6	;volatile
   960                           
   961                           ;main.c: 112: TXSTAbits.TXEN = 1;
   962  06EC  169E               	bsf	30,5	;volatile
   963                           
   964                           ;main.c: 114: RCSTAbits.SPEN=1;
   965  06ED  179D               	bsf	29,7	;volatile
   966                           
   967                           ;main.c: 115: RCSTAbits.RX9=0;
   968  06EE  131D               	bcf	29,6	;volatile
   969                           
   970                           ;main.c: 116: RCSTAbits.CREN=1;
   971  06EF  161D               	bsf	29,4	;volatile
   972                           
   973                           ;main.c: 118: SPBRGL=25;
   974  06F0  3019               	movlw	25
   975  06F1  009B               	movwf	27	;volatile
   976                           
   977                           ;main.c: 119: SPBRGH=0;
   978  06F2  019C               	clrf	28	;volatile
   979                           
   980                           ;main.c: 121: PIR1bits.RCIF=0;
   981  06F3  0020               	movlb	0	; select bank0
   982  06F4  1291               	bcf	17,5	;volatile
   983                           
   984                           ;main.c: 122: PIE1bits.RCIE=1;
   985  06F5  0021               	movlb	1	; select bank1
   986  06F6  1691               	bsf	17,5	;volatile
   987                           
   988                           ;main.c: 123: INTCONbits.PEIE = 1;
   989  06F7  170B               	bsf	11,6	;volatile
   990                           
   991                           ;main.c: 124: INTCONbits.GIE = 1;
   992  06F8  178B               	bsf	11,7	;volatile
   993                           
   994                           ;main.c: 126: _delay((unsigned long)((50)*(4000000/4000.0)));
   995  06F9  3041               	movlw	65
   996  06FA  00FA               	movwf	??_serial_init+1
   997  06FB  30EE               	movlw	238
   998  06FC  00F9               	movwf	??_serial_init
   999  06FD                     u367:	
  1000  06FD  0BF9               	decfsz	??_serial_init,f
  1001  06FE  2EFD               	goto	u367
  1002  06FF  0BFA               	decfsz	??_serial_init+1,f
  1003  0700  2EFD               	goto	u367
  1004  0701  0000               	nop
  1005                           
  1006                           ;main.c: 128: uart_xmit('R');
  1007  0702  3052               	movlw	82
  1008  0703  00F7               	movwf	uart_xmit@mydata_byte
  1009  0704  3000               	movlw	0
  1010  0705  00F8               	movwf	uart_xmit@mydata_byte+1
  1011  0706  3186  2648  3186   	fcall	_uart_xmit
  1012                           
  1013                           ;main.c: 129: uart_xmit('S');
  1014  0709  3053               	movlw	83
  1015  070A  00F7               	movwf	uart_xmit@mydata_byte
  1016  070B  3000               	movlw	0
  1017  070C  00F8               	movwf	uart_xmit@mydata_byte+1
  1018  070D  3186  2648  3186   	fcall	_uart_xmit
  1019                           
  1020                           ;main.c: 130: uart_xmit('T');
  1021  0710  3054               	movlw	84
  1022  0711  00F7               	movwf	uart_xmit@mydata_byte
  1023  0712  3000               	movlw	0
  1024  0713  00F8               	movwf	uart_xmit@mydata_byte+1
  1025  0714  3186  2648         	fcall	_uart_xmit
  1026  0716  0008               	return
  1027  0717                     __end_of_serial_init:	
  1028                           
  1029                           	psect	text2
  1030  0648                     __ptext2:	
  1031 ;; *************** function _uart_xmit *****************
  1032 ;; Defined at:
  1033 ;;		line 97 in file "main.c"
  1034 ;; Parameters:    Size  Location     Type
  1035 ;;  mydata_byte     2    0[COMMON] unsigned int 
  1036 ;; Auto vars:     Size  Location     Type
  1037 ;;		None
  1038 ;; Return value:  Size  Location     Type
  1039 ;;		None               void
  1040 ;; Registers used:
  1041 ;;		wreg
  1042 ;; Tracked objects:
  1043 ;;		On entry : 0/0
  1044 ;;		On exit  : 0/0
  1045 ;;		Unchanged: 0/0
  1046 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1047 ;;      Params:         2       0       0       0
  1048 ;;      Locals:         0       0       0       0
  1049 ;;      Temps:          0       0       0       0
  1050 ;;      Totals:         2       0       0       0
  1051 ;;Total ram usage:        2 bytes
  1052 ;; Hardware stack levels used:    1
  1053 ;; This function calls:
  1054 ;;		Nothing
  1055 ;; This function is called by:
  1056 ;;		_serial_init
  1057 ;;		_main
  1058 ;; This function uses a non-reentrant model
  1059 ;;
  1060                           
  1061                           
  1062                           ;psect for function _uart_xmit
  1063  0648                     _uart_xmit:	
  1064  0648                     l84:	
  1065                           ;main.c: 99: while(!TXSTAbits.TRMT);
  1066                           
  1067                           ;incstack = 0
  1068                           ; Regs used in _uart_xmit: [wreg]
  1069                           
  1070  0648  0023               	movlb	3	; select bank3
  1071  0649  1C9E               	btfss	30,1	;volatile
  1072  064A  2E48               	goto	l84
  1073                           
  1074                           ;main.c: 100: TXREG = mydata_byte;
  1075  064B  0877               	movf	uart_xmit@mydata_byte,w
  1076  064C  009A               	movwf	26	;volatile
  1077  064D  0008               	return
  1078  064E                     __end_of_uart_xmit:	
  1079                           
  1080                           	psect	text3
  1081  06CD                     __ptext3:	
  1082 ;; *************** function _init_io *****************
  1083 ;; Defined at:
  1084 ;;		line 65 in file "main.c"
  1085 ;; Parameters:    Size  Location     Type
  1086 ;;		None
  1087 ;; Auto vars:     Size  Location     Type
  1088 ;;		None
  1089 ;; Return value:  Size  Location     Type
  1090 ;;		None               void
  1091 ;; Registers used:
  1092 ;;		status,2
  1093 ;; Tracked objects:
  1094 ;;		On entry : 0/0
  1095 ;;		On exit  : 0/0
  1096 ;;		Unchanged: 0/0
  1097 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1098 ;;      Params:         0       0       0       0
  1099 ;;      Locals:         0       0       0       0
  1100 ;;      Temps:          0       0       0       0
  1101 ;;      Totals:         0       0       0       0
  1102 ;;Total ram usage:        0 bytes
  1103 ;; Hardware stack levels used:    1
  1104 ;; This function calls:
  1105 ;;		Nothing
  1106 ;; This function is called by:
  1107 ;;		_main
  1108 ;; This function uses a non-reentrant model
  1109 ;;
  1110                           
  1111                           
  1112                           ;psect for function _init_io
  1113  06CD                     _init_io:	
  1114                           
  1115                           ;main.c: 67: ANSELA = 0x00;
  1116                           
  1117                           ;incstack = 0
  1118                           ; Regs used in _init_io: [status,2]
  1119  06CD  0023               	movlb	3	; select bank3
  1120  06CE  018C               	clrf	12	;volatile
  1121                           
  1122                           ;main.c: 68: ANSELB = 0x00;
  1123  06CF  018D               	clrf	13	;volatile
  1124                           
  1125                           ;main.c: 69: ANSELC = 0x00;
  1126  06D0  018E               	clrf	14	;volatile
  1127                           
  1128                           ;main.c: 71: TRISAbits.TRISA0 = 1;
  1129  06D1  0021               	movlb	1	; select bank1
  1130  06D2  140C               	bsf	12,0	;volatile
  1131                           
  1132                           ;main.c: 72: TRISAbits.TRISA1 = 1;
  1133  06D3  148C               	bsf	12,1	;volatile
  1134                           
  1135                           ;main.c: 73: TRISAbits.TRISA2 = 1;
  1136  06D4  150C               	bsf	12,2	;volatile
  1137                           
  1138                           ;main.c: 74: TRISAbits.TRISA3 = 1;
  1139  06D5  158C               	bsf	12,3	;volatile
  1140                           
  1141                           ;main.c: 75: TRISAbits.TRISA4 = 1;
  1142  06D6  160C               	bsf	12,4	;volatile
  1143                           
  1144                           ;main.c: 76: TRISAbits.TRISA5 = 1;
  1145  06D7  168C               	bsf	12,5	;volatile
  1146                           
  1147                           ;main.c: 78: TRISBbits.TRISB4 = 1;
  1148  06D8  160D               	bsf	13,4	;volatile
  1149                           
  1150                           ;main.c: 79: TRISBbits.TRISB5 = 1;
  1151  06D9  168D               	bsf	13,5	;volatile
  1152                           
  1153                           ;main.c: 80: TRISBbits.TRISB6 = 1;
  1154  06DA  170D               	bsf	13,6	;volatile
  1155                           
  1156                           ;main.c: 81: TRISBbits.TRISB7 = 0;
  1157  06DB  138D               	bcf	13,7	;volatile
  1158                           
  1159                           ;main.c: 83: TRISCbits.TRISC0 = 0;
  1160  06DC  100E               	bcf	14,0	;volatile
  1161                           
  1162                           ;main.c: 84: TRISCbits.TRISC1 = 0;
  1163  06DD  108E               	bcf	14,1	;volatile
  1164                           
  1165                           ;main.c: 85: TRISCbits.TRISC2 = 0;
  1166  06DE  110E               	bcf	14,2	;volatile
  1167                           
  1168                           ;main.c: 86: TRISCbits.TRISC3 = 0;
  1169  06DF  118E               	bcf	14,3	;volatile
  1170                           
  1171                           ;main.c: 87: TRISCbits.TRISC4 = 0;
  1172  06E0  120E               	bcf	14,4	;volatile
  1173                           
  1174                           ;main.c: 88: TRISCbits.TRISC5 = 0;
  1175  06E1  128E               	bcf	14,5	;volatile
  1176                           
  1177                           ;main.c: 89: TRISCbits.TRISC6 = 0;
  1178  06E2  130E               	bcf	14,6	;volatile
  1179                           
  1180                           ;main.c: 90: TRISCbits.TRISC7 = 0;
  1181  06E3  138E               	bcf	14,7	;volatile
  1182                           
  1183                           ;main.c: 92: LATCbits.LATC0 = 1;
  1184  06E4  0022               	movlb	2	; select bank2
  1185  06E5  140E               	bsf	14,0	;volatile
  1186                           
  1187                           ;main.c: 93: LATCbits.LATC1 = 0;
  1188  06E6  108E               	bcf	14,1	;volatile
  1189                           
  1190                           ;main.c: 94: LATCbits.LATC2 = 0;
  1191  06E7  110E               	bcf	14,2	;volatile
  1192  06E8  0008               	return
  1193  06E9                     __end_of_init_io:	
  1194                           
  1195                           	psect	text4
  1196  065F                     __ptext4:	
  1197 ;; *************** function _Send_I2C_Data *****************
  1198 ;; Defined at:
  1199 ;;		line 142 in file "main.c"
  1200 ;; Parameters:    Size  Location     Type
  1201 ;;  databyte        2    0[COMMON] unsigned int 
  1202 ;; Auto vars:     Size  Location     Type
  1203 ;;		None
  1204 ;; Return value:  Size  Location     Type
  1205 ;;		None               void
  1206 ;; Registers used:
  1207 ;;		wreg
  1208 ;; Tracked objects:
  1209 ;;		On entry : 0/0
  1210 ;;		On exit  : 0/0
  1211 ;;		Unchanged: 0/0
  1212 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1213 ;;      Params:         2       0       0       0
  1214 ;;      Locals:         0       0       0       0
  1215 ;;      Temps:          0       0       0       0
  1216 ;;      Totals:         2       0       0       0
  1217 ;;Total ram usage:        2 bytes
  1218 ;; Hardware stack levels used:    1
  1219 ;; This function calls:
  1220 ;;		Nothing
  1221 ;; This function is called by:
  1222 ;;		_main
  1223 ;; This function uses a non-reentrant model
  1224 ;;
  1225                           
  1226                           
  1227                           ;psect for function _Send_I2C_Data
  1228  065F                     _Send_I2C_Data:	
  1229                           
  1230                           ;main.c: 144: PIR1bits.SSP1IF=0;
  1231                           
  1232                           ;incstack = 0
  1233                           ; Regs used in _Send_I2C_Data: [wreg]
  1234  065F  0020               	movlb	0	; select bank0
  1235  0660  1191               	bcf	17,3	;volatile
  1236                           
  1237                           ;main.c: 145: SSPBUF = databyte;
  1238  0661  0877               	movf	Send_I2C_Data@databyte,w
  1239  0662  0024               	movlb	4	; select bank4
  1240  0663  0091               	movwf	17	;volatile
  1241  0664                     l99:	
  1242                           ;main.c: 146: while(!PIR1bits.SSP1IF);
  1243                           
  1244  0664  0020               	movlb	0	; select bank0
  1245  0665  1991               	btfsc	17,3	;volatile
  1246  0666  0008               	return
  1247  0667  2E64               	goto	l99
  1248  0668                     __end_of_Send_I2C_Data:	
  1249                           
  1250                           	psect	text5
  1251  0668                     __ptext5:	
  1252 ;; *************** function _RX_I2C_Data *****************
  1253 ;; Defined at:
  1254 ;;		line 149 in file "main.c"
  1255 ;; Parameters:    Size  Location     Type
  1256 ;;		None
  1257 ;; Auto vars:     Size  Location     Type
  1258 ;;		None
  1259 ;; Return value:  Size  Location     Type
  1260 ;;                  1    wreg      unsigned char 
  1261 ;; Registers used:
  1262 ;;		wreg
  1263 ;; Tracked objects:
  1264 ;;		On entry : 0/0
  1265 ;;		On exit  : 0/0
  1266 ;;		Unchanged: 0/0
  1267 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1268 ;;      Params:         0       0       0       0
  1269 ;;      Locals:         0       0       0       0
  1270 ;;      Temps:          1       0       0       0
  1271 ;;      Totals:         1       0       0       0
  1272 ;;Total ram usage:        1 bytes
  1273 ;; Hardware stack levels used:    1
  1274 ;; This function calls:
  1275 ;;		Nothing
  1276 ;; This function is called by:
  1277 ;;		_main
  1278 ;; This function uses a non-reentrant model
  1279 ;;
  1280                           
  1281                           
  1282                           ;psect for function _RX_I2C_Data
  1283  0668                     _RX_I2C_Data:	
  1284                           
  1285                           ;main.c: 152: RCEN = 1;
  1286                           
  1287                           ;incstack = 0
  1288                           ; Regs used in _RX_I2C_Data: [wreg]
  1289  0668  0024               	movlb	4	; select bank4
  1290  0669  1596               	bsf	22,3	;volatile
  1291  066A                     l105:	
  1292                           ;main.c: 153: while( RCEN ) continue;
  1293                           
  1294  066A  1996               	btfsc	22,3	;volatile
  1295  066B  2E6A               	goto	l105
  1296  066C                     l108:	
  1297                           ;main.c: 154: while( !BF ) continue;
  1298                           
  1299  066C  1C14               	btfss	20,0	;volatile
  1300  066D  2E6C               	goto	l108
  1301                           
  1302                           ;main.c: 155: byte = SSPBUF;
  1303  066E  0811               	movf	17,w	;volatile
  1304  066F  00F7               	movwf	??_RX_I2C_Data
  1305  0670  0877               	movf	??_RX_I2C_Data,w
  1306  0671  00F0               	movwf	_byte
  1307  0672  0008               	return
  1308  0673                     __end_of_RX_I2C_Data:	
  1309                           ;main.c: 156: return byte;
  1310                           ;	Return value of _RX_I2C_Data is never used
  1311                           
  1312                           
  1313                           	psect	text6
  1314  064E                     __ptext6:	
  1315 ;; *************** function _I2C_restart *****************
  1316 ;; Defined at:
  1317 ;;		line 210 in file "main.c"
  1318 ;; Parameters:    Size  Location     Type
  1319 ;;		None
  1320 ;; Auto vars:     Size  Location     Type
  1321 ;;		None
  1322 ;; Return value:  Size  Location     Type
  1323 ;;		None               void
  1324 ;; Registers used:
  1325 ;;		wreg, status,2, status,0, pclath, cstack
  1326 ;; Tracked objects:
  1327 ;;		On entry : 0/0
  1328 ;;		On exit  : 0/0
  1329 ;;		Unchanged: 0/0
  1330 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1331 ;;      Params:         0       0       0       0
  1332 ;;      Locals:         0       0       0       0
  1333 ;;      Temps:          0       0       0       0
  1334 ;;      Totals:         0       0       0       0
  1335 ;;Total ram usage:        0 bytes
  1336 ;; Hardware stack levels used:    1
  1337 ;; Hardware stack levels required when called:    1
  1338 ;; This function calls:
  1339 ;;		_I2C_check_idle
  1340 ;; This function is called by:
  1341 ;;		_main
  1342 ;; This function uses a non-reentrant model
  1343 ;;
  1344                           
  1345                           
  1346                           ;psect for function _I2C_restart
  1347  064E                     _I2C_restart:	
  1348                           
  1349                           ;main.c: 212: I2C_check_idle();
  1350                           
  1351                           ;incstack = 0
  1352                           ; Regs used in _I2C_restart: [wreg+status,2+status,0+pclath+cstack]
  1353  064E  3186  26BD  3186   	fcall	_I2C_check_idle
  1354                           
  1355                           ;main.c: 213: RSEN = 1;
  1356  0651  0024               	movlb	4	; select bank4
  1357  0652  1496               	bsf	22,1	;volatile
  1358  0653                     l137:	
  1359                           ;main.c: 214: while( RSEN ) continue;
  1360                           
  1361  0653  1C96               	btfss	22,1	;volatile
  1362  0654  0008               	return
  1363  0655  2E53               	goto	l137
  1364  0656                     __end_of_I2C_restart:	
  1365                           
  1366                           	psect	text7
  1367  06BD                     __ptext7:	
  1368 ;; *************** function _I2C_check_idle *****************
  1369 ;; Defined at:
  1370 ;;		line 196 in file "main.c"
  1371 ;; Parameters:    Size  Location     Type
  1372 ;;		None
  1373 ;; Auto vars:     Size  Location     Type
  1374 ;;  byte2           1    2[COMMON] unsigned char 
  1375 ;;  byte1           1    1[COMMON] unsigned char 
  1376 ;; Return value:  Size  Location     Type
  1377 ;;		None               void
  1378 ;; Registers used:
  1379 ;;		wreg, status,2, status,0
  1380 ;; Tracked objects:
  1381 ;;		On entry : 0/0
  1382 ;;		On exit  : 0/0
  1383 ;;		Unchanged: 0/0
  1384 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1385 ;;      Params:         0       0       0       0
  1386 ;;      Locals:         2       0       0       0
  1387 ;;      Temps:          1       0       0       0
  1388 ;;      Totals:         3       0       0       0
  1389 ;;Total ram usage:        3 bytes
  1390 ;; Hardware stack levels used:    1
  1391 ;; This function calls:
  1392 ;;		Nothing
  1393 ;; This function is called by:
  1394 ;;		_I2C_restart
  1395 ;; This function uses a non-reentrant model
  1396 ;;
  1397                           
  1398                           
  1399                           ;psect for function _I2C_check_idle
  1400  06BD                     _I2C_check_idle:	
  1401  06BD                     l132:	
  1402                           ;incstack = 0
  1403                           ; Regs used in _I2C_check_idle: [wreg+status,2+status,0]
  1404                           ;main.c: 198: unsigned char byte1;
  1405                           ;main.c: 199: unsigned char byte2;
  1406                           ;main.c: 201: do
  1407                           
  1408                           
  1409                           ;main.c: 202: {
  1410                           ;main.c: 203: byte1 = SSPSTAT & 0x04;
  1411  06BD  0024               	movlb	4	; select bank4
  1412  06BE  0814               	movf	20,w	;volatile
  1413  06BF  3904               	andlw	4
  1414  06C0  00F7               	movwf	??_I2C_check_idle
  1415  06C1  0877               	movf	??_I2C_check_idle,w
  1416  06C2  00F8               	movwf	I2C_check_idle@byte1
  1417                           
  1418                           ;main.c: 204: byte2 = SSPCON2 & 0x1F;
  1419  06C3  0816               	movf	22,w	;volatile
  1420  06C4  391F               	andlw	31
  1421  06C5  00F7               	movwf	??_I2C_check_idle
  1422  06C6  0877               	movf	??_I2C_check_idle,w
  1423  06C7  00F9               	movwf	I2C_check_idle@byte2
  1424                           
  1425                           ;main.c: 205: } while( byte1 | byte2 );
  1426  06C8  0878               	movf	I2C_check_idle@byte1,w
  1427  06C9  0479               	iorwf	I2C_check_idle@byte2,w
  1428  06CA  1903               	btfsc	3,2
  1429  06CB  0008               	return
  1430  06CC  2EBD               	goto	l132
  1431  06CD                     __end_of_I2C_check_idle:	
  1432                           
  1433                           	psect	text8
  1434  0673                     __ptext8:	
  1435 ;; *************** function _I2C_Stop_Bit *****************
  1436 ;; Defined at:
  1437 ;;		line 217 in file "main.c"
  1438 ;; Parameters:    Size  Location     Type
  1439 ;;		None
  1440 ;; Auto vars:     Size  Location     Type
  1441 ;;		None
  1442 ;; Return value:  Size  Location     Type
  1443 ;;		None               void
  1444 ;; Registers used:
  1445 ;;		wreg
  1446 ;; Tracked objects:
  1447 ;;		On entry : 0/0
  1448 ;;		On exit  : 0/0
  1449 ;;		Unchanged: 0/0
  1450 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1451 ;;      Params:         0       0       0       0
  1452 ;;      Locals:         0       0       0       0
  1453 ;;      Temps:          0       0       0       0
  1454 ;;      Totals:         0       0       0       0
  1455 ;;Total ram usage:        0 bytes
  1456 ;; Hardware stack levels used:    1
  1457 ;; This function calls:
  1458 ;;		Nothing
  1459 ;; This function is called by:
  1460 ;;		_main
  1461 ;; This function uses a non-reentrant model
  1462 ;;
  1463                           
  1464                           
  1465                           ;psect for function _I2C_Stop_Bit
  1466  0673                     _I2C_Stop_Bit:	
  1467                           
  1468                           ;main.c: 219: PIR1bits.SSP1IF=0;
  1469                           
  1470                           ;incstack = 0
  1471                           ; Regs used in _I2C_Stop_Bit: [wreg]
  1472  0673  0020               	movlb	0	; select bank0
  1473  0674  1191               	bcf	17,3	;volatile
  1474                           
  1475                           ;main.c: 220: SSPCON2bits.PEN=1;
  1476  0675  0024               	movlb	4	; select bank4
  1477  0676  1516               	bsf	22,2	;volatile
  1478  0677                     l910:	
  1479                           ;main.c: 221: while(!PIR1bits.SSP1IF)
  1480                           
  1481  0677  0020               	movlb	0	; select bank0
  1482  0678  1991               	btfsc	17,3	;volatile
  1483  0679  0008               	return
  1484                           
  1485                           ;main.c: 222: {
  1486                           ;main.c: 223: i = 1;
  1487  067A  3001               	movlw	1
  1488  067B  0020               	movlb	0	; select bank0
  1489  067C  00A2               	movwf	_i
  1490  067D  3000               	movlw	0
  1491  067E  00A3               	movwf	_i+1
  1492  067F  2E77               	goto	l910
  1493  0680                     __end_of_I2C_Stop_Bit:	
  1494                           
  1495                           	psect	text9
  1496  068E                     __ptext9:	
  1497 ;; *************** function _I2C_Start_Bit *****************
  1498 ;; Defined at:
  1499 ;;		line 185 in file "main.c"
  1500 ;; Parameters:    Size  Location     Type
  1501 ;;		None
  1502 ;; Auto vars:     Size  Location     Type
  1503 ;;		None
  1504 ;; Return value:  Size  Location     Type
  1505 ;;		None               void
  1506 ;; Registers used:
  1507 ;;		wreg
  1508 ;; Tracked objects:
  1509 ;;		On entry : 0/0
  1510 ;;		On exit  : 0/0
  1511 ;;		Unchanged: 0/0
  1512 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1513 ;;      Params:         0       0       0       0
  1514 ;;      Locals:         0       0       0       0
  1515 ;;      Temps:          0       0       0       0
  1516 ;;      Totals:         0       0       0       0
  1517 ;;Total ram usage:        0 bytes
  1518 ;; Hardware stack levels used:    1
  1519 ;; This function calls:
  1520 ;;		Nothing
  1521 ;; This function is called by:
  1522 ;;		_main
  1523 ;; This function uses a non-reentrant model
  1524 ;;
  1525                           
  1526                           
  1527                           ;psect for function _I2C_Start_Bit
  1528  068E                     _I2C_Start_Bit:	
  1529                           
  1530                           ;main.c: 187: PIR1bits.SSP1IF=0;
  1531                           
  1532                           ;incstack = 0
  1533                           ; Regs used in _I2C_Start_Bit: [wreg]
  1534  068E  0020               	movlb	0	; select bank0
  1535  068F  1191               	bcf	17,3	;volatile
  1536                           
  1537                           ;main.c: 188: SSPCON2bits.SEN=1;
  1538  0690  0024               	movlb	4	; select bank4
  1539  0691  1416               	bsf	22,0	;volatile
  1540  0692                     l904:	
  1541                           ;main.c: 189: while(!PIR1bits.SSP1IF)
  1542                           
  1543  0692  0020               	movlb	0	; select bank0
  1544  0693  1991               	btfsc	17,3	;volatile
  1545  0694  2E9B               	goto	l128
  1546                           
  1547                           ;main.c: 190: {
  1548                           ;main.c: 191: i = 1;
  1549  0695  3001               	movlw	1
  1550  0696  0020               	movlb	0	; select bank0
  1551  0697  00A2               	movwf	_i
  1552  0698  3000               	movlw	0
  1553  0699  00A3               	movwf	_i+1
  1554  069A  2E92               	goto	l904
  1555  069B                     l128:	
  1556                           
  1557                           ;main.c: 192: }
  1558                           ;main.c: 193: PIR1bits.SSP1IF=0;
  1559  069B  1191               	bcf	17,3	;volatile
  1560  069C  0008               	return
  1561  069D                     __end_of_I2C_Start_Bit:	
  1562                           
  1563                           	psect	text10
  1564  0680                     __ptext10:	
  1565 ;; *************** function _I2C_NAK *****************
  1566 ;; Defined at:
  1567 ;;		line 228 in file "main.c"
  1568 ;; Parameters:    Size  Location     Type
  1569 ;;		None
  1570 ;; Auto vars:     Size  Location     Type
  1571 ;;		None
  1572 ;; Return value:  Size  Location     Type
  1573 ;;		None               void
  1574 ;; Registers used:
  1575 ;;		wreg
  1576 ;; Tracked objects:
  1577 ;;		On entry : 0/0
  1578 ;;		On exit  : 0/0
  1579 ;;		Unchanged: 0/0
  1580 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1581 ;;      Params:         0       0       0       0
  1582 ;;      Locals:         0       0       0       0
  1583 ;;      Temps:          0       0       0       0
  1584 ;;      Totals:         0       0       0       0
  1585 ;;Total ram usage:        0 bytes
  1586 ;; Hardware stack levels used:    1
  1587 ;; This function calls:
  1588 ;;		Nothing
  1589 ;; This function is called by:
  1590 ;;		_main
  1591 ;; This function uses a non-reentrant model
  1592 ;;
  1593                           
  1594                           
  1595                           ;psect for function _I2C_NAK
  1596  0680                     _I2C_NAK:	
  1597                           
  1598                           ;main.c: 230: PIR1bits.SSP1IF=0;
  1599                           
  1600                           ;incstack = 0
  1601                           ; Regs used in _I2C_NAK: [wreg]
  1602  0680  0020               	movlb	0	; select bank0
  1603  0681  1191               	bcf	17,3	;volatile
  1604                           
  1605                           ;main.c: 231: SSP1CON2bits.ACKDT=1;
  1606  0682  0024               	movlb	4	; select bank4
  1607  0683  1696               	bsf	22,5	;volatile
  1608                           
  1609                           ;main.c: 232: SSP1CON2bits.ACKEN=1;
  1610  0684  1616               	bsf	22,4	;volatile
  1611  0685                     l916:	
  1612                           ;main.c: 233: while(!PIR1bits.SSP1IF)
  1613                           
  1614  0685  0020               	movlb	0	; select bank0
  1615  0686  1991               	btfsc	17,3	;volatile
  1616  0687  0008               	return
  1617                           
  1618                           ;main.c: 234: {
  1619                           ;main.c: 235: i = 1;
  1620  0688  3001               	movlw	1
  1621  0689  0020               	movlb	0	; select bank0
  1622  068A  00A2               	movwf	_i
  1623  068B  3000               	movlw	0
  1624  068C  00A3               	movwf	_i+1
  1625  068D  2E85               	goto	l916
  1626  068E                     __end_of_I2C_NAK:	
  1627                           
  1628                           	psect	text11
  1629  06AD                     __ptext11:	
  1630 ;; *************** function _I2C_Control_Write *****************
  1631 ;; Defined at:
  1632 ;;		line 159 in file "main.c"
  1633 ;; Parameters:    Size  Location     Type
  1634 ;;		None
  1635 ;; Auto vars:     Size  Location     Type
  1636 ;;		None
  1637 ;; Return value:  Size  Location     Type
  1638 ;;		None               void
  1639 ;; Registers used:
  1640 ;;		wreg
  1641 ;; Tracked objects:
  1642 ;;		On entry : 0/0
  1643 ;;		On exit  : 0/0
  1644 ;;		Unchanged: 0/0
  1645 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1646 ;;      Params:         0       0       0       0
  1647 ;;      Locals:         0       0       0       0
  1648 ;;      Temps:          0       0       0       0
  1649 ;;      Totals:         0       0       0       0
  1650 ;;Total ram usage:        0 bytes
  1651 ;; Hardware stack levels used:    1
  1652 ;; This function calls:
  1653 ;;		Nothing
  1654 ;; This function is called by:
  1655 ;;		_main
  1656 ;; This function uses a non-reentrant model
  1657 ;;
  1658                           
  1659                           
  1660                           ;psect for function _I2C_Control_Write
  1661  06AD                     _I2C_Control_Write:	
  1662                           
  1663                           ;main.c: 161: PIR1bits.SSP1IF=0;
  1664                           
  1665                           ;incstack = 0
  1666                           ; Regs used in _I2C_Control_Write: [wreg]
  1667  06AD  0020               	movlb	0	; select bank0
  1668  06AE  1191               	bcf	17,3	;volatile
  1669                           
  1670                           ;main.c: 162: SSP1BUF = 0x44 << 1;
  1671  06AF  3088               	movlw	136
  1672  06B0  0024               	movlb	4	; select bank4
  1673  06B1  0091               	movwf	17	;volatile
  1674  06B2                     l890:	
  1675                           ;main.c: 163: while(!PIR1bits.SSP1IF)
  1676                           
  1677  06B2  0020               	movlb	0	; select bank0
  1678  06B3  1991               	btfsc	17,3	;volatile
  1679  06B4  2EBB               	goto	l116
  1680                           
  1681                           ;main.c: 164: {
  1682                           ;main.c: 165: i = 1;
  1683  06B5  3001               	movlw	1
  1684  06B6  0020               	movlb	0	; select bank0
  1685  06B7  00A2               	movwf	_i
  1686  06B8  3000               	movlw	0
  1687  06B9  00A3               	movwf	_i+1
  1688  06BA  2EB2               	goto	l890
  1689  06BB                     l116:	
  1690                           
  1691                           ;main.c: 167: }
  1692                           ;main.c: 168: PIR1bits.SSP1IF=0;
  1693  06BB  1191               	bcf	17,3	;volatile
  1694  06BC  0008               	return
  1695  06BD                     __end_of_I2C_Control_Write:	
  1696                           
  1697                           	psect	text12
  1698  069D                     __ptext12:	
  1699 ;; *************** function _I2C_Control_Read *****************
  1700 ;; Defined at:
  1701 ;;		line 172 in file "main.c"
  1702 ;; Parameters:    Size  Location     Type
  1703 ;;		None
  1704 ;; Auto vars:     Size  Location     Type
  1705 ;;		None
  1706 ;; Return value:  Size  Location     Type
  1707 ;;		None               void
  1708 ;; Registers used:
  1709 ;;		wreg
  1710 ;; Tracked objects:
  1711 ;;		On entry : 0/0
  1712 ;;		On exit  : 0/0
  1713 ;;		Unchanged: 0/0
  1714 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1715 ;;      Params:         0       0       0       0
  1716 ;;      Locals:         0       0       0       0
  1717 ;;      Temps:          0       0       0       0
  1718 ;;      Totals:         0       0       0       0
  1719 ;;Total ram usage:        0 bytes
  1720 ;; Hardware stack levels used:    1
  1721 ;; This function calls:
  1722 ;;		Nothing
  1723 ;; This function is called by:
  1724 ;;		_main
  1725 ;; This function uses a non-reentrant model
  1726 ;;
  1727                           
  1728                           
  1729                           ;psect for function _I2C_Control_Read
  1730  069D                     _I2C_Control_Read:	
  1731                           
  1732                           ;main.c: 174: PIR1bits.SSP1IF=0;
  1733                           
  1734                           ;incstack = 0
  1735                           ; Regs used in _I2C_Control_Read: [wreg]
  1736  069D  0020               	movlb	0	; select bank0
  1737  069E  1191               	bcf	17,3	;volatile
  1738                           
  1739                           ;main.c: 175: SSP1BUF = (0x44 << 1) + 1;
  1740  069F  3089               	movlw	137
  1741  06A0  0024               	movlb	4	; select bank4
  1742  06A1  0091               	movwf	17	;volatile
  1743  06A2                     l898:	
  1744                           ;main.c: 176: while(!PIR1bits.SSP1IF){
  1745                           
  1746  06A2  0020               	movlb	0	; select bank0
  1747  06A3  1991               	btfsc	17,3	;volatile
  1748  06A4  2EAB               	goto	l122
  1749                           
  1750                           ;main.c: 177: i = 1;
  1751  06A5  3001               	movlw	1
  1752  06A6  0020               	movlb	0	; select bank0
  1753  06A7  00A2               	movwf	_i
  1754  06A8  3000               	movlw	0
  1755  06A9  00A3               	movwf	_i+1
  1756  06AA  2EA2               	goto	l898
  1757  06AB                     l122:	
  1758                           
  1759                           ;main.c: 178: }
  1760                           ;main.c: 182: PIR1bits.SSP1IF=0;
  1761  06AB  1191               	bcf	17,3	;volatile
  1762  06AC  0008               	return
  1763  06AD                     __end_of_I2C_Control_Read:	
  1764                           
  1765                           	psect	text13
  1766  0656                     __ptext13:	
  1767 ;; *************** function _I2C_ACK *****************
  1768 ;; Defined at:
  1769 ;;		line 134 in file "main.c"
  1770 ;; Parameters:    Size  Location     Type
  1771 ;;		None
  1772 ;; Auto vars:     Size  Location     Type
  1773 ;;		None
  1774 ;; Return value:  Size  Location     Type
  1775 ;;		None               void
  1776 ;; Registers used:
  1777 ;;		None
  1778 ;; Tracked objects:
  1779 ;;		On entry : 0/0
  1780 ;;		On exit  : 0/0
  1781 ;;		Unchanged: 0/0
  1782 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1783 ;;      Params:         0       0       0       0
  1784 ;;      Locals:         0       0       0       0
  1785 ;;      Temps:          0       0       0       0
  1786 ;;      Totals:         0       0       0       0
  1787 ;;Total ram usage:        0 bytes
  1788 ;; Hardware stack levels used:    1
  1789 ;; This function calls:
  1790 ;;		Nothing
  1791 ;; This function is called by:
  1792 ;;		_main
  1793 ;; This function uses a non-reentrant model
  1794 ;;
  1795                           
  1796                           
  1797                           ;psect for function _I2C_ACK
  1798  0656                     _I2C_ACK:	
  1799                           
  1800                           ;main.c: 136: PIR1bits.SSP1IF=0;
  1801                           
  1802                           ;incstack = 0
  1803                           ; Regs used in _I2C_ACK: []
  1804  0656  0020               	movlb	0	; select bank0
  1805  0657  1191               	bcf	17,3	;volatile
  1806                           
  1807                           ;main.c: 137: SSP1CON2bits.ACKDT=0;
  1808  0658  0024               	movlb	4	; select bank4
  1809  0659  1296               	bcf	22,5	;volatile
  1810                           
  1811                           ;main.c: 138: SSP1CON2bits.ACKEN=1;
  1812  065A  1616               	bsf	22,4	;volatile
  1813  065B                     l93:	
  1814                           ;main.c: 139: while(!PIR1bits.SSP1IF);
  1815                           
  1816  065B  0020               	movlb	0	; select bank0
  1817  065C  1991               	btfsc	17,3	;volatile
  1818  065D  0008               	return
  1819  065E  2E5B               	goto	l93
  1820  065F                     __end_of_I2C_ACK:	
  1821  007E                     btemp	set	126	;btemp
  1822  007E                     wtemp	set	126
  1823  007E                     wtemp0	set	126
  1824  0080                     wtemp1	set	128
  1825  0082                     wtemp2	set	130
  1826  0084                     wtemp3	set	132
  1827  0086                     wtemp4	set	134
  1828  0088                     wtemp5	set	136
  1829  007F                     wtemp6	set	127
  1830  007E                     ttemp	set	126
  1831  007E                     ttemp0	set	126
  1832  0081                     ttemp1	set	129
  1833  0084                     ttemp2	set	132
  1834  0087                     ttemp3	set	135
  1835  007F                     ttemp4	set	127
  1836  007E                     ltemp	set	126
  1837  007E                     ltemp0	set	126
  1838  0082                     ltemp1	set	130
  1839  0086                     ltemp2	set	134
  1840  0080                     ltemp3	set	128


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         11
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      7      14
    BANK0            80      0       4
    BANK1            80      0       0
    BANK2            80      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_serial_init
    _serial_init->_uart_xmit
    _I2C_restart->_I2C_check_idle

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0     784
                                              4 COMMON     3     3      0
                            _I2C_ACK
                   _I2C_Control_Read
                  _I2C_Control_Write
                            _I2C_NAK
                      _I2C_Start_Bit
                       _I2C_Stop_Bit
                        _I2C_restart
                        _RX_I2C_Data
                      _Send_I2C_Data
                            _init_io
                        _serial_init
                          _uart_xmit
 ---------------------------------------------------------------------------------
 (1) _serial_init                                          2     2      0     323
                                              2 COMMON     2     2      0
                          _uart_xmit
 ---------------------------------------------------------------------------------
 (1) _uart_xmit                                            2     0      2     323
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (1) _init_io                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Send_I2C_Data                                        2     0      2     108
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (1) _RX_I2C_Data                                          1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _I2C_restart                                          0     0      0      30
                     _I2C_check_idle
 ---------------------------------------------------------------------------------
 (2) _I2C_check_idle                                       3     3      0      30
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _I2C_Stop_Bit                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _I2C_Start_Bit                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _I2C_NAK                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _I2C_Control_Write                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _I2C_Control_Read                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _I2C_ACK                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_ACK
   _I2C_Control_Read
   _I2C_Control_Write
   _I2C_NAK
   _I2C_Start_Bit
   _I2C_Stop_Bit
   _I2C_restart
     _I2C_check_idle
   _RX_I2C_Data
   _Send_I2C_Data
   _init_io
   _serial_init
     _uart_xmit
   _uart_xmit

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM              F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      7       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      12       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50      0       4       6        5.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
DATA                 0      0      12      11        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.35 build -356382666 
Symbol Table                                                                                   Fri Nov 13 00:36:13 2015

                         _i 0022                 __CFG_CP$OFF 0000                 _SSPSTATbits 0214  
                        _BF 10A0                          l84 0648                          l93 065B  
                        l99 0664                 __CFG_LVP$ON 0000                         l105 066A  
                       l122 06AB                         l116 06BB                         l132 06BD  
                       l108 066C                         l128 069B                         l137 0653  
                       l910 0677                         l904 0692                         l916 0685  
                       l890 06B2                         l938 0745                         l898 06A2  
                       l978 07D3                         u317 0735                         u327 075A  
                       _PEN 10B2                         u337 07CE                         u347 07D9  
                       u357 07E8                         u367 06FD             __end_of_I2C_ACK 065F  
           __end_of_I2C_NAK 068E                         _tb1 0073                         _tb2 0074  
              __CFG_BORV$LO 0000                __CFG_IESO$ON 0000                 _RX_I2C_Data 0668  
                      _RCEN 10B3                        _RSEN 10B1           ?_I2C_Control_Read 0077  
              __CFG_WRT$OFF 0000               __CFG_FCMEN$ON 0000                        _main 0717  
                      _byte 0070                        _kirk 0071                        btemp 007E  
        ??_I2C_Control_Read 0077               __CFG_BOREN$ON 0000                        ltemp 007E  
                      start 0002                        ttemp 007E                        wtemp 007E  
             __CFG_MCLRE$ON 0000        __size_of_I2C_restart 0008               __CFG_LPBOR$ON 0000  
     __size_of_I2C_Stop_Bit 000D                       ?_main 0077                       _ACKEN 10B4  
                     _ACKDT 10B5           _I2C_Control_Write 06AD                       _TRISA 008C  
                     _TRISB 008D                       _TXREG 019A          ?_I2C_Control_Write 0077  
                     _kirk2 0072             __end_of_init_io 06E9                       ltemp0 007E  
                     ltemp1 0082                       ltemp2 0086                       ltemp3 0080  
       ??_I2C_Control_Write 0077                       ttemp0 007E                       ttemp1 0081  
                     ttemp2 0084                       ttemp3 0087                       ttemp4 007F  
                     status 0003                       wtemp0 007E                       wtemp1 0080  
                     wtemp2 0082                       wtemp3 0084                       wtemp4 0086  
                     wtemp5 0088                       wtemp6 007F                _I2C_Stop_Bit 0673  
           __initialization 07F2                __end_of_main 07F2                   ??_I2C_ACK 0077  
                 ??_I2C_NAK 0077   __end_of_I2C_Control_Write 06BD                      ??_main 007B  
    __size_of_I2C_Start_Bit 000F                      _ANSELA 018C                      _ANSELB 018D  
                    _ANSELC 018E                      _SPBRGH 019C                      _SPBRGL 019B  
                    _SSPADD 0212                      _SSPCON 0215                      _SSPBUF 0211  
            __CFG_PWRTE$OFF 0000                ?_serial_init 0077      __size_of_Send_I2C_Data 0009  
            __CFG_STVREN$ON 0000                   ??_init_io 0077       Send_I2C_Data@databyte 0077  
   __end_of__initialization 07FD               _I2C_Start_Bit 068E              __pcstackCOMMON 0077  
__size_of_I2C_Control_Write 0010              _OPTION_REGbits 0095               _Send_I2C_Data 065F  
              ?_RX_I2C_Data 0077                  __pbssBANK0 0020              ?_I2C_Start_Bit 0077  
                __pmaintext 0717                     _I2C_ACK 0656   __size_of_I2C_Control_Read 0010  
                   _I2C_NAK 0680                     _ACK_bit 0020          __size_of_uart_xmit 0006  
            ?_Send_I2C_Data 0077                     _SSP1ADD 0212                     _SSP1BUF 0211  
                   _SSPCON2 0216                     _SSPSTAT 0214     __size_of_I2C_check_idle 0010  
             ??_I2C_restart 007A        __size_of_serial_init 002E                     __ptext1 06E9  
                   __ptext2 0648                     __ptext3 06CD                     __ptext4 065F  
                   __ptext5 0668                     __ptext6 064E                     __ptext7 06BD  
                   __ptext8 0673                     __ptext9 068E                     _init_io 06CD  
           ??_I2C_Start_Bit 0077        end_of_initialization 07FD           __end_of_uart_xmit 064E  
                 _RCSTAbits 019D         __end_of_I2C_restart 0656             ??_Send_I2C_Data 0079  
          __CFG_FOSC$INTOSC 0000                   _TRISAbits 008C                   _TRISBbits 008D  
                 _TRISCbits 008E        uart_xmit@mydata_byte 0077        __size_of_RX_I2C_Data 000B  
                 _TXSTAbits 019E            _I2C_Control_Read 069D         start_initialization 07F2  
            _I2C_check_idle 06BD         I2C_check_idle@byte1 0078         I2C_check_idle@byte2 0079  
               _I2C_restart 064E                    ?_I2C_ACK 0077                    ?_I2C_NAK 0077  
               __pbssCOMMON 0070                   ___latbits 0001      __end_of_I2C_check_idle 06CD  
             ?_I2C_Stop_Bit 0077                    ?_init_io 0077            __CFG_WDTE$NSLEEP 0000  
           ?_I2C_check_idle 0077                    _LATCbits 010E              ??_I2C_Stop_Bit 0077  
                  _PIE1bits 0091                    _PIR1bits 0011               ??_serial_init 0079  
                 _tempbyte1 0075                   _tempbyte2 0076                   _uart_xmit 0648  
                  _SSP1STAT 0214            __size_of_I2C_ACK 0009            __size_of_I2C_NAK 000E  
  __end_of_I2C_Control_Read 06AD       __end_of_I2C_Start_Bit 069D                  ?_uart_xmit 0077  
       __end_of_serial_init 0717            __size_of_init_io 001C       __end_of_Send_I2C_Data 0668  
                  __ptext10 0680                    __ptext11 06AD                    __ptext12 069D  
                  __ptext13 0656               ??_RX_I2C_Data 0077                _SSP1CON2bits 0216  
             __size_of_main 00DB                ?_I2C_restart 0077                _SSP1STATbits 0214  
                _INTCONbits 000B        __end_of_I2C_Stop_Bit 0680           __CFG_CLKOUTEN$OFF 0000  
       __end_of_RX_I2C_Data 0673                  _OSCCONbits 0099                 _serial_init 06E9  
               ??_uart_xmit 0079            ??_I2C_check_idle 0077                 _SSPCON2bits 0216  
                _SSPCONbits 0215  
