

Microchip Technology PIC LITE Macro Assembler V1.35 build -356382666 
                                                                                               Fri Nov 20 00:54:53 2015

Microchip Technology Omniscient Code Generator v1.35 (Free mode) build 201507080246
     1                           	processor	16F1508
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2
    10                           	psect	text2,local,class=CODE,merge=1,delta=2
    11                           	psect	text3,local,class=CODE,merge=1,delta=2
    12                           	psect	text4,local,class=CODE,merge=1,delta=2
    13                           	psect	text5,local,class=CODE,merge=1,delta=2
    14                           	psect	text6,local,class=CODE,merge=1,delta=2
    15                           	psect	text7,local,class=CODE,merge=1,delta=2
    16                           	psect	text8,local,class=CODE,merge=1,delta=2
    17                           	psect	text9,local,class=CODE,merge=1,delta=2
    18                           	psect	text10,local,class=CODE,merge=1,delta=2
    19                           	psect	text11,local,class=CODE,merge=1,delta=2
    20                           	psect	text12,local,class=CODE,merge=1,delta=2
    21                           	psect	text13,local,class=CODE,merge=1,delta=2
    22                           	psect	text14,local,class=CODE,merge=1,delta=2
    23                           	psect	text15,local,class=CODE,merge=1,delta=2
    24                           	psect	text16,local,class=CODE,merge=1,delta=2
    25                           	psect	text17,local,class=CODE,merge=1,delta=2
    26                           	psect	text18,local,class=CODE,merge=1,delta=2
    27                           	psect	text19,local,class=CODE,merge=1,delta=2
    28                           	psect	text20,local,class=CODE,merge=1,delta=2
    29                           	psect	text21,local,class=CODE,merge=1,delta=2
    30                           	psect	text22,local,class=CODE,merge=1,delta=2
    31                           	psect	text23,local,class=CODE,merge=1,delta=2
    32                           	psect	text24,local,class=CODE,merge=1,delta=2
    33                           	psect	text25,local,class=CODE,merge=1,delta=2
    34                           	psect	text26,local,class=CODE,merge=1,delta=2
    35                           	dabs	1,0x7E,2
    36  0000                     	;# 
    37  0001                     	;# 
    38  0002                     	;# 
    39  0003                     	;# 
    40  0004                     	;# 
    41  0005                     	;# 
    42  0006                     	;# 
    43  0007                     	;# 
    44  0008                     	;# 
    45  0009                     	;# 
    46  000A                     	;# 
    47  000B                     	;# 
    48  000C                     	;# 
    49  000D                     	;# 
    50  000E                     	;# 
    51  0011                     	;# 
    52  0012                     	;# 
    53  0013                     	;# 
    54  0015                     	;# 
    55  0016                     	;# 
    56  0016                     	;# 
    57  0017                     	;# 
    58  0018                     	;# 
    59  0019                     	;# 
    60  001A                     	;# 
    61  001B                     	;# 
    62  001C                     	;# 
    63  008C                     	;# 
    64  008D                     	;# 
    65  008E                     	;# 
    66  0091                     	;# 
    67  0092                     	;# 
    68  0093                     	;# 
    69  0095                     	;# 
    70  0096                     	;# 
    71  0097                     	;# 
    72  0099                     	;# 
    73  009A                     	;# 
    74  009B                     	;# 
    75  009B                     	;# 
    76  009C                     	;# 
    77  009D                     	;# 
    78  009E                     	;# 
    79  009F                     	;# 
    80  010C                     	;# 
    81  010D                     	;# 
    82  010E                     	;# 
    83  0111                     	;# 
    84  0112                     	;# 
    85  0113                     	;# 
    86  0114                     	;# 
    87  0115                     	;# 
    88  0116                     	;# 
    89  0117                     	;# 
    90  0118                     	;# 
    91  0119                     	;# 
    92  011D                     	;# 
    93  018C                     	;# 
    94  018D                     	;# 
    95  018E                     	;# 
    96  0191                     	;# 
    97  0191                     	;# 
    98  0192                     	;# 
    99  0193                     	;# 
   100  0193                     	;# 
   101  0194                     	;# 
   102  0195                     	;# 
   103  0196                     	;# 
   104  0197                     	;# 
   105  0199                     	;# 
   106  019A                     	;# 
   107  019B                     	;# 
   108  019B                     	;# 
   109  019C                     	;# 
   110  019D                     	;# 
   111  019E                     	;# 
   112  019F                     	;# 
   113  020C                     	;# 
   114  020D                     	;# 
   115  0211                     	;# 
   116  0211                     	;# 
   117  0212                     	;# 
   118  0212                     	;# 
   119  0213                     	;# 
   120  0213                     	;# 
   121  0214                     	;# 
   122  0214                     	;# 
   123  0215                     	;# 
   124  0215                     	;# 
   125  0215                     	;# 
   126  0216                     	;# 
   127  0216                     	;# 
   128  0217                     	;# 
   129  0217                     	;# 
   130  0391                     	;# 
   131  0392                     	;# 
   132  0393                     	;# 
   133  0394                     	;# 
   134  0395                     	;# 
   135  0396                     	;# 
   136  0498                     	;# 
   137  0498                     	;# 
   138  0499                     	;# 
   139  049A                     	;# 
   140  049B                     	;# 
   141  049B                     	;# 
   142  049C                     	;# 
   143  049D                     	;# 
   144  049E                     	;# 
   145  049F                     	;# 
   146  0611                     	;# 
   147  0612                     	;# 
   148  0613                     	;# 
   149  0613                     	;# 
   150  0614                     	;# 
   151  0615                     	;# 
   152  0616                     	;# 
   153  0616                     	;# 
   154  0617                     	;# 
   155  0618                     	;# 
   156  0619                     	;# 
   157  0619                     	;# 
   158  061A                     	;# 
   159  061B                     	;# 
   160  061C                     	;# 
   161  061C                     	;# 
   162  0691                     	;# 
   163  0692                     	;# 
   164  0693                     	;# 
   165  0694                     	;# 
   166  0695                     	;# 
   167  0F0F                     	;# 
   168  0F10                     	;# 
   169  0F11                     	;# 
   170  0F12                     	;# 
   171  0F13                     	;# 
   172  0F14                     	;# 
   173  0F15                     	;# 
   174  0F16                     	;# 
   175  0F17                     	;# 
   176  0F18                     	;# 
   177  0F19                     	;# 
   178  0F1A                     	;# 
   179  0F1B                     	;# 
   180  0F1C                     	;# 
   181  0F1D                     	;# 
   182  0F1E                     	;# 
   183  0F1F                     	;# 
   184  0F20                     	;# 
   185  0F21                     	;# 
   186  0F22                     	;# 
   187  0F23                     	;# 
   188  0F24                     	;# 
   189  0F25                     	;# 
   190  0F26                     	;# 
   191  0F27                     	;# 
   192  0F28                     	;# 
   193  0F29                     	;# 
   194  0F2A                     	;# 
   195  0F2B                     	;# 
   196  0F2C                     	;# 
   197  0F2D                     	;# 
   198  0F2E                     	;# 
   199  0F2F                     	;# 
   200  0F8C                     	;# 
   201  0F8D                     	;# 
   202  0F91                     	;# 
   203  0F95                     	;# 
   204  0F96                     	;# 
   205  0F97                     	;# 
   206  0F9C                     	;# 
   207  0F9D                     	;# 
   208  0F9E                     	;# 
   209  0FE3                     	;# 
   210  0FE4                     	;# 
   211  0FE5                     	;# 
   212  0FE6                     	;# 
   213  0FE7                     	;# 
   214  0FE8                     	;# 
   215  0FE9                     	;# 
   216  0FEA                     	;# 
   217  0FEB                     	;# 
   218  0FED                     	;# 
   219  0FEE                     	;# 
   220  0FEF                     	;# 
   221  0000                     	;# 
   222  0001                     	;# 
   223  0002                     	;# 
   224  0003                     	;# 
   225  0004                     	;# 
   226  0005                     	;# 
   227  0006                     	;# 
   228  0007                     	;# 
   229  0008                     	;# 
   230  0009                     	;# 
   231  000A                     	;# 
   232  000B                     	;# 
   233  000C                     	;# 
   234  000D                     	;# 
   235  000E                     	;# 
   236  0011                     	;# 
   237  0012                     	;# 
   238  0013                     	;# 
   239  0015                     	;# 
   240  0016                     	;# 
   241  0016                     	;# 
   242  0017                     	;# 
   243  0018                     	;# 
   244  0019                     	;# 
   245  001A                     	;# 
   246  001B                     	;# 
   247  001C                     	;# 
   248  008C                     	;# 
   249  008D                     	;# 
   250  008E                     	;# 
   251  0091                     	;# 
   252  0092                     	;# 
   253  0093                     	;# 
   254  0095                     	;# 
   255  0096                     	;# 
   256  0097                     	;# 
   257  0099                     	;# 
   258  009A                     	;# 
   259  009B                     	;# 
   260  009B                     	;# 
   261  009C                     	;# 
   262  009D                     	;# 
   263  009E                     	;# 
   264  009F                     	;# 
   265  010C                     	;# 
   266  010D                     	;# 
   267  010E                     	;# 
   268  0111                     	;# 
   269  0112                     	;# 
   270  0113                     	;# 
   271  0114                     	;# 
   272  0115                     	;# 
   273  0116                     	;# 
   274  0117                     	;# 
   275  0118                     	;# 
   276  0119                     	;# 
   277  011D                     	;# 
   278  018C                     	;# 
   279  018D                     	;# 
   280  018E                     	;# 
   281  0191                     	;# 
   282  0191                     	;# 
   283  0192                     	;# 
   284  0193                     	;# 
   285  0193                     	;# 
   286  0194                     	;# 
   287  0195                     	;# 
   288  0196                     	;# 
   289  0197                     	;# 
   290  0199                     	;# 
   291  019A                     	;# 
   292  019B                     	;# 
   293  019B                     	;# 
   294  019C                     	;# 
   295  019D                     	;# 
   296  019E                     	;# 
   297  019F                     	;# 
   298  020C                     	;# 
   299  020D                     	;# 
   300  0211                     	;# 
   301  0211                     	;# 
   302  0212                     	;# 
   303  0212                     	;# 
   304  0213                     	;# 
   305  0213                     	;# 
   306  0214                     	;# 
   307  0214                     	;# 
   308  0215                     	;# 
   309  0215                     	;# 
   310  0215                     	;# 
   311  0216                     	;# 
   312  0216                     	;# 
   313  0217                     	;# 
   314  0217                     	;# 
   315  0391                     	;# 
   316  0392                     	;# 
   317  0393                     	;# 
   318  0394                     	;# 
   319  0395                     	;# 
   320  0396                     	;# 
   321  0498                     	;# 
   322  0498                     	;# 
   323  0499                     	;# 
   324  049A                     	;# 
   325  049B                     	;# 
   326  049B                     	;# 
   327  049C                     	;# 
   328  049D                     	;# 
   329  049E                     	;# 
   330  049F                     	;# 
   331  0611                     	;# 
   332  0612                     	;# 
   333  0613                     	;# 
   334  0613                     	;# 
   335  0614                     	;# 
   336  0615                     	;# 
   337  0616                     	;# 
   338  0616                     	;# 
   339  0617                     	;# 
   340  0618                     	;# 
   341  0619                     	;# 
   342  0619                     	;# 
   343  061A                     	;# 
   344  061B                     	;# 
   345  061C                     	;# 
   346  061C                     	;# 
   347  0691                     	;# 
   348  0692                     	;# 
   349  0693                     	;# 
   350  0694                     	;# 
   351  0695                     	;# 
   352  0F0F                     	;# 
   353  0F10                     	;# 
   354  0F11                     	;# 
   355  0F12                     	;# 
   356  0F13                     	;# 
   357  0F14                     	;# 
   358  0F15                     	;# 
   359  0F16                     	;# 
   360  0F17                     	;# 
   361  0F18                     	;# 
   362  0F19                     	;# 
   363  0F1A                     	;# 
   364  0F1B                     	;# 
   365  0F1C                     	;# 
   366  0F1D                     	;# 
   367  0F1E                     	;# 
   368  0F1F                     	;# 
   369  0F20                     	;# 
   370  0F21                     	;# 
   371  0F22                     	;# 
   372  0F23                     	;# 
   373  0F24                     	;# 
   374  0F25                     	;# 
   375  0F26                     	;# 
   376  0F27                     	;# 
   377  0F28                     	;# 
   378  0F29                     	;# 
   379  0F2A                     	;# 
   380  0F2B                     	;# 
   381  0F2C                     	;# 
   382  0F2D                     	;# 
   383  0F2E                     	;# 
   384  0F2F                     	;# 
   385  0F8C                     	;# 
   386  0F8D                     	;# 
   387  0F91                     	;# 
   388  0F95                     	;# 
   389  0F96                     	;# 
   390  0F97                     	;# 
   391  0F9C                     	;# 
   392  0F9D                     	;# 
   393  0F9E                     	;# 
   394  0FE3                     	;# 
   395  0FE4                     	;# 
   396  0FE5                     	;# 
   397  0FE6                     	;# 
   398  0FE7                     	;# 
   399  0FE8                     	;# 
   400  0FE9                     	;# 
   401  0FEA                     	;# 
   402  0FEB                     	;# 
   403  0FED                     	;# 
   404  0FEE                     	;# 
   405  0FEF                     	;# 
   406  000B                     _INTCONbits	set	11
   407  0011                     _PIR1bits	set	17
   408  0095                     _OPTION_REGbits	set	149
   409  0099                     _OSCCONbits	set	153
   410  0091                     _PIE1bits	set	145
   411  008C                     _TRISA	set	140
   412  008C                     _TRISAbits	set	140
   413  008D                     _TRISB	set	141
   414  008D                     _TRISBbits	set	141
   415  008E                     _TRISCbits	set	142
   416  010E                     _LATCbits	set	270
   417  018C                     _ANSELA	set	396
   418  018D                     _ANSELB	set	397
   419  018E                     _ANSELC	set	398
   420  019D                     _RCSTAbits	set	413
   421  019C                     _SPBRGH	set	412
   422  019B                     _SPBRGL	set	411
   423  019A                     _TXREG	set	410
   424  019E                     _TXSTAbits	set	414
   425  0212                     _SSP1ADD	set	530
   426  0211                     _SSP1BUF	set	529
   427  0216                     _SSP1CON2bits	set	534
   428  0214                     _SSP1STAT	set	532
   429  0214                     _SSP1STATbits	set	532
   430  0212                     _SSPADD	set	530
   431  0211                     _SSPBUF	set	529
   432  0215                     _SSPCON	set	533
   433  0216                     _SSPCON2	set	534
   434  0216                     _SSPCON2bits	set	534
   435  0215                     _SSPCONbits	set	533
   436  0214                     _SSPSTAT	set	532
   437  0214                     _SSPSTATbits	set	532
   438  10B5                     _ACKDT	set	4277
   439  10B4                     _ACKEN	set	4276
   440  10A0                     _BF	set	4256
   441  10B2                     _PEN	set	4274
   442  10B3                     _RCEN	set	4275
   443  10B1                     _RSEN	set	4273
   444                           
   445                           ; #config settings
   446  0000                     
   447                           	psect	cinit
   448  07F3                     start_initialization:	
   449  07F3                     __initialization:	
   450                           
   451                           ; Clear objects allocated to BANK0
   452  07F3  01D9               	clrf	__pbssBANK0& (0+127)
   453  07F4  01DA               	clrf	(__pbssBANK0+1)& (0+127)
   454  07F5  01DB               	clrf	(__pbssBANK0+2)& (0+127)
   455  07F6  01DC               	clrf	(__pbssBANK0+3)& (0+127)
   456  07F7  01DD               	clrf	(__pbssBANK0+4)& (0+127)
   457  07F8  01DE               	clrf	(__pbssBANK0+5)& (0+127)
   458  07F9  01DF               	clrf	(__pbssBANK0+6)& (0+127)
   459  07FA  01E0               	clrf	(__pbssBANK0+7)& (0+127)
   460  07FB  01E1               	clrf	(__pbssBANK0+8)& (0+127)
   461  07FC  01E2               	clrf	(__pbssBANK0+9)& (0+127)
   462  07FD                     end_of_initialization:	
   463                           ;End of C runtime variable initialization code
   464                           
   465  07FD                     __end_of__initialization:	
   466  07FD  0020               	movlb	0
   467  07FE  3186  2EF2         	ljmp	_main	;jump to C main() function
   468                           
   469                           	psect	bssBANK0
   470  0059                     __pbssBANK0:	
   471  0059                     _ACK_bit:	
   472  0059                     	ds	2
   473  005B                     _i:	
   474  005B                     	ds	2
   475  005D                     _kirk:	
   476  005D                     	ds	1
   477  005E                     _kirk2:	
   478  005E                     	ds	1
   479  005F                     _tb1:	
   480  005F                     	ds	1
   481  0060                     _tb2:	
   482  0060                     	ds	1
   483  0061                     _tempbyte1:	
   484  0061                     	ds	1
   485  0062                     _tempbyte2:	
   486  0062                     	ds	1
   487                           
   488                           	psect	cstackCOMMON
   489  0070                     __pcstackCOMMON:	
   490  0070                     ?_init_io:	
   491  0070                     ??_init_io:	
   492                           ; 0 bytes @ 0x0
   493                           
   494  0070                     ?_uart_xmit:	
   495                           ; 0 bytes @ 0x0
   496                           
   497  0070                     ?_serial_init:	
   498                           ; 0 bytes @ 0x0
   499                           
   500  0070                     ??_serial_init:	
   501                           ; 0 bytes @ 0x0
   502                           
   503  0070                     ?_I2C_ACK:	
   504                           ; 0 bytes @ 0x0
   505                           
   506  0070                     ??_I2C_ACK:	
   507                           ; 0 bytes @ 0x0
   508                           
   509  0070                     ?_Send_I2C_Data:	
   510                           ; 0 bytes @ 0x0
   511                           
   512  0070                     ??_RX_I2C_Data:	
   513                           ; 0 bytes @ 0x0
   514                           
   515  0070                     ?_I2C_Control_Write:	
   516                           ; 0 bytes @ 0x0
   517                           
   518  0070                     ??_I2C_Control_Write:	
   519                           ; 0 bytes @ 0x0
   520                           
   521  0070                     ?_I2C_Control_Read:	
   522                           ; 0 bytes @ 0x0
   523                           
   524  0070                     ??_I2C_Control_Read:	
   525                           ; 0 bytes @ 0x0
   526                           
   527  0070                     ?_I2C_Start_Bit:	
   528                           ; 0 bytes @ 0x0
   529                           
   530  0070                     ??_I2C_Start_Bit:	
   531                           ; 0 bytes @ 0x0
   532                           
   533  0070                     ?_I2C_check_idle:	
   534                           ; 0 bytes @ 0x0
   535                           
   536  0070                     ??_I2C_check_idle:	
   537                           ; 0 bytes @ 0x0
   538                           
   539  0070                     ?_I2C_restart:	
   540                           ; 0 bytes @ 0x0
   541                           
   542  0070                     ?_I2C_Stop_Bit:	
   543                           ; 0 bytes @ 0x0
   544                           
   545  0070                     ??_I2C_Stop_Bit:	
   546                           ; 0 bytes @ 0x0
   547                           
   548  0070                     ?_I2C_NAK:	
   549                           ; 0 bytes @ 0x0
   550                           
   551  0070                     ??_I2C_NAK:	
   552                           ; 0 bytes @ 0x0
   553                           
   554  0070                     ?_UART_String:	
   555                           ; 0 bytes @ 0x0
   556                           
   557  0070                     ?_RX_I2C_Data:	
   558                           ; 0 bytes @ 0x0
   559                           
   560  0070                     ?_main:	
   561                           ; 1 bytes @ 0x0
   562                           
   563  0070                     ?___lwdiv:	
   564                           ; 2 bytes @ 0x0
   565                           
   566  0070                     ?___lwmod:	
   567                           ; 2 bytes @ 0x0
   568                           
   569  0070                     ?___ftpack:	
   570                           ; 2 bytes @ 0x0
   571                           
   572  0070                     ?___fttol:	
   573                           ; 3 bytes @ 0x0
   574                           
   575  0070                     uart_xmit@mydata_byte:	
   576                           ; 4 bytes @ 0x0
   577                           
   578  0070                     Send_I2C_Data@databyte:	
   579                           ; 2 bytes @ 0x0
   580                           
   581  0070                     ___lwdiv@divisor:	
   582                           ; 2 bytes @ 0x0
   583                           
   584  0070                     ___lwmod@divisor:	
   585                           ; 2 bytes @ 0x0
   586                           
   587  0070                     ___ftpack@arg:	
   588                           ; 2 bytes @ 0x0
   589                           
   590  0070                     ___fttol@f1:	
   591                           ; 3 bytes @ 0x0
   592                           
   593                           
   594                           ; 3 bytes @ 0x0
   595  0070                     	ds	1
   596  0071                     RX_I2C_Data@byte:	
   597  0071                     I2C_check_idle@byte1:	
   598                           ; 1 bytes @ 0x1
   599                           
   600                           
   601                           ; 1 bytes @ 0x1
   602  0071                     	ds	1
   603  0072                     ??_uart_xmit:	
   604  0072                     ??_Send_I2C_Data:	
   605                           ; 0 bytes @ 0x2
   606                           
   607  0072                     ??_UART_String:	
   608                           ; 0 bytes @ 0x2
   609                           
   610  0072                     I2C_check_idle@byte2:	
   611                           ; 0 bytes @ 0x2
   612                           
   613  0072                     ___lwdiv@dividend:	
   614                           ; 1 bytes @ 0x2
   615                           
   616  0072                     ___lwmod@dividend:	
   617                           ; 2 bytes @ 0x2
   618                           
   619                           
   620                           ; 2 bytes @ 0x2
   621  0072                     	ds	1
   622  0073                     ??_I2C_restart:	
   623  0073                     ?_GetReading:	
   624                           ; 0 bytes @ 0x3
   625                           
   626  0073                     ___ftpack@exp:	
   627                           ; 7 bytes @ 0x3
   628                           
   629                           
   630                           ; 1 bytes @ 0x3
   631  0073                     	ds	1
   632  0074                     ??___fttol:	
   633  0074                     ??___lwdiv:	
   634                           ; 0 bytes @ 0x4
   635                           
   636  0074                     ??___lwmod:	
   637                           ; 0 bytes @ 0x4
   638                           
   639  0074                     ___ftpack@sign:	
   640                           ; 0 bytes @ 0x4
   641                           
   642                           
   643                           ; 1 bytes @ 0x4
   644  0074                     	ds	1
   645  0075                     ??___ftpack:	
   646  0075                     ___lwmod@counter:	
   647                           ; 0 bytes @ 0x5
   648                           
   649  0075                     UART_String@i:	
   650                           ; 1 bytes @ 0x5
   651                           
   652  0075                     ___lwdiv@quotient:	
   653                           ; 2 bytes @ 0x5
   654                           
   655                           
   656                           ; 2 bytes @ 0x5
   657  0075                     	ds	2
   658  0077                     UART_String@letters:	
   659  0077                     ___lwdiv@counter:	
   660                           ; 1 bytes @ 0x7
   661                           
   662                           
   663                           ; 1 bytes @ 0x7
   664  0077                     	ds	1
   665  0078                     ?_utoa:	
   666  0078                     ?___awtoft:	
   667                           ; 1 bytes @ 0x8
   668                           
   669  0078                     ?___ftmul:	
   670                           ; 3 bytes @ 0x8
   671                           
   672  0078                     ___fttol@sign1:	
   673                           ; 3 bytes @ 0x8
   674                           
   675  0078                     ___awtoft@c:	
   676                           ; 1 bytes @ 0x8
   677                           
   678  0078                     utoa@val:	
   679                           ; 2 bytes @ 0x8
   680                           
   681  0078                     ___ftmul@f1:	
   682                           ; 2 bytes @ 0x8
   683                           
   684                           
   685                           ; 3 bytes @ 0x8
   686  0078                     	ds	1
   687  0079                     ___fttol@lval:	
   688                           
   689                           ; 4 bytes @ 0x9
   690  0079                     	ds	1
   691  007A                     utoa@base:	
   692                           
   693                           ; 2 bytes @ 0xA
   694  007A                     	ds	1
   695  007B                     ??___awtoft:	
   696  007B                     ___ftmul@f2:	
   697                           ; 0 bytes @ 0xB
   698                           
   699                           
   700                           ; 3 bytes @ 0xB
   701  007B                     	ds	1
   702  007C                     ??_utoa:	
   703                           
   704                           ; 0 bytes @ 0xC
   705  007C                     	ds	1
   706  007D                     ??_itoa:	
   707  007D                     ___awtoft@sign:	
   708                           ; 0 bytes @ 0xD
   709                           
   710  007D                     ___fttol@exp1:	
   711                           ; 1 bytes @ 0xD
   712                           
   713                           
   714                           ; 1 bytes @ 0xD
   715  007D                     	ds	1
   716                           
   717                           	psect	cstackBANK0
   718  0020                     __pcstackBANK0:	
   719  0020                     ??_GetReading:	
   720  0020                     ??___ftmul:	
   721                           ; 0 bytes @ 0x0
   722                           
   723  0020                     utoa@v:	
   724                           ; 0 bytes @ 0x0
   725                           
   726                           
   727                           ; 2 bytes @ 0x0
   728  0020                     	ds	2
   729  0022                     utoa@c:	
   730                           
   731                           ; 1 bytes @ 0x2
   732  0022                     	ds	1
   733  0023                     utoa@buf:	
   734                           
   735                           ; 1 bytes @ 0x3
   736  0023                     	ds	1
   737  0024                     ?_itoa:	
   738  0024                     ___ftmul@exp:	
   739                           ; 1 bytes @ 0x4
   740                           
   741  0024                     itoa@val:	
   742                           ; 1 bytes @ 0x4
   743                           
   744                           
   745                           ; 2 bytes @ 0x4
   746  0024                     	ds	1
   747  0025                     GetReading@crc1:	
   748  0025                     ___ftmul@f3_as_product:	
   749                           ; 1 bytes @ 0x5
   750                           
   751                           
   752                           ; 3 bytes @ 0x5
   753  0025                     	ds	1
   754  0026                     GetReading@crc2:	
   755  0026                     itoa@base:	
   756                           ; 1 bytes @ 0x6
   757                           
   758                           
   759                           ; 2 bytes @ 0x6
   760  0026                     	ds	1
   761  0027                     GetReading@th:	
   762                           
   763                           ; 1 bytes @ 0x7
   764  0027                     	ds	1
   765  0028                     GetReading@tl:	
   766  0028                     ___ftmul@cntr:	
   767                           ; 1 bytes @ 0x8
   768                           
   769  0028                     itoa@cp:	
   770                           ; 1 bytes @ 0x8
   771                           
   772                           
   773                           ; 1 bytes @ 0x8
   774  0028                     	ds	1
   775  0029                     GetReading@hh:	
   776  0029                     ___ftmul@sign:	
   777                           ; 1 bytes @ 0x9
   778                           
   779  0029                     itoa@buf:	
   780                           ; 1 bytes @ 0x9
   781                           
   782                           
   783                           ; 1 bytes @ 0x9
   784  0029                     	ds	1
   785  002A                     ?_CalcTemp:	
   786  002A                     ?___ftadd:	
   787                           ; 2 bytes @ 0xA
   788                           
   789  002A                     CalcTemp@b2:	
   790                           ; 3 bytes @ 0xA
   791                           
   792  002A                     GetReading@hl:	
   793                           ; 1 bytes @ 0xA
   794                           
   795  002A                     ___ftadd@f1:	
   796                           ; 1 bytes @ 0xA
   797                           
   798                           
   799                           ; 3 bytes @ 0xA
   800  002A                     	ds	1
   801  002B                     GetReading@local:	
   802                           
   803                           ; 7 bytes @ 0xB
   804  002B                     	ds	1
   805  002C                     ??_CalcTemp:	
   806                           
   807                           ; 0 bytes @ 0xC
   808  002C                     	ds	1
   809  002D                     ___ftadd@f2:	
   810                           
   811                           ; 3 bytes @ 0xD
   812  002D                     	ds	3
   813  0030                     ??___ftadd:	
   814                           
   815                           ; 0 bytes @ 0x10
   816  0030                     	ds	1
   817  0031                     CalcTemp@rcv_val:	
   818                           
   819                           ; 3 bytes @ 0x11
   820  0031                     	ds	3
   821  0034                     ___ftadd@sign:	
   822  0034                     CalcTemp@ans:	
   823                           ; 1 bytes @ 0x14
   824                           
   825                           
   826                           ; 3 bytes @ 0x14
   827  0034                     	ds	1
   828  0035                     ___ftadd@exp2:	
   829                           
   830                           ; 1 bytes @ 0x15
   831  0035                     	ds	1
   832  0036                     ___ftadd@exp1:	
   833                           
   834                           ; 1 bytes @ 0x16
   835  0036                     	ds	1
   836  0037                     ?_CalcHumid:	
   837  0037                     CalcTemp@b1:	
   838                           ; 2 bytes @ 0x17
   839                           
   840  0037                     CalcHumid@b2:	
   841                           ; 1 bytes @ 0x17
   842                           
   843                           
   844                           ; 1 bytes @ 0x17
   845  0037                     	ds	2
   846  0039                     ??_CalcHumid:	
   847                           
   848                           ; 0 bytes @ 0x19
   849  0039                     	ds	5
   850  003E                     CalcHumid@rcv_val:	
   851                           
   852                           ; 3 bytes @ 0x1E
   853  003E                     	ds	3
   854  0041                     CalcHumid@b1:	
   855                           
   856                           ; 1 bytes @ 0x21
   857  0041                     	ds	1
   858  0042                     CalcHumid@ans:	
   859                           
   860                           ; 3 bytes @ 0x22
   861  0042                     	ds	3
   862  0045                     ??_main:	
   863                           
   864                           ; 0 bytes @ 0x25
   865  0045                     	ds	3
   866  0048                     main@buf:	
   867                           
   868                           ; 8 bytes @ 0x28
   869  0048                     	ds	8
   870  0050                     main@ct:	
   871                           
   872                           ; 2 bytes @ 0x30
   873  0050                     	ds	2
   874  0052                     main@received:	
   875                           
   876                           ; 7 bytes @ 0x32
   877  0052                     	ds	7
   878                           
   879                           	psect	maintext
   880  06F2                     __pmaintext:	
   881 ;;
   882 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   883 ;;
   884 ;; *************** function _main *****************
   885 ;; Defined at:
   886 ;;		line 307 in file "main.c"
   887 ;; Parameters:    Size  Location     Type
   888 ;;		None
   889 ;; Auto vars:     Size  Location     Type
   890 ;;  buf             8   40[BANK0 ] unsigned char [8]
   891 ;;  ct              2   48[BANK0 ] int 
   892 ;;  gah             2    0        unsigned int 
   893 ;;  received        7   50[BANK0 ] struct sht_return
   894 ;; Return value:  Size  Location     Type
   895 ;;                  2  170[None  ] int 
   896 ;; Registers used:
   897 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
   898 ;; Tracked objects:
   899 ;;		On entry : B1F/0
   900 ;;		On exit  : 0/0
   901 ;;		Unchanged: 0/0
   902 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   903 ;;      Params:         0       0       0       0
   904 ;;      Locals:         0      17       0       0
   905 ;;      Temps:          0       3       0       0
   906 ;;      Totals:         0      20       0       0
   907 ;;Total ram usage:       20 bytes
   908 ;; Hardware stack levels required when called:    3
   909 ;; This function calls:
   910 ;;		_CalcHumid
   911 ;;		_CalcTemp
   912 ;;		_GetReading
   913 ;;		_UART_String
   914 ;;		_init_io
   915 ;;		_itoa
   916 ;;		_serial_init
   917 ;;		_uart_xmit
   918 ;; This function is called by:
   919 ;;		Startup code after reset
   920 ;; This function uses a non-reentrant model
   921 ;;
   922                           
   923                           
   924                           ;psect for function _main
   925  06F2                     _main:	
   926                           
   927                           ;main.c: 308: Sht_rtn received;
   928                           ;main.c: 309: OSCCONbits.IRCF = 0x0d;
   929                           
   930                           ;incstack = 0
   931                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
   932  06F2  0021               	movlb	1	; select bank1
   933  06F3  0819               	movf	25,w	;volatile
   934  06F4  3987               	andlw	-121
   935  06F5  3868               	iorlw	104
   936  06F6  0099               	movwf	25	;volatile
   937                           
   938                           ;main.c: 310: OSCCONbits.SCS = 0x02;
   939  06F7  0819               	movf	25,w	;volatile
   940  06F8  39FC               	andlw	-4
   941  06F9  3802               	iorlw	2
   942  06FA  0099               	movwf	25	;volatile
   943                           
   944                           ;main.c: 311: OPTION_REGbits.nWPUEN = 0;
   945  06FB  1395               	bcf	21,7	;volatile
   946                           
   947                           ;main.c: 313: init_io();
   948  06FC  3181  21DF  3186   	fcall	_init_io
   949                           
   950                           ;main.c: 314: serial_init();
   951  06FF  3181  21CE  3186   	fcall	_serial_init
   952                           
   953                           ;main.c: 316: SSPCONbits.SSPM=0x08;
   954  0702  0024               	movlb	4	; select bank4
   955  0703  0815               	movf	21,w	;volatile
   956  0704  39F0               	andlw	-16
   957  0705  3808               	iorlw	8
   958  0706  0095               	movwf	21	;volatile
   959                           
   960                           ;main.c: 317: SSPCONbits.SSPEN=1;
   961  0707  1695               	bsf	21,5	;volatile
   962                           
   963                           ;main.c: 318: SSPADD = 0x09;
   964  0708  3009               	movlw	9
   965  0709  0092               	movwf	18	;volatile
   966                           
   967                           ;main.c: 319: SSP1ADD = 0x09;
   968  070A  3009               	movlw	9
   969  070B  0092               	movwf	18	;volatile
   970  070C                     l171:	
   971                           ;main.c: 323: while(1){
   972                           
   973                           
   974                           ;main.c: 324: _delay((unsigned long)((50)*(4000000/4000.0)));
   975  070C  3041               	movlw	65
   976  070D  0020               	movlb	0	; select bank0
   977  070E  00C6               	movwf	??_main+1
   978  070F  30EE               	movlw	238
   979  0710  00C5               	movwf	??_main
   980  0711                     u1927:	
   981  0711  0BC5               	decfsz	??_main,f
   982  0712  2F11               	goto	u1927
   983  0713  0BC6               	decfsz	??_main+1,f
   984  0714  2F11               	goto	u1927
   985  0715  0000               	nop
   986                           
   987                           ;main.c: 329: uart_xmit(tempbyte1);
   988  0716  0020               	movlb	0	; select bank0
   989  0717  0861               	movf	_tempbyte1,w
   990  0718  00C5               	movwf	??_main
   991  0719  01C6               	clrf	??_main+1
   992  071A  0845               	movf	??_main,w
   993  071B  00F0               	movwf	uart_xmit@mydata_byte
   994  071C  0846               	movf	??_main+1,w
   995  071D  00F1               	movwf	uart_xmit@mydata_byte+1
   996  071E  3181  2148  3186   	fcall	_uart_xmit
   997                           
   998                           ;main.c: 330: uart_xmit(tempbyte2);
   999  0721  0020               	movlb	0	; select bank0
  1000  0722  0862               	movf	_tempbyte2,w
  1001  0723  00C5               	movwf	??_main
  1002  0724  01C6               	clrf	??_main+1
  1003  0725  0845               	movf	??_main,w
  1004  0726  00F0               	movwf	uart_xmit@mydata_byte
  1005  0727  0846               	movf	??_main+1,w
  1006  0728  00F1               	movwf	uart_xmit@mydata_byte+1
  1007  0729  3181  2148  3186   	fcall	_uart_xmit
  1008                           
  1009                           ;main.c: 331: uart_xmit(tb1);
  1010  072C  0020               	movlb	0	; select bank0
  1011  072D  085F               	movf	_tb1,w
  1012  072E  00C5               	movwf	??_main
  1013  072F  01C6               	clrf	??_main+1
  1014  0730  0845               	movf	??_main,w
  1015  0731  00F0               	movwf	uart_xmit@mydata_byte
  1016  0732  0846               	movf	??_main+1,w
  1017  0733  00F1               	movwf	uart_xmit@mydata_byte+1
  1018  0734  3181  2148  3186   	fcall	_uart_xmit
  1019                           
  1020                           ;main.c: 332: uart_xmit(tb2);
  1021  0737  0020               	movlb	0	; select bank0
  1022  0738  0860               	movf	_tb2,w
  1023  0739  00C5               	movwf	??_main
  1024  073A  01C6               	clrf	??_main+1
  1025  073B  0845               	movf	??_main,w
  1026  073C  00F0               	movwf	uart_xmit@mydata_byte
  1027  073D  0846               	movf	??_main+1,w
  1028  073E  00F1               	movwf	uart_xmit@mydata_byte+1
  1029  073F  3181  2148  3186   	fcall	_uart_xmit
  1030                           
  1031                           ;main.c: 334: _delay((unsigned long)((1)*(4000000/4000.0)));
  1032  0742  30F9               	movlw	249
  1033  0743  0020               	movlb	0	; select bank0
  1034  0744  00C5               	movwf	??_main
  1035  0745                     u1937:	
  1036  0745  0000               	nop
  1037  0746  0BC5               	decfsz	??_main,f
  1038  0747  2F45               	goto	u1937
  1039  0748  3200               	nop2	;nop
  1040  0749  0000               	nop
  1041                           
  1042                           ;main.c: 336: received = GetReading();
  1043  074A  3184  24B0  3186   	fcall	_GetReading
  1044  074D  3073               	movlw	low ?_GetReading
  1045  074E  0086               	movwf	6
  1046  074F  3000               	movlw	high ?_GetReading
  1047  0750  0087               	movwf	7
  1048  0751  3052               	movlw	low main@received
  1049  0752  0084               	movwf	4
  1050  0753  3000               	movlw	high main@received
  1051  0754  0085               	movwf	5
  1052  0755  3007               	movlw	7
  1053  0756  0020               	movlb	0	; select bank0
  1054  0757  00C5               	movwf	??_main
  1055  0758                     u1910:	
  1056  0758  0016               	moviw fsr1++
  1057  0759  001A               	movwi fsr0++
  1058  075A  0BC5               	decfsz	??_main,f
  1059  075B  2F58               	goto	u1910
  1060                           
  1061                           ;main.c: 337: unsigned int gah;
  1062                           ;main.c: 338: char buf[8];
  1063                           ;main.c: 339: int ct = CalcTemp(tempbyte1,tempbyte2);
  1064  075C  0862               	movf	_tempbyte2,w
  1065  075D  00C5               	movwf	??_main
  1066  075E  0845               	movf	??_main,w
  1067  075F  00AA               	movwf	CalcTemp@b2
  1068  0760  0861               	movf	_tempbyte1,w
  1069  0761  3182  22C0  3186   	fcall	_CalcTemp
  1070  0764  0020               	movlb	0	; select bank0
  1071  0765  082B               	movf	?_CalcTemp+1,w
  1072  0766  00D1               	movwf	main@ct+1
  1073  0767  082A               	movf	?_CalcTemp,w
  1074  0768  00D0               	movwf	main@ct
  1075                           
  1076                           ;main.c: 340: _delay((unsigned long)((500)*(4000000/4000.0)));
  1077  0769  3003               	movlw	3
  1078  076A  00C7               	movwf	??_main+2
  1079  076B  308A               	movlw	138
  1080  076C  00C6               	movwf	??_main+1
  1081  076D  3056               	movlw	86
  1082  076E  00C5               	movwf	??_main
  1083  076F                     u1947:	
  1084  076F  0BC5               	decfsz	??_main,f
  1085  0770  2F6F               	goto	u1947
  1086  0771  0BC6               	decfsz	??_main+1,f
  1087  0772  2F6F               	goto	u1947
  1088  0773  0BC7               	decfsz	??_main+2,f
  1089  0774  2F6F               	goto	u1947
  1090  0775  3200               	nop2
  1091                           
  1092                           ;main.c: 341: LATCbits.LATC0 = 1;
  1093  0776  0022               	movlb	2	; select bank2
  1094  0777  140E               	bsf	14,0	;volatile
  1095                           
  1096                           ;main.c: 342: _delay((unsigned long)((500)*(4000000/4000.0)));
  1097  0778  3003               	movlw	3
  1098  0779  0020               	movlb	0	; select bank0
  1099  077A  00C7               	movwf	??_main+2
  1100  077B  308A               	movlw	138
  1101  077C  00C6               	movwf	??_main+1
  1102  077D  3056               	movlw	86
  1103  077E  00C5               	movwf	??_main
  1104  077F                     u1957:	
  1105  077F  0BC5               	decfsz	??_main,f
  1106  0780  2F7F               	goto	u1957
  1107  0781  0BC6               	decfsz	??_main+1,f
  1108  0782  2F7F               	goto	u1957
  1109  0783  0BC7               	decfsz	??_main+2,f
  1110  0784  2F7F               	goto	u1957
  1111  0785  3200               	nop2
  1112                           
  1113                           ;main.c: 343: LATCbits.LATC0 = 0;
  1114  0786  0022               	movlb	2	; select bank2
  1115  0787  100E               	bcf	14,0	;volatile
  1116                           
  1117                           ;main.c: 344: itoa(buf,ct,10);
  1118  0788  0020               	movlb	0	; select bank0
  1119  0789  0851               	movf	main@ct+1,w
  1120  078A  00A5               	movwf	itoa@val+1
  1121  078B  0850               	movf	main@ct,w
  1122  078C  00A4               	movwf	itoa@val
  1123  078D  300A               	movlw	10
  1124  078E  00A6               	movwf	itoa@base
  1125  078F  3000               	movlw	0
  1126  0790  00A7               	movwf	itoa@base+1
  1127  0791  3048               	movlw	(low (main@buf| 0))& (0+255)
  1128  0792  3182  223C  3186   	fcall	_itoa
  1129                           
  1130                           ;main.c: 345: UART_String(buf);
  1131  0795  3048               	movlw	(low (main@buf| 0))& (0+255)
  1132  0796  3182  221B  3186   	fcall	_UART_String
  1133                           
  1134                           ;main.c: 346: uart_xmit(10);
  1135  0799  300A               	movlw	10
  1136  079A  00F0               	movwf	uart_xmit@mydata_byte
  1137  079B  3000               	movlw	0
  1138  079C  00F1               	movwf	uart_xmit@mydata_byte+1
  1139  079D  3181  2148  3186   	fcall	_uart_xmit
  1140                           
  1141                           ;main.c: 347: uart_xmit(13);
  1142  07A0  300D               	movlw	13
  1143  07A1  00F0               	movwf	uart_xmit@mydata_byte
  1144  07A2  3000               	movlw	0
  1145  07A3  00F1               	movwf	uart_xmit@mydata_byte+1
  1146  07A4  3181  2148  3186   	fcall	_uart_xmit
  1147                           
  1148                           ;main.c: 349: int ct = CalcHumid(tb1,tb2);
  1149  07A7  0020               	movlb	0	; select bank0
  1150  07A8  0860               	movf	_tb2,w
  1151  07A9  00C5               	movwf	??_main
  1152  07AA  0845               	movf	??_main,w
  1153  07AB  00B7               	movwf	CalcHumid@b2
  1154  07AC  085F               	movf	_tb1,w
  1155  07AD  3183  23C5  3186   	fcall	_CalcHumid
  1156  07B0  0020               	movlb	0	; select bank0
  1157  07B1  0838               	movf	?_CalcHumid+1,w
  1158  07B2  00D1               	movwf	main@ct+1
  1159  07B3  0837               	movf	?_CalcHumid,w
  1160  07B4  00D0               	movwf	main@ct
  1161                           
  1162                           ;main.c: 350: itoa(buf,received.vt,10);
  1163  07B5  0853               	movf	main@received+1,w
  1164  07B6  00A5               	movwf	itoa@val+1
  1165  07B7  0852               	movf	main@received,w
  1166  07B8  00A4               	movwf	itoa@val
  1167  07B9  300A               	movlw	10
  1168  07BA  00A6               	movwf	itoa@base
  1169  07BB  3000               	movlw	0
  1170  07BC  00A7               	movwf	itoa@base+1
  1171  07BD  3048               	movlw	(low (main@buf| 0))& (0+255)
  1172  07BE  3182  223C  3186   	fcall	_itoa
  1173                           
  1174                           ;main.c: 351: UART_String(buf);
  1175  07C1  3048               	movlw	(low (main@buf| 0))& (0+255)
  1176  07C2  3182  221B  3186   	fcall	_UART_String
  1177                           
  1178                           ;main.c: 352: uart_xmit(10);
  1179  07C5  300A               	movlw	10
  1180  07C6  00F0               	movwf	uart_xmit@mydata_byte
  1181  07C7  3000               	movlw	0
  1182  07C8  00F1               	movwf	uart_xmit@mydata_byte+1
  1183  07C9  3181  2148  3186   	fcall	_uart_xmit
  1184                           
  1185                           ;main.c: 353: uart_xmit(13);
  1186  07CC  300D               	movlw	13
  1187  07CD  00F0               	movwf	uart_xmit@mydata_byte
  1188  07CE  3000               	movlw	0
  1189  07CF  00F1               	movwf	uart_xmit@mydata_byte+1
  1190  07D0  3181  2148  3186   	fcall	_uart_xmit
  1191                           
  1192                           ;main.c: 355: itoa(buf,received.vh,10);
  1193  07D3  0020               	movlb	0	; select bank0
  1194  07D4  0855               	movf	main@received+3,w
  1195  07D5  00A5               	movwf	itoa@val+1
  1196  07D6  0854               	movf	main@received+2,w
  1197  07D7  00A4               	movwf	itoa@val
  1198  07D8  300A               	movlw	10
  1199  07D9  00A6               	movwf	itoa@base
  1200  07DA  3000               	movlw	0
  1201  07DB  00A7               	movwf	itoa@base+1
  1202  07DC  3048               	movlw	(low (main@buf| 0))& (0+255)
  1203  07DD  3182  223C  3186   	fcall	_itoa
  1204                           
  1205                           ;main.c: 357: UART_String(buf);
  1206  07E0  3048               	movlw	(low (main@buf| 0))& (0+255)
  1207  07E1  3182  221B  3186   	fcall	_UART_String
  1208                           
  1209                           ;main.c: 358: uart_xmit(10);
  1210  07E4  300A               	movlw	10
  1211  07E5  00F0               	movwf	uart_xmit@mydata_byte
  1212  07E6  3000               	movlw	0
  1213  07E7  00F1               	movwf	uart_xmit@mydata_byte+1
  1214  07E8  3181  2148  3186   	fcall	_uart_xmit
  1215                           
  1216                           ;main.c: 359: uart_xmit(13);
  1217  07EB  300D               	movlw	13
  1218  07EC  00F0               	movwf	uart_xmit@mydata_byte
  1219  07ED  3000               	movlw	0
  1220  07EE  00F1               	movwf	uart_xmit@mydata_byte+1
  1221  07EF  3181  2148  3186   	fcall	_uart_xmit
  1222  07F2  2F0C               	goto	l171
  1223  07F3                     __end_of_main:	
  1224                           
  1225                           	psect	text1
  1226  01CE                     __ptext1:	
  1227 ;; *************** function _serial_init *****************
  1228 ;; Defined at:
  1229 ;;		line 98 in file "main.c"
  1230 ;; Parameters:    Size  Location     Type
  1231 ;;		None
  1232 ;; Auto vars:     Size  Location     Type
  1233 ;;		None
  1234 ;; Return value:  Size  Location     Type
  1235 ;;		None               void
  1236 ;; Registers used:
  1237 ;;		wreg, status,2
  1238 ;; Tracked objects:
  1239 ;;		On entry : 0/0
  1240 ;;		On exit  : 0/0
  1241 ;;		Unchanged: 0/0
  1242 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1243 ;;      Params:         0       0       0       0
  1244 ;;      Locals:         0       0       0       0
  1245 ;;      Temps:          0       0       0       0
  1246 ;;      Totals:         0       0       0       0
  1247 ;;Total ram usage:        0 bytes
  1248 ;; Hardware stack levels used:    1
  1249 ;; This function calls:
  1250 ;;		Nothing
  1251 ;; This function is called by:
  1252 ;;		_main
  1253 ;; This function uses a non-reentrant model
  1254 ;;
  1255                           
  1256                           
  1257                           ;psect for function _serial_init
  1258  01CE                     _serial_init:	
  1259                           
  1260                           ;main.c: 106: TXSTAbits.BRGH=1;
  1261                           
  1262                           ;incstack = 0
  1263                           ; Regs used in _serial_init: [wreg+status,2]
  1264  01CE  0023               	movlb	3	; select bank3
  1265  01CF  151E               	bsf	30,2	;volatile
  1266                           
  1267                           ;main.c: 107: TXSTAbits.TX9=0;
  1268  01D0  131E               	bcf	30,6	;volatile
  1269                           
  1270                           ;main.c: 108: TXSTAbits.TXEN = 1;
  1271  01D1  169E               	bsf	30,5	;volatile
  1272                           
  1273                           ;main.c: 110: RCSTAbits.SPEN=1;
  1274  01D2  179D               	bsf	29,7	;volatile
  1275                           
  1276                           ;main.c: 111: RCSTAbits.RX9=0;
  1277  01D3  131D               	bcf	29,6	;volatile
  1278                           
  1279                           ;main.c: 112: RCSTAbits.CREN=1;
  1280  01D4  161D               	bsf	29,4	;volatile
  1281                           
  1282                           ;main.c: 114: SPBRGL=25;
  1283  01D5  3019               	movlw	25
  1284  01D6  009B               	movwf	27	;volatile
  1285                           
  1286                           ;main.c: 115: SPBRGH=0;
  1287  01D7  019C               	clrf	28	;volatile
  1288                           
  1289                           ;main.c: 117: PIR1bits.RCIF=0;
  1290  01D8  0020               	movlb	0	; select bank0
  1291  01D9  1291               	bcf	17,5	;volatile
  1292                           
  1293                           ;main.c: 118: PIE1bits.RCIE=1;
  1294  01DA  0021               	movlb	1	; select bank1
  1295  01DB  1691               	bsf	17,5	;volatile
  1296                           
  1297                           ;main.c: 119: INTCONbits.PEIE = 1;
  1298  01DC  170B               	bsf	11,6	;volatile
  1299                           
  1300                           ;main.c: 120: INTCONbits.GIE = 1;
  1301  01DD  178B               	bsf	11,7	;volatile
  1302  01DE  0008               	return
  1303  01DF                     __end_of_serial_init:	
  1304                           
  1305                           	psect	text2
  1306  023C                     __ptext2:	
  1307 ;; *************** function _itoa *****************
  1308 ;; Defined at:
  1309 ;;		line 4 in file "/opt/mmplabv310/xc8/sources/common/itoa.c"
  1310 ;; Parameters:    Size  Location     Type
  1311 ;;  buf             1    wreg     PTR unsigned char 
  1312 ;;		 -> main@buf(8), 
  1313 ;;  val             2    4[BANK0 ] int 
  1314 ;;  base            2    6[BANK0 ] int 
  1315 ;; Auto vars:     Size  Location     Type
  1316 ;;  buf             1    9[BANK0 ] PTR unsigned char 
  1317 ;;		 -> main@buf(8), 
  1318 ;;  cp              1    8[BANK0 ] PTR unsigned char 
  1319 ;;		 -> main@buf(8), 
  1320 ;; Return value:  Size  Location     Type
  1321 ;;                  1    wreg      PTR unsigned char 
  1322 ;; Registers used:
  1323 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1324 ;; Tracked objects:
  1325 ;;		On entry : 0/0
  1326 ;;		On exit  : 0/0
  1327 ;;		Unchanged: 0/0
  1328 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1329 ;;      Params:         0       4       0       0
  1330 ;;      Locals:         0       2       0       0
  1331 ;;      Temps:          1       0       0       0
  1332 ;;      Totals:         1       6       0       0
  1333 ;;Total ram usage:        7 bytes
  1334 ;; Hardware stack levels used:    1
  1335 ;; Hardware stack levels required when called:    2
  1336 ;; This function calls:
  1337 ;;		_utoa
  1338 ;; This function is called by:
  1339 ;;		_main
  1340 ;; This function uses a non-reentrant model
  1341 ;;
  1342                           
  1343                           
  1344                           ;psect for function _itoa
  1345  023C                     _itoa:	
  1346                           
  1347                           ;incstack = 0
  1348                           ; Regs used in _itoa: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  1349                           ;itoa@buf stored from wreg
  1350  023C  0020               	movlb	0	; select bank0
  1351  023D  00A9               	movwf	itoa@buf
  1352  023E  0829               	movf	itoa@buf,w
  1353  023F  00FD               	movwf	??_itoa
  1354  0240  087D               	movf	??_itoa,w
  1355  0241  00A8               	movwf	itoa@cp
  1356  0242  1FA5               	btfss	itoa@val+1,7
  1357  0243  2A54               	goto	l1693
  1358  0244  302D               	movlw	45
  1359  0245  00FD               	movwf	??_itoa
  1360  0246  0829               	movf	itoa@buf,w
  1361  0247  0086               	movwf	6
  1362  0248  0187               	clrf	7
  1363  0249  087D               	movf	??_itoa,w
  1364  024A  0081               	movwf	1
  1365  024B  3001               	movlw	1
  1366  024C  00FD               	movwf	??_itoa
  1367  024D  087D               	movf	??_itoa,w
  1368  024E  07A9               	addwf	itoa@buf,f
  1369  024F  09A4               	comf	itoa@val,f
  1370  0250  09A5               	comf	itoa@val+1,f
  1371  0251  0AA4               	incf	itoa@val,f
  1372  0252  1903               	skipnz
  1373  0253  0AA5               	incf	itoa@val+1,f
  1374  0254                     l1693:	
  1375  0254  0825               	movf	itoa@val+1,w
  1376  0255  00F9               	movwf	utoa@val+1
  1377  0256  0824               	movf	itoa@val,w
  1378  0257  00F8               	movwf	utoa@val
  1379  0258  0827               	movf	itoa@base+1,w
  1380  0259  00FB               	movwf	utoa@base+1
  1381  025A  0826               	movf	itoa@base,w
  1382  025B  00FA               	movwf	utoa@base
  1383  025C  0829               	movf	itoa@buf,w
  1384  025D  3182  22FF         	fcall	_utoa
  1385  025F  0008               	return
  1386  0260                     __end_of_itoa:	
  1387                           ;	Return value of _itoa is never used
  1388                           
  1389                           
  1390                           	psect	text3
  1391  02FF                     __ptext3:	
  1392 ;; *************** function _utoa *****************
  1393 ;; Defined at:
  1394 ;;		line 17 in file "/opt/mmplabv310/xc8/sources/common/itoa.c"
  1395 ;; Parameters:    Size  Location     Type
  1396 ;;  buf             1    wreg     PTR unsigned char 
  1397 ;;		 -> main@buf(8), 
  1398 ;;  val             2    8[COMMON] unsigned int 
  1399 ;;  base            2   10[COMMON] int 
  1400 ;; Auto vars:     Size  Location     Type
  1401 ;;  buf             1    3[BANK0 ] PTR unsigned char 
  1402 ;;		 -> main@buf(8), 
  1403 ;;  v               2    0[BANK0 ] unsigned int 
  1404 ;;  c               1    2[BANK0 ] unsigned char 
  1405 ;; Return value:  Size  Location     Type
  1406 ;;                  1    wreg      PTR unsigned char 
  1407 ;; Registers used:
  1408 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1409 ;; Tracked objects:
  1410 ;;		On entry : 0/0
  1411 ;;		On exit  : 0/0
  1412 ;;		Unchanged: 0/0
  1413 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1414 ;;      Params:         4       0       0       0
  1415 ;;      Locals:         0       4       0       0
  1416 ;;      Temps:          1       0       0       0
  1417 ;;      Totals:         5       4       0       0
  1418 ;;Total ram usage:        9 bytes
  1419 ;; Hardware stack levels used:    1
  1420 ;; Hardware stack levels required when called:    1
  1421 ;; This function calls:
  1422 ;;		___lwdiv
  1423 ;;		___lwmod
  1424 ;; This function is called by:
  1425 ;;		_itoa
  1426 ;; This function uses a non-reentrant model
  1427 ;;
  1428                           
  1429                           
  1430                           ;psect for function _utoa
  1431  02FF                     _utoa:	
  1432                           
  1433                           ;incstack = 0
  1434                           ; Regs used in _utoa: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  1435                           ;utoa@buf stored from wreg
  1436  02FF  0020               	movlb	0	; select bank0
  1437  0300  00A3               	movwf	utoa@buf
  1438  0301  0879               	movf	utoa@val+1,w
  1439  0302  00A1               	movwf	utoa@v+1
  1440  0303  0878               	movf	utoa@val,w
  1441  0304  00A0               	movwf	utoa@v
  1442  0305                     l1539:	
  1443  0305  087B               	movf	utoa@base+1,w
  1444  0306  00F1               	movwf	___lwdiv@divisor+1
  1445  0307  087A               	movf	utoa@base,w
  1446  0308  00F0               	movwf	___lwdiv@divisor
  1447  0309  0821               	movf	utoa@v+1,w
  1448  030A  00F3               	movwf	___lwdiv@dividend+1
  1449  030B  0820               	movf	utoa@v,w
  1450  030C  00F2               	movwf	___lwdiv@dividend
  1451  030D  3182  228C  3182   	fcall	___lwdiv
  1452  0310  0871               	movf	?___lwdiv+1,w
  1453  0311  0020               	movlb	0	; select bank0
  1454  0312  00A1               	movwf	utoa@v+1
  1455  0313  0870               	movf	?___lwdiv,w
  1456  0314  00A0               	movwf	utoa@v
  1457  0315  3001               	movlw	1
  1458  0316  00FC               	movwf	??_utoa
  1459  0317  087C               	movf	??_utoa,w
  1460  0318  07A3               	addwf	utoa@buf,f
  1461  0319  0820               	movf	utoa@v,w
  1462  031A  0421               	iorwf	utoa@v+1,w
  1463  031B  1D03               	btfss	3,2
  1464  031C  2B05               	goto	l1539
  1465  031D  0823               	movf	utoa@buf,w
  1466  031E  0086               	movwf	6
  1467  031F  0187               	clrf	7
  1468  0320  0181               	clrf	1
  1469  0321  3001               	movlw	1
  1470  0322  02A3               	subwf	utoa@buf,f
  1471  0323                     l1549:	
  1472  0323  087B               	movf	utoa@base+1,w
  1473  0324  00F1               	movwf	___lwmod@divisor+1
  1474  0325  087A               	movf	utoa@base,w
  1475  0326  00F0               	movwf	___lwmod@divisor
  1476  0327  0879               	movf	utoa@val+1,w
  1477  0328  00F3               	movwf	___lwmod@dividend+1
  1478  0329  0878               	movf	utoa@val,w
  1479  032A  00F2               	movwf	___lwmod@dividend
  1480  032B  3182  2260  3182   	fcall	___lwmod
  1481  032E  0870               	movf	?___lwmod,w
  1482  032F  00FC               	movwf	??_utoa
  1483  0330  087C               	movf	??_utoa,w
  1484  0331  0020               	movlb	0	; select bank0
  1485  0332  00A2               	movwf	utoa@c
  1486  0333  087B               	movf	utoa@base+1,w
  1487  0334  00F1               	movwf	___lwdiv@divisor+1
  1488  0335  087A               	movf	utoa@base,w
  1489  0336  00F0               	movwf	___lwdiv@divisor
  1490  0337  0879               	movf	utoa@val+1,w
  1491  0338  00F3               	movwf	___lwdiv@dividend+1
  1492  0339  0878               	movf	utoa@val,w
  1493  033A  00F2               	movwf	___lwdiv@dividend
  1494  033B  3182  228C  3182   	fcall	___lwdiv
  1495  033E  0871               	movf	?___lwdiv+1,w
  1496  033F  00F9               	movwf	utoa@val+1
  1497  0340  0870               	movf	?___lwdiv,w
  1498  0341  00F8               	movwf	utoa@val
  1499  0342  300A               	movlw	10
  1500  0343  0020               	movlb	0	; select bank0
  1501  0344  0222               	subwf	utoa@c,w
  1502  0345  1C03               	skipc
  1503  0346  2B4B               	goto	l534
  1504  0347  3007               	movlw	7
  1505  0348  00FC               	movwf	??_utoa
  1506  0349  087C               	movf	??_utoa,w
  1507  034A  07A2               	addwf	utoa@c,f
  1508  034B                     l534:	
  1509  034B  3030               	movlw	48
  1510  034C  00FC               	movwf	??_utoa
  1511  034D  087C               	movf	??_utoa,w
  1512  034E  07A2               	addwf	utoa@c,f
  1513  034F  0822               	movf	utoa@c,w
  1514  0350  00FC               	movwf	??_utoa
  1515  0351  0823               	movf	utoa@buf,w
  1516  0352  0086               	movwf	6
  1517  0353  0187               	clrf	7
  1518  0354  087C               	movf	??_utoa,w
  1519  0355  0081               	movwf	1
  1520  0356  3001               	movlw	1
  1521  0357  02A3               	subwf	utoa@buf,f
  1522  0358  0878               	movf	utoa@val,w
  1523  0359  0479               	iorwf	utoa@val+1,w
  1524  035A  1D03               	btfss	3,2
  1525  035B  2B23               	goto	l1549
  1526                           
  1527                           ;	Return value of _utoa is never used
  1528  035C  3001               	movlw	1
  1529  035D  00FC               	movwf	??_utoa
  1530  035E  087C               	movf	??_utoa,w
  1531  035F  07A3               	addwf	utoa@buf,f
  1532  0360  0008               	return
  1533  0361                     __end_of_utoa:	
  1534                           
  1535                           	psect	text4
  1536  0260                     __ptext4:	
  1537 ;; *************** function ___lwmod *****************
  1538 ;; Defined at:
  1539 ;;		line 6 in file "/opt/mmplabv310/xc8/sources/common/lwmod.c"
  1540 ;; Parameters:    Size  Location     Type
  1541 ;;  divisor         2    0[COMMON] unsigned int 
  1542 ;;  dividend        2    2[COMMON] unsigned int 
  1543 ;; Auto vars:     Size  Location     Type
  1544 ;;  counter         1    5[COMMON] unsigned char 
  1545 ;; Return value:  Size  Location     Type
  1546 ;;                  2    0[COMMON] unsigned int 
  1547 ;; Registers used:
  1548 ;;		wreg, status,2, status,0
  1549 ;; Tracked objects:
  1550 ;;		On entry : 0/0
  1551 ;;		On exit  : 0/0
  1552 ;;		Unchanged: 0/0
  1553 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1554 ;;      Params:         4       0       0       0
  1555 ;;      Locals:         1       0       0       0
  1556 ;;      Temps:          1       0       0       0
  1557 ;;      Totals:         6       0       0       0
  1558 ;;Total ram usage:        6 bytes
  1559 ;; Hardware stack levels used:    1
  1560 ;; This function calls:
  1561 ;;		Nothing
  1562 ;; This function is called by:
  1563 ;;		_utoa
  1564 ;; This function uses a non-reentrant model
  1565 ;;
  1566                           
  1567                           
  1568                           ;psect for function ___lwmod
  1569  0260                     ___lwmod:	
  1570                           
  1571                           ;incstack = 0
  1572                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  1573  0260  0870               	movf	___lwmod@divisor,w
  1574  0261  0471               	iorwf	___lwmod@divisor+1,w
  1575  0262  1903               	btfsc	3,2
  1576  0263  2A87               	goto	l1305
  1577  0264  01F5               	clrf	___lwmod@counter
  1578  0265  0AF5               	incf	___lwmod@counter,f
  1579  0266                     l1295:	
  1580  0266  1BF1               	btfsc	___lwmod@divisor+1,7
  1581  0267  2A72               	goto	l1297
  1582  0268  3001               	movlw	1
  1583  0269                     u1225:	
  1584  0269  35F0               	lslf	___lwmod@divisor,f
  1585  026A  0DF1               	rlf	___lwmod@divisor+1,f
  1586  026B  0B89               	decfsz	9,f
  1587  026C  2A69               	goto	u1225
  1588  026D  3001               	movlw	1
  1589  026E  00F4               	movwf	??___lwmod
  1590  026F  0874               	movf	??___lwmod,w
  1591  0270  07F5               	addwf	___lwmod@counter,f
  1592  0271  2A66               	goto	l1295
  1593  0272                     l1297:	
  1594  0272  0871               	movf	___lwmod@divisor+1,w
  1595  0273  0273               	subwf	___lwmod@dividend+1,w
  1596  0274  1D03               	skipz
  1597  0275  2A78               	goto	u1245
  1598  0276  0870               	movf	___lwmod@divisor,w
  1599  0277  0272               	subwf	___lwmod@dividend,w
  1600  0278                     u1245:	
  1601  0278  1C03               	skipc
  1602  0279  2A7E               	goto	l1301
  1603  027A  0870               	movf	___lwmod@divisor,w
  1604  027B  02F2               	subwf	___lwmod@dividend,f
  1605  027C  0871               	movf	___lwmod@divisor+1,w
  1606  027D  3BF3               	subwfb	___lwmod@dividend+1,f
  1607  027E                     l1301:	
  1608  027E  3001               	movlw	1
  1609  027F                     u1255:	
  1610  027F  36F1               	lsrf	___lwmod@divisor+1,f
  1611  0280  0CF0               	rrf	___lwmod@divisor,f
  1612  0281  0B89               	decfsz	9,f
  1613  0282  2A7F               	goto	u1255
  1614  0283  3001               	movlw	1
  1615  0284  02F5               	subwf	___lwmod@counter,f
  1616  0285  1D03               	btfss	3,2
  1617  0286  2A72               	goto	l1297
  1618  0287                     l1305:	
  1619  0287  0873               	movf	___lwmod@dividend+1,w
  1620  0288  00F1               	movwf	?___lwmod+1
  1621  0289  0872               	movf	___lwmod@dividend,w
  1622  028A  00F0               	movwf	?___lwmod
  1623  028B  0008               	return
  1624  028C                     __end_of___lwmod:	
  1625                           
  1626                           	psect	text5
  1627  028C                     __ptext5:	
  1628 ;; *************** function ___lwdiv *****************
  1629 ;; Defined at:
  1630 ;;		line 6 in file "/opt/mmplabv310/xc8/sources/common/lwdiv.c"
  1631 ;; Parameters:    Size  Location     Type
  1632 ;;  divisor         2    0[COMMON] unsigned int 
  1633 ;;  dividend        2    2[COMMON] unsigned int 
  1634 ;; Auto vars:     Size  Location     Type
  1635 ;;  quotient        2    5[COMMON] unsigned int 
  1636 ;;  counter         1    7[COMMON] unsigned char 
  1637 ;; Return value:  Size  Location     Type
  1638 ;;                  2    0[COMMON] unsigned int 
  1639 ;; Registers used:
  1640 ;;		wreg, status,2, status,0
  1641 ;; Tracked objects:
  1642 ;;		On entry : 0/0
  1643 ;;		On exit  : 0/0
  1644 ;;		Unchanged: 0/0
  1645 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1646 ;;      Params:         4       0       0       0
  1647 ;;      Locals:         3       0       0       0
  1648 ;;      Temps:          1       0       0       0
  1649 ;;      Totals:         8       0       0       0
  1650 ;;Total ram usage:        8 bytes
  1651 ;; Hardware stack levels used:    1
  1652 ;; This function calls:
  1653 ;;		Nothing
  1654 ;; This function is called by:
  1655 ;;		_utoa
  1656 ;; This function uses a non-reentrant model
  1657 ;;
  1658                           
  1659                           
  1660                           ;psect for function ___lwdiv
  1661  028C                     ___lwdiv:	
  1662                           
  1663                           ;incstack = 0
  1664                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  1665  028C  01F5               	clrf	___lwdiv@quotient
  1666  028D  01F6               	clrf	___lwdiv@quotient+1
  1667  028E  0870               	movf	___lwdiv@divisor,w
  1668  028F  0471               	iorwf	___lwdiv@divisor+1,w
  1669  0290  1903               	btfsc	3,2
  1670  0291  2ABB               	goto	l1283
  1671  0292  01F7               	clrf	___lwdiv@counter
  1672  0293  0AF7               	incf	___lwdiv@counter,f
  1673  0294                     l1271:	
  1674  0294  1BF1               	btfsc	___lwdiv@divisor+1,7
  1675  0295  2AA0               	goto	l1273
  1676  0296  3001               	movlw	1
  1677  0297                     u1155:	
  1678  0297  35F0               	lslf	___lwdiv@divisor,f
  1679  0298  0DF1               	rlf	___lwdiv@divisor+1,f
  1680  0299  0B89               	decfsz	9,f
  1681  029A  2A97               	goto	u1155
  1682  029B  3001               	movlw	1
  1683  029C  00F4               	movwf	??___lwdiv
  1684  029D  0874               	movf	??___lwdiv,w
  1685  029E  07F7               	addwf	___lwdiv@counter,f
  1686  029F  2A94               	goto	l1271
  1687  02A0                     l1273:	
  1688  02A0  3001               	movlw	1
  1689  02A1                     u1175:	
  1690  02A1  35F5               	lslf	___lwdiv@quotient,f
  1691  02A2  0DF6               	rlf	___lwdiv@quotient+1,f
  1692  02A3  0B89               	decfsz	9,f
  1693  02A4  2AA1               	goto	u1175
  1694  02A5  0871               	movf	___lwdiv@divisor+1,w
  1695  02A6  0273               	subwf	___lwdiv@dividend+1,w
  1696  02A7  1D03               	skipz
  1697  02A8  2AAB               	goto	u1185
  1698  02A9  0870               	movf	___lwdiv@divisor,w
  1699  02AA  0272               	subwf	___lwdiv@dividend,w
  1700  02AB                     u1185:	
  1701  02AB  1C03               	skipc
  1702  02AC  2AB2               	goto	l1279
  1703  02AD  0870               	movf	___lwdiv@divisor,w
  1704  02AE  02F2               	subwf	___lwdiv@dividend,f
  1705  02AF  0871               	movf	___lwdiv@divisor+1,w
  1706  02B0  3BF3               	subwfb	___lwdiv@dividend+1,f
  1707  02B1  1475               	bsf	___lwdiv@quotient,0
  1708  02B2                     l1279:	
  1709  02B2  3001               	movlw	1
  1710  02B3                     u1195:	
  1711  02B3  36F1               	lsrf	___lwdiv@divisor+1,f
  1712  02B4  0CF0               	rrf	___lwdiv@divisor,f
  1713  02B5  0B89               	decfsz	9,f
  1714  02B6  2AB3               	goto	u1195
  1715  02B7  3001               	movlw	1
  1716  02B8  02F7               	subwf	___lwdiv@counter,f
  1717  02B9  1D03               	btfss	3,2
  1718  02BA  2AA0               	goto	l1273
  1719  02BB                     l1283:	
  1720  02BB  0876               	movf	___lwdiv@quotient+1,w
  1721  02BC  00F1               	movwf	?___lwdiv+1
  1722  02BD  0875               	movf	___lwdiv@quotient,w
  1723  02BE  00F0               	movwf	?___lwdiv
  1724  02BF  0008               	return
  1725  02C0                     __end_of___lwdiv:	
  1726                           
  1727                           	psect	text6
  1728  01DF                     __ptext6:	
  1729 ;; *************** function _init_io *****************
  1730 ;; Defined at:
  1731 ;;		line 61 in file "main.c"
  1732 ;; Parameters:    Size  Location     Type
  1733 ;;		None
  1734 ;; Auto vars:     Size  Location     Type
  1735 ;;		None
  1736 ;; Return value:  Size  Location     Type
  1737 ;;		None               void
  1738 ;; Registers used:
  1739 ;;		status,2
  1740 ;; Tracked objects:
  1741 ;;		On entry : 0/0
  1742 ;;		On exit  : 0/0
  1743 ;;		Unchanged: 0/0
  1744 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1745 ;;      Params:         0       0       0       0
  1746 ;;      Locals:         0       0       0       0
  1747 ;;      Temps:          0       0       0       0
  1748 ;;      Totals:         0       0       0       0
  1749 ;;Total ram usage:        0 bytes
  1750 ;; Hardware stack levels used:    1
  1751 ;; This function calls:
  1752 ;;		Nothing
  1753 ;; This function is called by:
  1754 ;;		_main
  1755 ;; This function uses a non-reentrant model
  1756 ;;
  1757                           
  1758                           
  1759                           ;psect for function _init_io
  1760  01DF                     _init_io:	
  1761                           
  1762                           ;main.c: 63: ANSELA = 0x00;
  1763                           
  1764                           ;incstack = 0
  1765                           ; Regs used in _init_io: [status,2]
  1766  01DF  0023               	movlb	3	; select bank3
  1767  01E0  018C               	clrf	12	;volatile
  1768                           
  1769                           ;main.c: 64: ANSELB = 0x00;
  1770  01E1  018D               	clrf	13	;volatile
  1771                           
  1772                           ;main.c: 65: ANSELC = 0x00;
  1773  01E2  018E               	clrf	14	;volatile
  1774                           
  1775                           ;main.c: 67: TRISAbits.TRISA0 = 1;
  1776  01E3  0021               	movlb	1	; select bank1
  1777  01E4  140C               	bsf	12,0	;volatile
  1778                           
  1779                           ;main.c: 68: TRISAbits.TRISA1 = 1;
  1780  01E5  148C               	bsf	12,1	;volatile
  1781                           
  1782                           ;main.c: 69: TRISAbits.TRISA2 = 1;
  1783  01E6  150C               	bsf	12,2	;volatile
  1784                           
  1785                           ;main.c: 70: TRISAbits.TRISA3 = 1;
  1786  01E7  158C               	bsf	12,3	;volatile
  1787                           
  1788                           ;main.c: 71: TRISAbits.TRISA4 = 1;
  1789  01E8  160C               	bsf	12,4	;volatile
  1790                           
  1791                           ;main.c: 72: TRISAbits.TRISA5 = 1;
  1792  01E9  168C               	bsf	12,5	;volatile
  1793                           
  1794                           ;main.c: 74: TRISBbits.TRISB4 = 1;
  1795  01EA  160D               	bsf	13,4	;volatile
  1796                           
  1797                           ;main.c: 75: TRISBbits.TRISB5 = 1;
  1798  01EB  168D               	bsf	13,5	;volatile
  1799                           
  1800                           ;main.c: 76: TRISBbits.TRISB6 = 1;
  1801  01EC  170D               	bsf	13,6	;volatile
  1802                           
  1803                           ;main.c: 77: TRISBbits.TRISB7 = 0;
  1804  01ED  138D               	bcf	13,7	;volatile
  1805                           
  1806                           ;main.c: 79: TRISCbits.TRISC0 = 0;
  1807  01EE  100E               	bcf	14,0	;volatile
  1808                           
  1809                           ;main.c: 80: TRISCbits.TRISC1 = 0;
  1810  01EF  108E               	bcf	14,1	;volatile
  1811                           
  1812                           ;main.c: 81: TRISCbits.TRISC2 = 0;
  1813  01F0  110E               	bcf	14,2	;volatile
  1814                           
  1815                           ;main.c: 82: TRISCbits.TRISC3 = 0;
  1816  01F1  118E               	bcf	14,3	;volatile
  1817                           
  1818                           ;main.c: 83: TRISCbits.TRISC4 = 0;
  1819  01F2  120E               	bcf	14,4	;volatile
  1820                           
  1821                           ;main.c: 84: TRISCbits.TRISC5 = 0;
  1822  01F3  128E               	bcf	14,5	;volatile
  1823                           
  1824                           ;main.c: 85: TRISCbits.TRISC6 = 0;
  1825  01F4  130E               	bcf	14,6	;volatile
  1826                           
  1827                           ;main.c: 86: TRISCbits.TRISC7 = 0;
  1828  01F5  138E               	bcf	14,7	;volatile
  1829                           
  1830                           ;main.c: 88: LATCbits.LATC0 = 1;
  1831  01F6  0022               	movlb	2	; select bank2
  1832  01F7  140E               	bsf	14,0	;volatile
  1833                           
  1834                           ;main.c: 89: LATCbits.LATC1 = 0;
  1835  01F8  108E               	bcf	14,1	;volatile
  1836                           
  1837                           ;main.c: 90: LATCbits.LATC2 = 0;
  1838  01F9  110E               	bcf	14,2	;volatile
  1839  01FA  0008               	return
  1840  01FB                     __end_of_init_io:	
  1841                           
  1842                           	psect	text7
  1843  021B                     __ptext7:	
  1844 ;; *************** function _UART_String *****************
  1845 ;; Defined at:
  1846 ;;		line 300 in file "main.c"
  1847 ;; Parameters:    Size  Location     Type
  1848 ;;  letters         1    wreg     PTR unsigned char 
  1849 ;;		 -> main@buf(8), 
  1850 ;; Auto vars:     Size  Location     Type
  1851 ;;  letters         1    7[COMMON] PTR unsigned char 
  1852 ;;		 -> main@buf(8), 
  1853 ;;  i               2    5[COMMON] int 
  1854 ;; Return value:  Size  Location     Type
  1855 ;;		None               void
  1856 ;; Registers used:
  1857 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1858 ;; Tracked objects:
  1859 ;;		On entry : 0/0
  1860 ;;		On exit  : 0/0
  1861 ;;		Unchanged: 0/0
  1862 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1863 ;;      Params:         0       0       0       0
  1864 ;;      Locals:         3       0       0       0
  1865 ;;      Temps:          3       0       0       0
  1866 ;;      Totals:         6       0       0       0
  1867 ;;Total ram usage:        6 bytes
  1868 ;; Hardware stack levels used:    1
  1869 ;; Hardware stack levels required when called:    1
  1870 ;; This function calls:
  1871 ;;		_uart_xmit
  1872 ;; This function is called by:
  1873 ;;		_main
  1874 ;; This function uses a non-reentrant model
  1875 ;;
  1876                           
  1877                           
  1878                           ;psect for function _UART_String
  1879  021B                     _UART_String:	
  1880                           
  1881                           ;incstack = 0
  1882                           ; Regs used in _UART_String: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  1883                           ;UART_String@letters stored from wreg
  1884  021B  00F7               	movwf	UART_String@letters
  1885                           
  1886                           ;main.c: 301: int i = 0;
  1887  021C  01F5               	clrf	UART_String@i
  1888  021D  01F6               	clrf	UART_String@i+1
  1889  021E                     l1681:	
  1890                           ;main.c: 302: while(letters[i] != 0) {
  1891                           
  1892  021E  0875               	movf	UART_String@i,w
  1893  021F  0777               	addwf	UART_String@letters,w
  1894  0220  00F2               	movwf	??_UART_String
  1895  0221  0872               	movf	??_UART_String,w
  1896  0222  0086               	movwf	6
  1897  0223  0187               	clrf	7
  1898  0224  0801               	movf	1,w
  1899  0225  1903               	btfsc	3,2
  1900  0226  0008               	return
  1901                           
  1902                           ;main.c: 303: uart_xmit(letters[i++]);
  1903  0227  0875               	movf	UART_String@i,w
  1904  0228  0777               	addwf	UART_String@letters,w
  1905  0229  00F2               	movwf	??_UART_String
  1906  022A  0872               	movf	??_UART_String,w
  1907  022B  0086               	movwf	6
  1908  022C  0187               	clrf	7
  1909  022D  0801               	movf	1,w
  1910  022E  00F3               	movwf	??_UART_String+1
  1911  022F  01F4               	clrf	??_UART_String+2
  1912  0230  0873               	movf	??_UART_String+1,w
  1913  0231  00F0               	movwf	uart_xmit@mydata_byte
  1914  0232  0874               	movf	??_UART_String+2,w
  1915  0233  00F1               	movwf	uart_xmit@mydata_byte+1
  1916  0234  3181  2148  3182   	fcall	_uart_xmit
  1917  0237  3001               	movlw	1
  1918  0238  07F5               	addwf	UART_String@i,f
  1919  0239  3000               	movlw	0
  1920  023A  3DF6               	addwfc	UART_String@i+1,f
  1921  023B  2A1E               	goto	l1681
  1922  023C                     __end_of_UART_String:	
  1923                           
  1924                           	psect	text8
  1925  0148                     __ptext8:	
  1926 ;; *************** function _uart_xmit *****************
  1927 ;; Defined at:
  1928 ;;		line 93 in file "main.c"
  1929 ;; Parameters:    Size  Location     Type
  1930 ;;  mydata_byte     2    0[COMMON] unsigned int 
  1931 ;; Auto vars:     Size  Location     Type
  1932 ;;		None
  1933 ;; Return value:  Size  Location     Type
  1934 ;;		None               void
  1935 ;; Registers used:
  1936 ;;		wreg
  1937 ;; Tracked objects:
  1938 ;;		On entry : 0/0
  1939 ;;		On exit  : 0/0
  1940 ;;		Unchanged: 0/0
  1941 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1942 ;;      Params:         2       0       0       0
  1943 ;;      Locals:         0       0       0       0
  1944 ;;      Temps:          0       0       0       0
  1945 ;;      Totals:         2       0       0       0
  1946 ;;Total ram usage:        2 bytes
  1947 ;; Hardware stack levels used:    1
  1948 ;; This function calls:
  1949 ;;		Nothing
  1950 ;; This function is called by:
  1951 ;;		_UART_String
  1952 ;;		_main
  1953 ;; This function uses a non-reentrant model
  1954 ;;
  1955                           
  1956                           
  1957                           ;psect for function _uart_xmit
  1958  0148                     _uart_xmit:	
  1959  0148                     l84:	
  1960                           ;main.c: 95: while(!TXSTAbits.TRMT);
  1961                           
  1962                           ;incstack = 0
  1963                           ; Regs used in _uart_xmit: [wreg]
  1964                           
  1965  0148  0023               	movlb	3	; select bank3
  1966  0149  1C9E               	btfss	30,1	;volatile
  1967  014A  2948               	goto	l84
  1968                           
  1969                           ;main.c: 96: TXREG = mydata_byte;
  1970  014B  0870               	movf	uart_xmit@mydata_byte,w
  1971  014C  009A               	movwf	26	;volatile
  1972  014D  0008               	return
  1973  014E                     __end_of_uart_xmit:	
  1974                           
  1975                           	psect	text9
  1976  04B0                     __ptext9:	
  1977 ;; *************** function _GetReading *****************
  1978 ;; Defined at:
  1979 ;;		line 245 in file "main.c"
  1980 ;; Parameters:    Size  Location     Type
  1981 ;;		None
  1982 ;; Auto vars:     Size  Location     Type
  1983 ;;  local           7   11[BANK0 ] struct sht_return
  1984 ;;  hl              1   10[BANK0 ] unsigned char 
  1985 ;;  hh              1    9[BANK0 ] unsigned char 
  1986 ;;  tl              1    8[BANK0 ] unsigned char 
  1987 ;;  th              1    7[BANK0 ] unsigned char 
  1988 ;;  crc2            1    6[BANK0 ] unsigned char 
  1989 ;;  crc1            1    5[BANK0 ] unsigned char 
  1990 ;; Return value:  Size  Location     Type
  1991 ;;                  7    3[COMMON] struct sht_return
  1992 ;; Registers used:
  1993 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1994 ;; Tracked objects:
  1995 ;;		On entry : 0/0
  1996 ;;		On exit  : 0/0
  1997 ;;		Unchanged: 0/0
  1998 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1999 ;;      Params:         7       0       0       0
  2000 ;;      Locals:         0      13       0       0
  2001 ;;      Temps:          0       5       0       0
  2002 ;;      Totals:         7      18       0       0
  2003 ;;Total ram usage:       25 bytes
  2004 ;; Hardware stack levels used:    1
  2005 ;; Hardware stack levels required when called:    2
  2006 ;; This function calls:
  2007 ;;		_I2C_ACK
  2008 ;;		_I2C_Control_Read
  2009 ;;		_I2C_Control_Write
  2010 ;;		_I2C_NAK
  2011 ;;		_I2C_Start_Bit
  2012 ;;		_I2C_Stop_Bit
  2013 ;;		_I2C_restart
  2014 ;;		_RX_I2C_Data
  2015 ;;		_Send_I2C_Data
  2016 ;; This function is called by:
  2017 ;;		_main
  2018 ;; This function uses a non-reentrant model
  2019 ;;
  2020                           
  2021                           
  2022                           ;psect for function _GetReading
  2023  04B0                     _GetReading:	
  2024                           
  2025                           ;main.c: 246: Sht_rtn local;
  2026                           ;main.c: 247: unsigned char th,tl,hh,hl,crc1,crc2;
  2027                           ;main.c: 248: I2C_Start_Bit();
  2028                           
  2029                           ;incstack = 0
  2030                           ; Regs used in _GetReading: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2031  04B0  3181  218F  3184   	fcall	_I2C_Start_Bit
  2032                           
  2033                           ;main.c: 249: I2C_Control_Write();
  2034  04B3  3181  21AE  3184   	fcall	_I2C_Control_Write
  2035                           
  2036                           ;main.c: 251: if (!SSP1CON2bits.ACKSTAT)
  2037  04B6  0024               	movlb	4	; select bank4
  2038  04B7  1B16               	btfsc	22,6	;volatile
  2039  04B8  2CBB               	goto	l1639
  2040                           
  2041                           ;main.c: 252: LATCbits.LATC1 = 0;
  2042  04B9  0022               	movlb	2	; select bank2
  2043  04BA  108E               	bcf	14,1	;volatile
  2044  04BB                     l1639:	
  2045                           
  2046                           ;main.c: 254: Send_I2C_Data(0x2C);
  2047  04BB  302C               	movlw	44
  2048  04BC  00F0               	movwf	Send_I2C_Data@databyte
  2049  04BD  3000               	movlw	0
  2050  04BE  00F1               	movwf	Send_I2C_Data@databyte+1
  2051  04BF  3181  215F  3184   	fcall	_Send_I2C_Data
  2052                           
  2053                           ;main.c: 255: Send_I2C_Data(0x06);
  2054  04C2  3006               	movlw	6
  2055  04C3  00F0               	movwf	Send_I2C_Data@databyte
  2056  04C4  3000               	movlw	0
  2057  04C5  00F1               	movwf	Send_I2C_Data@databyte+1
  2058  04C6  3181  215F  3184   	fcall	_Send_I2C_Data
  2059                           
  2060                           ;main.c: 256: I2C_Stop_Bit();
  2061  04C9  3181  2174  3184   	fcall	_I2C_Stop_Bit
  2062                           
  2063                           ;main.c: 258: _delay((unsigned long)((15)*(4000000/4000.0)));
  2064  04CC  3014               	movlw	20
  2065  04CD  0020               	movlb	0	; select bank0
  2066  04CE  00A1               	movwf	??_GetReading+1
  2067  04CF  3079               	movlw	121
  2068  04D0  00A0               	movwf	??_GetReading
  2069  04D1                     u1967:	
  2070  04D1  0BA0               	decfsz	??_GetReading,f
  2071  04D2  2CD1               	goto	u1967
  2072  04D3  0BA1               	decfsz	??_GetReading+1,f
  2073  04D4  2CD1               	goto	u1967
  2074  04D5  3200               	nop2
  2075                           
  2076                           ;main.c: 266: I2C_restart();
  2077  04D6  3181  214E  3184   	fcall	_I2C_restart
  2078                           
  2079                           ;main.c: 267: I2C_Control_Read();
  2080  04D9  3181  219E  3184   	fcall	_I2C_Control_Read
  2081                           
  2082                           ;main.c: 270: th = RX_I2C_Data();
  2083  04DC  3181  2168  3184   	fcall	_RX_I2C_Data
  2084  04DF  0020               	movlb	0	; select bank0
  2085  04E0  00A0               	movwf	??_GetReading
  2086  04E1  0820               	movf	??_GetReading,w
  2087  04E2  00A7               	movwf	GetReading@th
  2088                           
  2089                           ;main.c: 271: I2C_ACK();
  2090  04E3  3181  2156  3184   	fcall	_I2C_ACK
  2091                           
  2092                           ;main.c: 272: tl = RX_I2C_Data();
  2093  04E6  3181  2168  3184   	fcall	_RX_I2C_Data
  2094  04E9  0020               	movlb	0	; select bank0
  2095  04EA  00A0               	movwf	??_GetReading
  2096  04EB  0820               	movf	??_GetReading,w
  2097  04EC  00A8               	movwf	GetReading@tl
  2098                           
  2099                           ;main.c: 273: I2C_ACK();
  2100  04ED  3181  2156  3184   	fcall	_I2C_ACK
  2101                           
  2102                           ;main.c: 274: crc1 = RX_I2C_Data();
  2103  04F0  3181  2168  3184   	fcall	_RX_I2C_Data
  2104  04F3  0020               	movlb	0	; select bank0
  2105  04F4  00A0               	movwf	??_GetReading
  2106  04F5  0820               	movf	??_GetReading,w
  2107  04F6  00A5               	movwf	GetReading@crc1
  2108                           
  2109                           ;main.c: 275: local.vt = (th<<8) + tl;
  2110  04F7  0828               	movf	GetReading@tl,w
  2111  04F8  00A0               	movwf	??_GetReading
  2112  04F9  01A1               	clrf	??_GetReading+1
  2113  04FA  0827               	movf	GetReading@th,w
  2114  04FB  00A2               	movwf	??_GetReading+2
  2115  04FC  01A3               	clrf	??_GetReading+3
  2116  04FD  0822               	movf	??_GetReading+2,w
  2117  04FE  00A3               	movwf	??_GetReading+3
  2118  04FF  01A2               	clrf	??_GetReading+2
  2119  0500  0820               	movf	??_GetReading,w
  2120  0501  0722               	addwf	??_GetReading+2,w
  2121  0502  00AB               	movwf	GetReading@local
  2122  0503  0821               	movf	??_GetReading+1,w
  2123  0504  3D23               	addwfc	??_GetReading+3,w
  2124  0505  00AC               	movwf	GetReading@local+1
  2125                           
  2126                           ;main.c: 280: I2C_ACK();
  2127  0506  3181  2156  3184   	fcall	_I2C_ACK
  2128                           
  2129                           ;main.c: 281: hh = RX_I2C_Data();
  2130  0509  3181  2168  3184   	fcall	_RX_I2C_Data
  2131  050C  0020               	movlb	0	; select bank0
  2132  050D  00A0               	movwf	??_GetReading
  2133  050E  0820               	movf	??_GetReading,w
  2134  050F  00A9               	movwf	GetReading@hh
  2135                           
  2136                           ;main.c: 282: I2C_ACK();
  2137  0510  3181  2156  3184   	fcall	_I2C_ACK
  2138                           
  2139                           ;main.c: 283: hl = RX_I2C_Data();
  2140  0513  3181  2168  3184   	fcall	_RX_I2C_Data
  2141  0516  0020               	movlb	0	; select bank0
  2142  0517  00A0               	movwf	??_GetReading
  2143  0518  0820               	movf	??_GetReading,w
  2144  0519  00AA               	movwf	GetReading@hl
  2145                           
  2146                           ;main.c: 284: I2C_ACK();
  2147  051A  3181  2156  3184   	fcall	_I2C_ACK
  2148                           
  2149                           ;main.c: 285: crc2 = RX_I2C_Data();
  2150  051D  3181  2168  3184   	fcall	_RX_I2C_Data
  2151  0520  0020               	movlb	0	; select bank0
  2152  0521  00A0               	movwf	??_GetReading
  2153  0522  0820               	movf	??_GetReading,w
  2154  0523  00A6               	movwf	GetReading@crc2
  2155                           
  2156                           ;main.c: 286: local.vh = (hh<<8) + hl;
  2157  0524  082A               	movf	GetReading@hl,w
  2158  0525  00A0               	movwf	??_GetReading
  2159  0526  01A1               	clrf	??_GetReading+1
  2160  0527  0829               	movf	GetReading@hh,w
  2161  0528  00A2               	movwf	??_GetReading+2
  2162  0529  01A3               	clrf	??_GetReading+3
  2163  052A  0822               	movf	??_GetReading+2,w
  2164  052B  00A3               	movwf	??_GetReading+3
  2165  052C  01A2               	clrf	??_GetReading+2
  2166  052D  0820               	movf	??_GetReading,w
  2167  052E  0722               	addwf	??_GetReading+2,w
  2168  052F  00AD               	movwf	GetReading@local+2
  2169  0530  0821               	movf	??_GetReading+1,w
  2170  0531  3D23               	addwfc	??_GetReading+3,w
  2171  0532  00AE               	movwf	GetReading@local+3
  2172                           
  2173                           ;main.c: 288: I2C_NAK();
  2174  0533  3181  2181  3184   	fcall	_I2C_NAK
  2175                           
  2176                           ;main.c: 290: I2C_Stop_Bit();
  2177  0536  3181  2174  3184   	fcall	_I2C_Stop_Bit
  2178                           
  2179                           ;main.c: 292: return local;
  2180  0539  302B               	movlw	low GetReading@local
  2181  053A  0086               	movwf	6
  2182  053B  3000               	movlw	high GetReading@local
  2183  053C  0087               	movwf	7
  2184  053D  3073               	movlw	low ?_GetReading
  2185  053E  0084               	movwf	4
  2186  053F  3000               	movlw	high ?_GetReading
  2187  0540  0085               	movwf	5
  2188  0541  3007               	movlw	7
  2189  0542  0020               	movlb	0	; select bank0
  2190  0543  00A0               	movwf	??_GetReading
  2191  0544                     u1880:	
  2192  0544  0016               	moviw fsr1++
  2193  0545  001A               	movwi fsr0++
  2194  0546  0BA0               	decfsz	??_GetReading,f
  2195  0547  2D44               	goto	u1880
  2196  0548  0008               	return
  2197  0549                     __end_of_GetReading:	
  2198                           
  2199                           	psect	text10
  2200  015F                     __ptext10:	
  2201 ;; *************** function _Send_I2C_Data *****************
  2202 ;; Defined at:
  2203 ;;		line 132 in file "main.c"
  2204 ;; Parameters:    Size  Location     Type
  2205 ;;  databyte        2    0[COMMON] unsigned int 
  2206 ;; Auto vars:     Size  Location     Type
  2207 ;;		None
  2208 ;; Return value:  Size  Location     Type
  2209 ;;		None               void
  2210 ;; Registers used:
  2211 ;;		wreg
  2212 ;; Tracked objects:
  2213 ;;		On entry : 0/0
  2214 ;;		On exit  : 0/0
  2215 ;;		Unchanged: 0/0
  2216 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2217 ;;      Params:         2       0       0       0
  2218 ;;      Locals:         0       0       0       0
  2219 ;;      Temps:          0       0       0       0
  2220 ;;      Totals:         2       0       0       0
  2221 ;;Total ram usage:        2 bytes
  2222 ;; Hardware stack levels used:    1
  2223 ;; This function calls:
  2224 ;;		Nothing
  2225 ;; This function is called by:
  2226 ;;		_GetReading
  2227 ;; This function uses a non-reentrant model
  2228 ;;
  2229                           
  2230                           
  2231                           ;psect for function _Send_I2C_Data
  2232  015F                     _Send_I2C_Data:	
  2233                           
  2234                           ;main.c: 134: PIR1bits.SSP1IF=0;
  2235                           
  2236                           ;incstack = 0
  2237                           ; Regs used in _Send_I2C_Data: [wreg]
  2238  015F  0020               	movlb	0	; select bank0
  2239  0160  1191               	bcf	17,3	;volatile
  2240                           
  2241                           ;main.c: 135: SSPBUF = databyte;
  2242  0161  0870               	movf	Send_I2C_Data@databyte,w
  2243  0162  0024               	movlb	4	; select bank4
  2244  0163  0091               	movwf	17	;volatile
  2245  0164                     l99:	
  2246                           ;main.c: 136: while(!PIR1bits.SSP1IF);
  2247                           
  2248  0164  0020               	movlb	0	; select bank0
  2249  0165  1991               	btfsc	17,3	;volatile
  2250  0166  0008               	return
  2251  0167  2964               	goto	l99
  2252  0168                     __end_of_Send_I2C_Data:	
  2253                           
  2254                           	psect	text11
  2255  0168                     __ptext11:	
  2256 ;; *************** function _RX_I2C_Data *****************
  2257 ;; Defined at:
  2258 ;;		line 139 in file "main.c"
  2259 ;; Parameters:    Size  Location     Type
  2260 ;;		None
  2261 ;; Auto vars:     Size  Location     Type
  2262 ;;  byte            1    1[COMMON] unsigned char 
  2263 ;; Return value:  Size  Location     Type
  2264 ;;                  1    wreg      unsigned char 
  2265 ;; Registers used:
  2266 ;;		wreg
  2267 ;; Tracked objects:
  2268 ;;		On entry : 0/0
  2269 ;;		On exit  : 0/0
  2270 ;;		Unchanged: 0/0
  2271 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2272 ;;      Params:         0       0       0       0
  2273 ;;      Locals:         1       0       0       0
  2274 ;;      Temps:          1       0       0       0
  2275 ;;      Totals:         2       0       0       0
  2276 ;;Total ram usage:        2 bytes
  2277 ;; Hardware stack levels used:    1
  2278 ;; This function calls:
  2279 ;;		Nothing
  2280 ;; This function is called by:
  2281 ;;		_GetReading
  2282 ;; This function uses a non-reentrant model
  2283 ;;
  2284                           
  2285                           
  2286                           ;psect for function _RX_I2C_Data
  2287  0168                     _RX_I2C_Data:	
  2288                           
  2289                           ;main.c: 141: char byte;
  2290                           ;main.c: 142: RCEN = 1;
  2291                           
  2292                           ;incstack = 0
  2293                           ; Regs used in _RX_I2C_Data: [wreg]
  2294  0168  0024               	movlb	4	; select bank4
  2295  0169  1596               	bsf	22,3	;volatile
  2296  016A                     l105:	
  2297                           ;main.c: 143: while( RCEN ) continue;
  2298                           
  2299  016A  1996               	btfsc	22,3	;volatile
  2300  016B  296A               	goto	l105
  2301  016C                     l108:	
  2302                           ;main.c: 144: while( !BF ) continue;
  2303                           
  2304  016C  1C14               	btfss	20,0	;volatile
  2305  016D  296C               	goto	l108
  2306                           
  2307                           ;main.c: 145: byte = SSPBUF;
  2308  016E  0811               	movf	17,w	;volatile
  2309  016F  00F0               	movwf	??_RX_I2C_Data
  2310  0170  0870               	movf	??_RX_I2C_Data,w
  2311  0171  00F1               	movwf	RX_I2C_Data@byte
  2312                           
  2313                           ;main.c: 146: return byte;
  2314  0172  0871               	movf	RX_I2C_Data@byte,w
  2315  0173  0008               	return
  2316  0174                     __end_of_RX_I2C_Data:	
  2317                           
  2318                           	psect	text12
  2319  014E                     __ptext12:	
  2320 ;; *************** function _I2C_restart *****************
  2321 ;; Defined at:
  2322 ;;		line 200 in file "main.c"
  2323 ;; Parameters:    Size  Location     Type
  2324 ;;		None
  2325 ;; Auto vars:     Size  Location     Type
  2326 ;;		None
  2327 ;; Return value:  Size  Location     Type
  2328 ;;		None               void
  2329 ;; Registers used:
  2330 ;;		wreg, status,2, status,0, pclath, cstack
  2331 ;; Tracked objects:
  2332 ;;		On entry : 0/0
  2333 ;;		On exit  : 0/0
  2334 ;;		Unchanged: 0/0
  2335 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2336 ;;      Params:         0       0       0       0
  2337 ;;      Locals:         0       0       0       0
  2338 ;;      Temps:          0       0       0       0
  2339 ;;      Totals:         0       0       0       0
  2340 ;;Total ram usage:        0 bytes
  2341 ;; Hardware stack levels used:    1
  2342 ;; Hardware stack levels required when called:    1
  2343 ;; This function calls:
  2344 ;;		_I2C_check_idle
  2345 ;; This function is called by:
  2346 ;;		_GetReading
  2347 ;; This function uses a non-reentrant model
  2348 ;;
  2349                           
  2350                           
  2351                           ;psect for function _I2C_restart
  2352  014E                     _I2C_restart:	
  2353                           
  2354                           ;main.c: 202: I2C_check_idle();
  2355                           
  2356                           ;incstack = 0
  2357                           ; Regs used in _I2C_restart: [wreg+status,2+status,0+pclath+cstack]
  2358  014E  3181  21BE  3181   	fcall	_I2C_check_idle
  2359                           
  2360                           ;main.c: 203: RSEN = 1;
  2361  0151  0024               	movlb	4	; select bank4
  2362  0152  1496               	bsf	22,1	;volatile
  2363  0153                     l137:	
  2364                           ;main.c: 204: while( RSEN ) continue;
  2365                           
  2366  0153  1C96               	btfss	22,1	;volatile
  2367  0154  0008               	return
  2368  0155  2953               	goto	l137
  2369  0156                     __end_of_I2C_restart:	
  2370                           
  2371                           	psect	text13
  2372  01BE                     __ptext13:	
  2373 ;; *************** function _I2C_check_idle *****************
  2374 ;; Defined at:
  2375 ;;		line 186 in file "main.c"
  2376 ;; Parameters:    Size  Location     Type
  2377 ;;		None
  2378 ;; Auto vars:     Size  Location     Type
  2379 ;;  byte2           1    2[COMMON] unsigned char 
  2380 ;;  byte1           1    1[COMMON] unsigned char 
  2381 ;; Return value:  Size  Location     Type
  2382 ;;		None               void
  2383 ;; Registers used:
  2384 ;;		wreg, status,2, status,0
  2385 ;; Tracked objects:
  2386 ;;		On entry : 0/0
  2387 ;;		On exit  : 0/0
  2388 ;;		Unchanged: 0/0
  2389 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2390 ;;      Params:         0       0       0       0
  2391 ;;      Locals:         2       0       0       0
  2392 ;;      Temps:          1       0       0       0
  2393 ;;      Totals:         3       0       0       0
  2394 ;;Total ram usage:        3 bytes
  2395 ;; Hardware stack levels used:    1
  2396 ;; This function calls:
  2397 ;;		Nothing
  2398 ;; This function is called by:
  2399 ;;		_I2C_restart
  2400 ;; This function uses a non-reentrant model
  2401 ;;
  2402                           
  2403                           
  2404                           ;psect for function _I2C_check_idle
  2405  01BE                     _I2C_check_idle:	
  2406  01BE                     l132:	
  2407                           ;incstack = 0
  2408                           ; Regs used in _I2C_check_idle: [wreg+status,2+status,0]
  2409                           ;main.c: 188: unsigned char byte1;
  2410                           ;main.c: 189: unsigned char byte2;
  2411                           ;main.c: 191: do
  2412                           
  2413                           
  2414                           ;main.c: 192: {
  2415                           ;main.c: 193: byte1 = SSPSTAT & 0x04;
  2416  01BE  0024               	movlb	4	; select bank4
  2417  01BF  0814               	movf	20,w	;volatile
  2418  01C0  3904               	andlw	4
  2419  01C1  00F0               	movwf	??_I2C_check_idle
  2420  01C2  0870               	movf	??_I2C_check_idle,w
  2421  01C3  00F1               	movwf	I2C_check_idle@byte1
  2422                           
  2423                           ;main.c: 194: byte2 = SSPCON2 & 0x1F;
  2424  01C4  0816               	movf	22,w	;volatile
  2425  01C5  391F               	andlw	31
  2426  01C6  00F0               	movwf	??_I2C_check_idle
  2427  01C7  0870               	movf	??_I2C_check_idle,w
  2428  01C8  00F2               	movwf	I2C_check_idle@byte2
  2429                           
  2430                           ;main.c: 195: } while( byte1 | byte2 );
  2431  01C9  0871               	movf	I2C_check_idle@byte1,w
  2432  01CA  0472               	iorwf	I2C_check_idle@byte2,w
  2433  01CB  1903               	btfsc	3,2
  2434  01CC  0008               	return
  2435  01CD  29BE               	goto	l132
  2436  01CE                     __end_of_I2C_check_idle:	
  2437                           
  2438                           	psect	text14
  2439  0174                     __ptext14:	
  2440 ;; *************** function _I2C_Stop_Bit *****************
  2441 ;; Defined at:
  2442 ;;		line 207 in file "main.c"
  2443 ;; Parameters:    Size  Location     Type
  2444 ;;		None
  2445 ;; Auto vars:     Size  Location     Type
  2446 ;;		None
  2447 ;; Return value:  Size  Location     Type
  2448 ;;		None               void
  2449 ;; Registers used:
  2450 ;;		wreg
  2451 ;; Tracked objects:
  2452 ;;		On entry : 0/0
  2453 ;;		On exit  : 0/0
  2454 ;;		Unchanged: 0/0
  2455 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2456 ;;      Params:         0       0       0       0
  2457 ;;      Locals:         0       0       0       0
  2458 ;;      Temps:          0       0       0       0
  2459 ;;      Totals:         0       0       0       0
  2460 ;;Total ram usage:        0 bytes
  2461 ;; Hardware stack levels used:    1
  2462 ;; This function calls:
  2463 ;;		Nothing
  2464 ;; This function is called by:
  2465 ;;		_GetReading
  2466 ;; This function uses a non-reentrant model
  2467 ;;
  2468                           
  2469                           
  2470                           ;psect for function _I2C_Stop_Bit
  2471  0174                     _I2C_Stop_Bit:	
  2472                           
  2473                           ;main.c: 209: PIR1bits.SSP1IF=0;
  2474                           
  2475                           ;incstack = 0
  2476                           ; Regs used in _I2C_Stop_Bit: [wreg]
  2477  0174  0020               	movlb	0	; select bank0
  2478  0175  1191               	bcf	17,3	;volatile
  2479                           
  2480                           ;main.c: 210: SSPCON2bits.PEN=1;
  2481  0176  0024               	movlb	4	; select bank4
  2482  0177  1516               	bsf	22,2	;volatile
  2483  0178                     l1355:	
  2484                           ;main.c: 211: while(!PIR1bits.SSP1IF)
  2485                           
  2486  0178  0020               	movlb	0	; select bank0
  2487  0179  1991               	btfsc	17,3	;volatile
  2488  017A  0008               	return
  2489                           
  2490                           ;main.c: 212: {
  2491                           ;main.c: 213: i = 1;
  2492  017B  3001               	movlw	1
  2493  017C  0020               	movlb	0	; select bank0
  2494  017D  00DB               	movwf	_i
  2495  017E  3000               	movlw	0
  2496  017F  00DC               	movwf	_i+1
  2497  0180  2978               	goto	l1355
  2498  0181                     __end_of_I2C_Stop_Bit:	
  2499                           
  2500                           	psect	text15
  2501  018F                     __ptext15:	
  2502 ;; *************** function _I2C_Start_Bit *****************
  2503 ;; Defined at:
  2504 ;;		line 175 in file "main.c"
  2505 ;; Parameters:    Size  Location     Type
  2506 ;;		None
  2507 ;; Auto vars:     Size  Location     Type
  2508 ;;		None
  2509 ;; Return value:  Size  Location     Type
  2510 ;;		None               void
  2511 ;; Registers used:
  2512 ;;		wreg
  2513 ;; Tracked objects:
  2514 ;;		On entry : 0/0
  2515 ;;		On exit  : 0/0
  2516 ;;		Unchanged: 0/0
  2517 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2518 ;;      Params:         0       0       0       0
  2519 ;;      Locals:         0       0       0       0
  2520 ;;      Temps:          0       0       0       0
  2521 ;;      Totals:         0       0       0       0
  2522 ;;Total ram usage:        0 bytes
  2523 ;; Hardware stack levels used:    1
  2524 ;; This function calls:
  2525 ;;		Nothing
  2526 ;; This function is called by:
  2527 ;;		_GetReading
  2528 ;; This function uses a non-reentrant model
  2529 ;;
  2530                           
  2531                           
  2532                           ;psect for function _I2C_Start_Bit
  2533  018F                     _I2C_Start_Bit:	
  2534                           
  2535                           ;main.c: 177: PIR1bits.SSP1IF=0;
  2536                           
  2537                           ;incstack = 0
  2538                           ; Regs used in _I2C_Start_Bit: [wreg]
  2539  018F  0020               	movlb	0	; select bank0
  2540  0190  1191               	bcf	17,3	;volatile
  2541                           
  2542                           ;main.c: 178: SSPCON2bits.SEN=1;
  2543  0191  0024               	movlb	4	; select bank4
  2544  0192  1416               	bsf	22,0	;volatile
  2545  0193                     l1345:	
  2546                           ;main.c: 179: while(!PIR1bits.SSP1IF)
  2547                           
  2548  0193  0020               	movlb	0	; select bank0
  2549  0194  1991               	btfsc	17,3	;volatile
  2550  0195  299C               	goto	l128
  2551                           
  2552                           ;main.c: 180: {
  2553                           ;main.c: 181: i = 1;
  2554  0196  3001               	movlw	1
  2555  0197  0020               	movlb	0	; select bank0
  2556  0198  00DB               	movwf	_i
  2557  0199  3000               	movlw	0
  2558  019A  00DC               	movwf	_i+1
  2559  019B  2993               	goto	l1345
  2560  019C                     l128:	
  2561                           
  2562                           ;main.c: 182: }
  2563                           ;main.c: 183: PIR1bits.SSP1IF=0;
  2564  019C  1191               	bcf	17,3	;volatile
  2565  019D  0008               	return
  2566  019E                     __end_of_I2C_Start_Bit:	
  2567                           
  2568                           	psect	text16
  2569  0181                     __ptext16:	
  2570 ;; *************** function _I2C_NAK *****************
  2571 ;; Defined at:
  2572 ;;		line 218 in file "main.c"
  2573 ;; Parameters:    Size  Location     Type
  2574 ;;		None
  2575 ;; Auto vars:     Size  Location     Type
  2576 ;;		None
  2577 ;; Return value:  Size  Location     Type
  2578 ;;		None               void
  2579 ;; Registers used:
  2580 ;;		wreg
  2581 ;; Tracked objects:
  2582 ;;		On entry : 0/0
  2583 ;;		On exit  : 0/0
  2584 ;;		Unchanged: 0/0
  2585 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2586 ;;      Params:         0       0       0       0
  2587 ;;      Locals:         0       0       0       0
  2588 ;;      Temps:          0       0       0       0
  2589 ;;      Totals:         0       0       0       0
  2590 ;;Total ram usage:        0 bytes
  2591 ;; Hardware stack levels used:    1
  2592 ;; This function calls:
  2593 ;;		Nothing
  2594 ;; This function is called by:
  2595 ;;		_GetReading
  2596 ;; This function uses a non-reentrant model
  2597 ;;
  2598                           
  2599                           
  2600                           ;psect for function _I2C_NAK
  2601  0181                     _I2C_NAK:	
  2602                           
  2603                           ;main.c: 220: PIR1bits.SSP1IF=0;
  2604                           
  2605                           ;incstack = 0
  2606                           ; Regs used in _I2C_NAK: [wreg]
  2607  0181  0020               	movlb	0	; select bank0
  2608  0182  1191               	bcf	17,3	;volatile
  2609                           
  2610                           ;main.c: 221: SSP1CON2bits.ACKDT=1;
  2611  0183  0024               	movlb	4	; select bank4
  2612  0184  1696               	bsf	22,5	;volatile
  2613                           
  2614                           ;main.c: 222: SSP1CON2bits.ACKEN=1;
  2615  0185  1616               	bsf	22,4	;volatile
  2616  0186                     l1361:	
  2617                           ;main.c: 223: while(!PIR1bits.SSP1IF)
  2618                           
  2619  0186  0020               	movlb	0	; select bank0
  2620  0187  1991               	btfsc	17,3	;volatile
  2621  0188  0008               	return
  2622                           
  2623                           ;main.c: 224: {
  2624                           ;main.c: 225: i = 1;
  2625  0189  3001               	movlw	1
  2626  018A  0020               	movlb	0	; select bank0
  2627  018B  00DB               	movwf	_i
  2628  018C  3000               	movlw	0
  2629  018D  00DC               	movwf	_i+1
  2630  018E  2986               	goto	l1361
  2631  018F                     __end_of_I2C_NAK:	
  2632                           
  2633                           	psect	text17
  2634  01AE                     __ptext17:	
  2635 ;; *************** function _I2C_Control_Write *****************
  2636 ;; Defined at:
  2637 ;;		line 149 in file "main.c"
  2638 ;; Parameters:    Size  Location     Type
  2639 ;;		None
  2640 ;; Auto vars:     Size  Location     Type
  2641 ;;		None
  2642 ;; Return value:  Size  Location     Type
  2643 ;;		None               void
  2644 ;; Registers used:
  2645 ;;		wreg
  2646 ;; Tracked objects:
  2647 ;;		On entry : 0/0
  2648 ;;		On exit  : 0/0
  2649 ;;		Unchanged: 0/0
  2650 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2651 ;;      Params:         0       0       0       0
  2652 ;;      Locals:         0       0       0       0
  2653 ;;      Temps:          0       0       0       0
  2654 ;;      Totals:         0       0       0       0
  2655 ;;Total ram usage:        0 bytes
  2656 ;; Hardware stack levels used:    1
  2657 ;; This function calls:
  2658 ;;		Nothing
  2659 ;; This function is called by:
  2660 ;;		_GetReading
  2661 ;; This function uses a non-reentrant model
  2662 ;;
  2663                           
  2664                           
  2665                           ;psect for function _I2C_Control_Write
  2666  01AE                     _I2C_Control_Write:	
  2667                           
  2668                           ;main.c: 151: PIR1bits.SSP1IF=0;
  2669                           
  2670                           ;incstack = 0
  2671                           ; Regs used in _I2C_Control_Write: [wreg]
  2672  01AE  0020               	movlb	0	; select bank0
  2673  01AF  1191               	bcf	17,3	;volatile
  2674                           
  2675                           ;main.c: 152: SSP1BUF = 0x44 << 1;
  2676  01B0  3088               	movlw	136
  2677  01B1  0024               	movlb	4	; select bank4
  2678  01B2  0091               	movwf	17	;volatile
  2679  01B3                     l1331:	
  2680                           ;main.c: 153: while(!PIR1bits.SSP1IF)
  2681                           
  2682  01B3  0020               	movlb	0	; select bank0
  2683  01B4  1991               	btfsc	17,3	;volatile
  2684  01B5  29BC               	goto	l116
  2685                           
  2686                           ;main.c: 154: {
  2687                           ;main.c: 155: i = 1;
  2688  01B6  3001               	movlw	1
  2689  01B7  0020               	movlb	0	; select bank0
  2690  01B8  00DB               	movwf	_i
  2691  01B9  3000               	movlw	0
  2692  01BA  00DC               	movwf	_i+1
  2693  01BB  29B3               	goto	l1331
  2694  01BC                     l116:	
  2695                           
  2696                           ;main.c: 157: }
  2697                           ;main.c: 158: PIR1bits.SSP1IF=0;
  2698  01BC  1191               	bcf	17,3	;volatile
  2699  01BD  0008               	return
  2700  01BE                     __end_of_I2C_Control_Write:	
  2701                           
  2702                           	psect	text18
  2703  019E                     __ptext18:	
  2704 ;; *************** function _I2C_Control_Read *****************
  2705 ;; Defined at:
  2706 ;;		line 162 in file "main.c"
  2707 ;; Parameters:    Size  Location     Type
  2708 ;;		None
  2709 ;; Auto vars:     Size  Location     Type
  2710 ;;		None
  2711 ;; Return value:  Size  Location     Type
  2712 ;;		None               void
  2713 ;; Registers used:
  2714 ;;		wreg
  2715 ;; Tracked objects:
  2716 ;;		On entry : 0/0
  2717 ;;		On exit  : 0/0
  2718 ;;		Unchanged: 0/0
  2719 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2720 ;;      Params:         0       0       0       0
  2721 ;;      Locals:         0       0       0       0
  2722 ;;      Temps:          0       0       0       0
  2723 ;;      Totals:         0       0       0       0
  2724 ;;Total ram usage:        0 bytes
  2725 ;; Hardware stack levels used:    1
  2726 ;; This function calls:
  2727 ;;		Nothing
  2728 ;; This function is called by:
  2729 ;;		_GetReading
  2730 ;; This function uses a non-reentrant model
  2731 ;;
  2732                           
  2733                           
  2734                           ;psect for function _I2C_Control_Read
  2735  019E                     _I2C_Control_Read:	
  2736                           
  2737                           ;main.c: 164: PIR1bits.SSP1IF=0;
  2738                           
  2739                           ;incstack = 0
  2740                           ; Regs used in _I2C_Control_Read: [wreg]
  2741  019E  0020               	movlb	0	; select bank0
  2742  019F  1191               	bcf	17,3	;volatile
  2743                           
  2744                           ;main.c: 165: SSP1BUF = (0x44 << 1) + 1;
  2745  01A0  3089               	movlw	137
  2746  01A1  0024               	movlb	4	; select bank4
  2747  01A2  0091               	movwf	17	;volatile
  2748  01A3                     l1339:	
  2749                           ;main.c: 166: while(!PIR1bits.SSP1IF){
  2750                           
  2751  01A3  0020               	movlb	0	; select bank0
  2752  01A4  1991               	btfsc	17,3	;volatile
  2753  01A5  29AC               	goto	l122
  2754                           
  2755                           ;main.c: 167: i = 1;
  2756  01A6  3001               	movlw	1
  2757  01A7  0020               	movlb	0	; select bank0
  2758  01A8  00DB               	movwf	_i
  2759  01A9  3000               	movlw	0
  2760  01AA  00DC               	movwf	_i+1
  2761  01AB  29A3               	goto	l1339
  2762  01AC                     l122:	
  2763                           
  2764                           ;main.c: 168: }
  2765                           ;main.c: 172: PIR1bits.SSP1IF=0;
  2766  01AC  1191               	bcf	17,3	;volatile
  2767  01AD  0008               	return
  2768  01AE                     __end_of_I2C_Control_Read:	
  2769                           
  2770                           	psect	text19
  2771  0156                     __ptext19:	
  2772 ;; *************** function _I2C_ACK *****************
  2773 ;; Defined at:
  2774 ;;		line 124 in file "main.c"
  2775 ;; Parameters:    Size  Location     Type
  2776 ;;		None
  2777 ;; Auto vars:     Size  Location     Type
  2778 ;;		None
  2779 ;; Return value:  Size  Location     Type
  2780 ;;		None               void
  2781 ;; Registers used:
  2782 ;;		None
  2783 ;; Tracked objects:
  2784 ;;		On entry : 0/0
  2785 ;;		On exit  : 0/0
  2786 ;;		Unchanged: 0/0
  2787 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2788 ;;      Params:         0       0       0       0
  2789 ;;      Locals:         0       0       0       0
  2790 ;;      Temps:          0       0       0       0
  2791 ;;      Totals:         0       0       0       0
  2792 ;;Total ram usage:        0 bytes
  2793 ;; Hardware stack levels used:    1
  2794 ;; This function calls:
  2795 ;;		Nothing
  2796 ;; This function is called by:
  2797 ;;		_GetReading
  2798 ;; This function uses a non-reentrant model
  2799 ;;
  2800                           
  2801                           
  2802                           ;psect for function _I2C_ACK
  2803  0156                     _I2C_ACK:	
  2804                           
  2805                           ;main.c: 126: PIR1bits.SSP1IF=0;
  2806                           
  2807                           ;incstack = 0
  2808                           ; Regs used in _I2C_ACK: []
  2809  0156  0020               	movlb	0	; select bank0
  2810  0157  1191               	bcf	17,3	;volatile
  2811                           
  2812                           ;main.c: 127: SSP1CON2bits.ACKDT=0;
  2813  0158  0024               	movlb	4	; select bank4
  2814  0159  1296               	bcf	22,5	;volatile
  2815                           
  2816                           ;main.c: 128: SSP1CON2bits.ACKEN=1;
  2817  015A  1616               	bsf	22,4	;volatile
  2818  015B                     l93:	
  2819                           ;main.c: 129: while(!PIR1bits.SSP1IF);
  2820                           
  2821  015B  0020               	movlb	0	; select bank0
  2822  015C  1991               	btfsc	17,3	;volatile
  2823  015D  0008               	return
  2824  015E  295B               	goto	l93
  2825  015F                     __end_of_I2C_ACK:	
  2826                           
  2827                           	psect	text20
  2828  02C0                     __ptext20:	
  2829 ;; *************** function _CalcTemp *****************
  2830 ;; Defined at:
  2831 ;;		line 230 in file "main.c"
  2832 ;; Parameters:    Size  Location     Type
  2833 ;;  b1              1    wreg     unsigned char 
  2834 ;;  b2              1   10[BANK0 ] unsigned char 
  2835 ;; Auto vars:     Size  Location     Type
  2836 ;;  b1              1   23[BANK0 ] unsigned char 
  2837 ;;  ans             3   20[BANK0 ] float 
  2838 ;;  rcv_val         3   17[BANK0 ] float 
  2839 ;; Return value:  Size  Location     Type
  2840 ;;                  2   10[BANK0 ] int 
  2841 ;; Registers used:
  2842 ;;		wreg, status,2, status,0, pclath, cstack
  2843 ;; Tracked objects:
  2844 ;;		On entry : 0/0
  2845 ;;		On exit  : 0/0
  2846 ;;		Unchanged: 0/0
  2847 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2848 ;;      Params:         0       2       0       0
  2849 ;;      Locals:         0       7       0       0
  2850 ;;      Temps:          0       5       0       0
  2851 ;;      Totals:         0      14       0       0
  2852 ;;Total ram usage:       14 bytes
  2853 ;; Hardware stack levels used:    1
  2854 ;; Hardware stack levels required when called:    2
  2855 ;; This function calls:
  2856 ;;		___awtoft
  2857 ;;		___ftmul
  2858 ;;		___fttol
  2859 ;; This function is called by:
  2860 ;;		_main
  2861 ;; This function uses a non-reentrant model
  2862 ;;
  2863                           
  2864                           
  2865                           ;psect for function _CalcTemp
  2866  02C0                     _CalcTemp:	
  2867                           
  2868                           ;incstack = 0
  2869                           ; Regs used in _CalcTemp: [wreg+status,2+status,0+pclath+cstack]
  2870                           ;CalcTemp@b1 stored from wreg
  2871  02C0  0020               	movlb	0	; select bank0
  2872  02C1  00B7               	movwf	CalcTemp@b1
  2873                           
  2874                           ;main.c: 231: float rcv_val = (b1 << 8) + b2;
  2875  02C2  082A               	movf	CalcTemp@b2,w
  2876  02C3  00AC               	movwf	??_CalcTemp
  2877  02C4  01AD               	clrf	??_CalcTemp+1
  2878  02C5  0837               	movf	CalcTemp@b1,w
  2879  02C6  00AE               	movwf	??_CalcTemp+2
  2880  02C7  01AF               	clrf	??_CalcTemp+3
  2881  02C8  082E               	movf	??_CalcTemp+2,w
  2882  02C9  00AF               	movwf	??_CalcTemp+3
  2883  02CA  01AE               	clrf	??_CalcTemp+2
  2884  02CB  082C               	movf	??_CalcTemp,w
  2885  02CC  072E               	addwf	??_CalcTemp+2,w
  2886  02CD  00F8               	movwf	___awtoft@c
  2887  02CE  082D               	movf	??_CalcTemp+1,w
  2888  02CF  3D2F               	addwfc	??_CalcTemp+3,w
  2889  02D0  00F9               	movwf	___awtoft@c+1
  2890  02D1  3181  21FB  3182   	fcall	___awtoft
  2891  02D4  0878               	movf	?___awtoft,w
  2892  02D5  0020               	movlb	0	; select bank0
  2893  02D6  00B1               	movwf	CalcTemp@rcv_val
  2894  02D7  0879               	movf	?___awtoft+1,w
  2895  02D8  00B2               	movwf	CalcTemp@rcv_val+1
  2896  02D9  087A               	movf	?___awtoft+2,w
  2897  02DA  00B3               	movwf	CalcTemp@rcv_val+2
  2898                           
  2899                           ;main.c: 232: float ans = rcv_val * 0.0015259;
  2900  02DB  3001               	movlw	1
  2901  02DC  00F8               	movwf	___ftmul@f1
  2902  02DD  30C8               	movlw	200
  2903  02DE  00F9               	movwf	___ftmul@f1+1
  2904  02DF  303A               	movlw	58
  2905  02E0  00FA               	movwf	___ftmul@f1+2
  2906  02E1  0831               	movf	CalcTemp@rcv_val,w
  2907  02E2  00FB               	movwf	___ftmul@f2
  2908  02E3  0832               	movf	CalcTemp@rcv_val+1,w
  2909  02E4  00FC               	movwf	___ftmul@f2+1
  2910  02E5  0833               	movf	CalcTemp@rcv_val+2,w
  2911  02E6  00FD               	movwf	___ftmul@f2+2
  2912  02E7  3185  2549  3182   	fcall	___ftmul
  2913  02EA  0878               	movf	?___ftmul,w
  2914  02EB  0020               	movlb	0	; select bank0
  2915  02EC  00B4               	movwf	CalcTemp@ans
  2916  02ED  0879               	movf	?___ftmul+1,w
  2917  02EE  00B5               	movwf	CalcTemp@ans+1
  2918  02EF  087A               	movf	?___ftmul+2,w
  2919  02F0  00B6               	movwf	CalcTemp@ans+2
  2920                           
  2921                           ;main.c: 234: return (int) ans;
  2922  02F1  0834               	movf	CalcTemp@ans,w
  2923  02F2  00F0               	movwf	___fttol@f1
  2924  02F3  0835               	movf	CalcTemp@ans+1,w
  2925  02F4  00F1               	movwf	___fttol@f1+1
  2926  02F5  0836               	movf	CalcTemp@ans+2,w
  2927  02F6  00F2               	movwf	___fttol@f1+2
  2928  02F7  3184  242A         	fcall	___fttol
  2929  02F9  0871               	movf	?___fttol+1,w
  2930  02FA  0020               	movlb	0	; select bank0
  2931  02FB  00AB               	movwf	?_CalcTemp+1
  2932  02FC  0870               	movf	?___fttol,w
  2933  02FD  00AA               	movwf	?_CalcTemp
  2934  02FE  0008               	return
  2935  02FF                     __end_of_CalcTemp:	
  2936                           
  2937                           	psect	text21
  2938  03C5                     __ptext21:	
  2939 ;; *************** function _CalcHumid *****************
  2940 ;; Defined at:
  2941 ;;		line 237 in file "main.c"
  2942 ;; Parameters:    Size  Location     Type
  2943 ;;  b1              1    wreg     unsigned char 
  2944 ;;  b2              1   23[BANK0 ] unsigned char 
  2945 ;; Auto vars:     Size  Location     Type
  2946 ;;  b1              1   33[BANK0 ] unsigned char 
  2947 ;;  ans             3   34[BANK0 ] float 
  2948 ;;  rcv_val         3   30[BANK0 ] float 
  2949 ;; Return value:  Size  Location     Type
  2950 ;;                  2   23[BANK0 ] int 
  2951 ;; Registers used:
  2952 ;;		wreg, status,2, status,0, pclath, cstack
  2953 ;; Tracked objects:
  2954 ;;		On entry : 0/0
  2955 ;;		On exit  : 0/0
  2956 ;;		Unchanged: 0/0
  2957 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2958 ;;      Params:         0       2       0       0
  2959 ;;      Locals:         0       7       0       0
  2960 ;;      Temps:          0       5       0       0
  2961 ;;      Totals:         0      14       0       0
  2962 ;;Total ram usage:       14 bytes
  2963 ;; Hardware stack levels used:    1
  2964 ;; Hardware stack levels required when called:    2
  2965 ;; This function calls:
  2966 ;;		___awtoft
  2967 ;;		___ftadd
  2968 ;;		___ftmul
  2969 ;;		___fttol
  2970 ;; This function is called by:
  2971 ;;		_main
  2972 ;; This function uses a non-reentrant model
  2973 ;;
  2974                           
  2975                           
  2976                           ;psect for function _CalcHumid
  2977  03C5                     _CalcHumid:	
  2978                           
  2979                           ;incstack = 0
  2980                           ; Regs used in _CalcHumid: [wreg+status,2+status,0+pclath+cstack]
  2981                           ;CalcHumid@b1 stored from wreg
  2982  03C5  0020               	movlb	0	; select bank0
  2983  03C6  00C1               	movwf	CalcHumid@b1
  2984                           
  2985                           ;main.c: 238: float rcv_val = (b1 << 8) + b2;
  2986  03C7  0837               	movf	CalcHumid@b2,w
  2987  03C8  00B9               	movwf	??_CalcHumid
  2988  03C9  01BA               	clrf	??_CalcHumid+1
  2989  03CA  0841               	movf	CalcHumid@b1,w
  2990  03CB  00BB               	movwf	??_CalcHumid+2
  2991  03CC  01BC               	clrf	??_CalcHumid+3
  2992  03CD  083B               	movf	??_CalcHumid+2,w
  2993  03CE  00BC               	movwf	??_CalcHumid+3
  2994  03CF  01BB               	clrf	??_CalcHumid+2
  2995  03D0  0839               	movf	??_CalcHumid,w
  2996  03D1  073B               	addwf	??_CalcHumid+2,w
  2997  03D2  00F8               	movwf	___awtoft@c
  2998  03D3  083A               	movf	??_CalcHumid+1,w
  2999  03D4  3D3C               	addwfc	??_CalcHumid+3,w
  3000  03D5  00F9               	movwf	___awtoft@c+1
  3001  03D6  3181  21FB  3183   	fcall	___awtoft
  3002  03D9  0878               	movf	?___awtoft,w
  3003  03DA  0020               	movlb	0	; select bank0
  3004  03DB  00BE               	movwf	CalcHumid@rcv_val
  3005  03DC  0879               	movf	?___awtoft+1,w
  3006  03DD  00BF               	movwf	CalcHumid@rcv_val+1
  3007  03DE  087A               	movf	?___awtoft+2,w
  3008  03DF  00C0               	movwf	CalcHumid@rcv_val+2
  3009                           
  3010                           ;main.c: 239: float ans = ((0.002670329 * rcv_val) - 45);
  3011  03E0  3000               	movlw	0
  3012  03E1  00AA               	movwf	___ftadd@f1
  3013  03E2  3034               	movlw	52
  3014  03E3  00AB               	movwf	___ftadd@f1+1
  3015  03E4  30C2               	movlw	194
  3016  03E5  00AC               	movwf	___ftadd@f1+2
  3017  03E6  3001               	movlw	1
  3018  03E7  00F8               	movwf	___ftmul@f1
  3019  03E8  302F               	movlw	47
  3020  03E9  00F9               	movwf	___ftmul@f1+1
  3021  03EA  303B               	movlw	59
  3022  03EB  00FA               	movwf	___ftmul@f1+2
  3023  03EC  083E               	movf	CalcHumid@rcv_val,w
  3024  03ED  00FB               	movwf	___ftmul@f2
  3025  03EE  083F               	movf	CalcHumid@rcv_val+1,w
  3026  03EF  00FC               	movwf	___ftmul@f2+1
  3027  03F0  0840               	movf	CalcHumid@rcv_val+2,w
  3028  03F1  00FD               	movwf	___ftmul@f2+2
  3029  03F2  3185  2549  3183   	fcall	___ftmul
  3030  03F5  0878               	movf	?___ftmul,w
  3031  03F6  0020               	movlb	0	; select bank0
  3032  03F7  00AD               	movwf	___ftadd@f2
  3033  03F8  0879               	movf	?___ftmul+1,w
  3034  03F9  00AE               	movwf	___ftadd@f2+1
  3035  03FA  087A               	movf	?___ftmul+2,w
  3036  03FB  00AF               	movwf	___ftadd@f2+2
  3037  03FC  3185  25FC  3183   	fcall	___ftadd
  3038  03FF  0020               	movlb	0	; select bank0
  3039  0400  082A               	movf	?___ftadd,w
  3040  0401  00C2               	movwf	CalcHumid@ans
  3041  0402  082B               	movf	?___ftadd+1,w
  3042  0403  00C3               	movwf	CalcHumid@ans+1
  3043  0404  082C               	movf	?___ftadd+2,w
  3044  0405  00C4               	movwf	CalcHumid@ans+2
  3045                           
  3046                           ;main.c: 240: ans = ans * 100;
  3047  0406  3000               	movlw	0
  3048  0407  00F8               	movwf	___ftmul@f1
  3049  0408  30C8               	movlw	200
  3050  0409  00F9               	movwf	___ftmul@f1+1
  3051  040A  3042               	movlw	66
  3052  040B  00FA               	movwf	___ftmul@f1+2
  3053  040C  0842               	movf	CalcHumid@ans,w
  3054  040D  00FB               	movwf	___ftmul@f2
  3055  040E  0843               	movf	CalcHumid@ans+1,w
  3056  040F  00FC               	movwf	___ftmul@f2+1
  3057  0410  0844               	movf	CalcHumid@ans+2,w
  3058  0411  00FD               	movwf	___ftmul@f2+2
  3059  0412  3185  2549  3183   	fcall	___ftmul
  3060  0415  0878               	movf	?___ftmul,w
  3061  0416  0020               	movlb	0	; select bank0
  3062  0417  00C2               	movwf	CalcHumid@ans
  3063  0418  0879               	movf	?___ftmul+1,w
  3064  0419  00C3               	movwf	CalcHumid@ans+1
  3065  041A  087A               	movf	?___ftmul+2,w
  3066  041B  00C4               	movwf	CalcHumid@ans+2
  3067                           
  3068                           ;main.c: 242: return (int) ans;
  3069  041C  0842               	movf	CalcHumid@ans,w
  3070  041D  00F0               	movwf	___fttol@f1
  3071  041E  0843               	movf	CalcHumid@ans+1,w
  3072  041F  00F1               	movwf	___fttol@f1+1
  3073  0420  0844               	movf	CalcHumid@ans+2,w
  3074  0421  00F2               	movwf	___fttol@f1+2
  3075  0422  3184  242A         	fcall	___fttol
  3076  0424  0871               	movf	?___fttol+1,w
  3077  0425  0020               	movlb	0	; select bank0
  3078  0426  00B8               	movwf	?_CalcHumid+1
  3079  0427  0870               	movf	?___fttol,w
  3080  0428  00B7               	movwf	?_CalcHumid
  3081  0429  0008               	return
  3082  042A                     __end_of_CalcHumid:	
  3083                           
  3084                           	psect	text22
  3085  042A                     __ptext22:	
  3086 ;; *************** function ___fttol *****************
  3087 ;; Defined at:
  3088 ;;		line 44 in file "/opt/mmplabv310/xc8/sources/common/fttol.c"
  3089 ;; Parameters:    Size  Location     Type
  3090 ;;  f1              3    0[COMMON] float 
  3091 ;; Auto vars:     Size  Location     Type
  3092 ;;  lval            4    9[COMMON] unsigned long 
  3093 ;;  exp1            1   13[COMMON] unsigned char 
  3094 ;;  sign1           1    8[COMMON] unsigned char 
  3095 ;; Return value:  Size  Location     Type
  3096 ;;                  4    0[COMMON] long 
  3097 ;; Registers used:
  3098 ;;		wreg, status,2, status,0
  3099 ;; Tracked objects:
  3100 ;;		On entry : 0/0
  3101 ;;		On exit  : 0/0
  3102 ;;		Unchanged: 0/0
  3103 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3104 ;;      Params:         4       0       0       0
  3105 ;;      Locals:         6       0       0       0
  3106 ;;      Temps:          4       0       0       0
  3107 ;;      Totals:        14       0       0       0
  3108 ;;Total ram usage:       14 bytes
  3109 ;; Hardware stack levels used:    1
  3110 ;; This function calls:
  3111 ;;		Nothing
  3112 ;; This function is called by:
  3113 ;;		_CalcTemp
  3114 ;;		_CalcHumid
  3115 ;; This function uses a non-reentrant model
  3116 ;;
  3117                           
  3118                           
  3119                           ;psect for function ___fttol
  3120  042A                     ___fttol:	
  3121                           
  3122                           ;incstack = 0
  3123                           ; Regs used in ___fttol: [wreg+status,2+status,0]
  3124  042A  0870               	movf	___fttol@f1,w
  3125  042B  00F4               	movwf	??___fttol
  3126  042C  0871               	movf	___fttol@f1+1,w
  3127  042D  00F5               	movwf	??___fttol+1
  3128  042E  0872               	movf	___fttol@f1+2,w
  3129  042F  00F6               	movwf	??___fttol+2
  3130  0430  1003               	clrc
  3131  0431  0D75               	rlf	??___fttol+1,w
  3132  0432  0D76               	rlf	??___fttol+2,w
  3133  0433  00F7               	movwf	??___fttol+3
  3134  0434  0877               	movf	??___fttol+3,w
  3135  0435  00FD               	movwf	___fttol@exp1
  3136  0436  087D               	movf	___fttol@exp1,w
  3137  0437  1D03               	btfss	3,2
  3138  0438  2C42               	goto	l1501
  3139  0439  3000               	movlw	0
  3140  043A  00F3               	movwf	?___fttol+3
  3141  043B  3000               	movlw	0
  3142  043C  00F2               	movwf	?___fttol+2
  3143  043D  3000               	movlw	0
  3144  043E  00F1               	movwf	?___fttol+1
  3145  043F  3000               	movlw	0
  3146  0440  00F0               	movwf	?___fttol
  3147  0441  0008               	return
  3148  0442                     l1501:	
  3149  0442  0870               	movf	___fttol@f1,w
  3150  0443  00F4               	movwf	??___fttol
  3151  0444  0871               	movf	___fttol@f1+1,w
  3152  0445  00F5               	movwf	??___fttol+1
  3153  0446  0872               	movf	___fttol@f1+2,w
  3154  0447  00F6               	movwf	??___fttol+2
  3155  0448  3017               	movlw	23
  3156  0449                     u1755:	
  3157  0449  36F6               	lsrf	??___fttol+2,f
  3158  044A  0CF5               	rrf	??___fttol+1,f
  3159  044B  0CF4               	rrf	??___fttol,f
  3160  044C  0B89               	decfsz	9,f
  3161  044D  2C49               	goto	u1755
  3162  044E  0874               	movf	??___fttol,w
  3163  044F  00F7               	movwf	??___fttol+3
  3164  0450  0877               	movf	??___fttol+3,w
  3165  0451  00F8               	movwf	___fttol@sign1
  3166  0452  17F1               	bsf	___fttol@f1+1,7
  3167  0453  30FF               	movlw	255
  3168  0454  05F0               	andwf	___fttol@f1,f
  3169  0455  30FF               	movlw	255
  3170  0456  05F1               	andwf	___fttol@f1+1,f
  3171  0457  3000               	movlw	0
  3172  0458  05F2               	andwf	___fttol@f1+2,f
  3173  0459  0870               	movf	___fttol@f1,w
  3174  045A  00F9               	movwf	___fttol@lval
  3175  045B  0871               	movf	___fttol@f1+1,w
  3176  045C  00FA               	movwf	___fttol@lval+1
  3177  045D  0872               	movf	___fttol@f1+2,w
  3178  045E  00FB               	movwf	___fttol@lval+2
  3179  045F  01FC               	clrf	___fttol@lval+3
  3180  0460  308E               	movlw	142
  3181  0461  02FD               	subwf	___fttol@exp1,f
  3182  0462  1FFD               	btfss	___fttol@exp1,7
  3183  0463  2C80               	goto	l1521
  3184  0464  087D               	movf	___fttol@exp1,w
  3185  0465  3A80               	xorlw	128
  3186  0466  3E8F               	addlw	143
  3187  0467  1803               	skipnc
  3188  0468  2C72               	goto	l1519
  3189  0469  3000               	movlw	0
  3190  046A  00F3               	movwf	?___fttol+3
  3191  046B  3000               	movlw	0
  3192  046C  00F2               	movwf	?___fttol+2
  3193  046D  3000               	movlw	0
  3194  046E  00F1               	movwf	?___fttol+1
  3195  046F  3000               	movlw	0
  3196  0470  00F0               	movwf	?___fttol
  3197  0471  0008               	return
  3198  0472                     l1519:	
  3199  0472  3001               	movlw	1
  3200  0473                     u1785:	
  3201  0473  36FC               	lsrf	___fttol@lval+3,f
  3202  0474  0CFB               	rrf	___fttol@lval+2,f
  3203  0475  0CFA               	rrf	___fttol@lval+1,f
  3204  0476  0CF9               	rrf	___fttol@lval,f
  3205  0477  0B89               	decfsz	9,f
  3206  0478  2C73               	goto	u1785
  3207  0479  3001               	movlw	1
  3208  047A  00F4               	movwf	??___fttol
  3209  047B  0874               	movf	??___fttol,w
  3210  047C  07FD               	addwf	___fttol@exp1,f
  3211  047D  1903               	btfsc	3,2
  3212  047E  2C99               	goto	l1529
  3213  047F  2C72               	goto	l1519
  3214  0480                     l1521:	
  3215  0480  3018               	movlw	24
  3216  0481  027D               	subwf	___fttol@exp1,w
  3217  0482  1C03               	skipc
  3218  0483  2C96               	goto	l519
  3219  0484  3000               	movlw	0
  3220  0485  00F3               	movwf	?___fttol+3
  3221  0486  3000               	movlw	0
  3222  0487  00F2               	movwf	?___fttol+2
  3223  0488  3000               	movlw	0
  3224  0489  00F1               	movwf	?___fttol+1
  3225  048A  3000               	movlw	0
  3226  048B  00F0               	movwf	?___fttol
  3227  048C  0008               	return
  3228  048D                     l1527:	
  3229  048D  3001               	movlw	1
  3230  048E                     u1815:	
  3231  048E  35F9               	lslf	___fttol@lval,f
  3232  048F  0DFA               	rlf	___fttol@lval+1,f
  3233  0490  0DFB               	rlf	___fttol@lval+2,f
  3234  0491  0DFC               	rlf	___fttol@lval+3,f
  3235  0492  0B89               	decfsz	9,f
  3236  0493  2C8E               	goto	u1815
  3237  0494  3001               	movlw	1
  3238  0495  02FD               	subwf	___fttol@exp1,f
  3239  0496                     l519:	
  3240  0496  087D               	movf	___fttol@exp1,w
  3241  0497  1D03               	btfss	3,2
  3242  0498  2C8D               	goto	l1527
  3243  0499                     l1529:	
  3244  0499  0878               	movf	___fttol@sign1,w
  3245  049A  1903               	btfsc	3,2
  3246  049B  2CA7               	goto	l1533
  3247  049C  09F9               	comf	___fttol@lval,f
  3248  049D  09FA               	comf	___fttol@lval+1,f
  3249  049E  09FB               	comf	___fttol@lval+2,f
  3250  049F  09FC               	comf	___fttol@lval+3,f
  3251  04A0  0AF9               	incf	___fttol@lval,f
  3252  04A1  1903               	skipnz
  3253  04A2  0AFA               	incf	___fttol@lval+1,f
  3254  04A3  1903               	skipnz
  3255  04A4  0AFB               	incf	___fttol@lval+2,f
  3256  04A5  1903               	skipnz
  3257  04A6  0AFC               	incf	___fttol@lval+3,f
  3258  04A7                     l1533:	
  3259  04A7  087C               	movf	___fttol@lval+3,w
  3260  04A8  00F3               	movwf	?___fttol+3
  3261  04A9  087B               	movf	___fttol@lval+2,w
  3262  04AA  00F2               	movwf	?___fttol+2
  3263  04AB  087A               	movf	___fttol@lval+1,w
  3264  04AC  00F1               	movwf	?___fttol+1
  3265  04AD  0879               	movf	___fttol@lval,w
  3266  04AE  00F0               	movwf	?___fttol
  3267  04AF  0008               	return
  3268  04B0                     __end_of___fttol:	
  3269                           
  3270                           	psect	text23
  3271  0549                     __ptext23:	
  3272 ;; *************** function ___ftmul *****************
  3273 ;; Defined at:
  3274 ;;		line 62 in file "/opt/mmplabv310/xc8/sources/common/ftmul.c"
  3275 ;; Parameters:    Size  Location     Type
  3276 ;;  f1              3    8[COMMON] float 
  3277 ;;  f2              3   11[COMMON] float 
  3278 ;; Auto vars:     Size  Location     Type
  3279 ;;  f3_as_produc    3    5[BANK0 ] unsigned um
  3280 ;;  sign            1    9[BANK0 ] unsigned char 
  3281 ;;  cntr            1    8[BANK0 ] unsigned char 
  3282 ;;  exp             1    4[BANK0 ] unsigned char 
  3283 ;; Return value:  Size  Location     Type
  3284 ;;                  3    8[COMMON] float 
  3285 ;; Registers used:
  3286 ;;		wreg, status,2, status,0, pclath, cstack
  3287 ;; Tracked objects:
  3288 ;;		On entry : 0/0
  3289 ;;		On exit  : 0/0
  3290 ;;		Unchanged: 0/0
  3291 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3292 ;;      Params:         6       0       0       0
  3293 ;;      Locals:         0       6       0       0
  3294 ;;      Temps:          0       4       0       0
  3295 ;;      Totals:         6      10       0       0
  3296 ;;Total ram usage:       16 bytes
  3297 ;; Hardware stack levels used:    1
  3298 ;; Hardware stack levels required when called:    1
  3299 ;; This function calls:
  3300 ;;		___ftpack
  3301 ;; This function is called by:
  3302 ;;		_CalcTemp
  3303 ;;		_CalcHumid
  3304 ;; This function uses a non-reentrant model
  3305 ;;
  3306                           
  3307                           
  3308                           ;psect for function ___ftmul
  3309  0549                     ___ftmul:	
  3310                           
  3311                           ;incstack = 0
  3312                           ; Regs used in ___ftmul: [wreg+status,2+status,0+pclath+cstack]
  3313  0549  0878               	movf	___ftmul@f1,w
  3314  054A  0020               	movlb	0	; select bank0
  3315  054B  00A0               	movwf	??___ftmul
  3316  054C  0879               	movf	___ftmul@f1+1,w
  3317  054D  00A1               	movwf	??___ftmul+1
  3318  054E  087A               	movf	___ftmul@f1+2,w
  3319  054F  00A2               	movwf	??___ftmul+2
  3320  0550  1003               	clrc
  3321  0551  0D21               	rlf	??___ftmul+1,w
  3322  0552  0D22               	rlf	??___ftmul+2,w
  3323  0553  00A3               	movwf	??___ftmul+3
  3324  0554  0823               	movf	??___ftmul+3,w
  3325  0555  00A4               	movwf	___ftmul@exp
  3326  0556  0824               	movf	___ftmul@exp,w
  3327  0557  1D03               	btfss	3,2
  3328  0558  2D60               	goto	l1451
  3329  0559  3000               	movlw	0
  3330  055A  00F8               	movwf	?___ftmul
  3331  055B  3000               	movlw	0
  3332  055C  00F9               	movwf	?___ftmul+1
  3333  055D  3000               	movlw	0
  3334  055E  00FA               	movwf	?___ftmul+2
  3335  055F  0008               	return
  3336  0560                     l1451:	
  3337  0560  087B               	movf	___ftmul@f2,w
  3338  0561  00A0               	movwf	??___ftmul
  3339  0562  087C               	movf	___ftmul@f2+1,w
  3340  0563  00A1               	movwf	??___ftmul+1
  3341  0564  087D               	movf	___ftmul@f2+2,w
  3342  0565  00A2               	movwf	??___ftmul+2
  3343  0566  1003               	clrc
  3344  0567  0D21               	rlf	??___ftmul+1,w
  3345  0568  0D22               	rlf	??___ftmul+2,w
  3346  0569  00A3               	movwf	??___ftmul+3
  3347  056A  0823               	movf	??___ftmul+3,w
  3348  056B  00A9               	movwf	___ftmul@sign
  3349  056C  0829               	movf	___ftmul@sign,w
  3350  056D  1D03               	btfss	3,2
  3351  056E  2D76               	goto	l1457
  3352  056F  3000               	movlw	0
  3353  0570  00F8               	movwf	?___ftmul
  3354  0571  3000               	movlw	0
  3355  0572  00F9               	movwf	?___ftmul+1
  3356  0573  3000               	movlw	0
  3357  0574  00FA               	movwf	?___ftmul+2
  3358  0575  0008               	return
  3359  0576                     l1457:	
  3360  0576  0829               	movf	___ftmul@sign,w
  3361  0577  3E7B               	addlw	123
  3362  0578  00A0               	movwf	??___ftmul
  3363  0579  0820               	movf	??___ftmul,w
  3364  057A  07A4               	addwf	___ftmul@exp,f
  3365  057B  0878               	movf	___ftmul@f1,w
  3366  057C  00A0               	movwf	??___ftmul
  3367  057D  0879               	movf	___ftmul@f1+1,w
  3368  057E  00A1               	movwf	??___ftmul+1
  3369  057F  087A               	movf	___ftmul@f1+2,w
  3370  0580  00A2               	movwf	??___ftmul+2
  3371  0581  3010               	movlw	16
  3372  0582                     u1645:	
  3373  0582  36A2               	lsrf	??___ftmul+2,f
  3374  0583  0CA1               	rrf	??___ftmul+1,f
  3375  0584  0CA0               	rrf	??___ftmul,f
  3376  0585  0B89               	decfsz	9,f
  3377  0586  2D82               	goto	u1645
  3378  0587  0820               	movf	??___ftmul,w
  3379  0588  00A3               	movwf	??___ftmul+3
  3380  0589  0823               	movf	??___ftmul+3,w
  3381  058A  00A9               	movwf	___ftmul@sign
  3382  058B  087B               	movf	___ftmul@f2,w
  3383  058C  00A0               	movwf	??___ftmul
  3384  058D  087C               	movf	___ftmul@f2+1,w
  3385  058E  00A1               	movwf	??___ftmul+1
  3386  058F  087D               	movf	___ftmul@f2+2,w
  3387  0590  00A2               	movwf	??___ftmul+2
  3388  0591  3010               	movlw	16
  3389  0592                     u1655:	
  3390  0592  36A2               	lsrf	??___ftmul+2,f
  3391  0593  0CA1               	rrf	??___ftmul+1,f
  3392  0594  0CA0               	rrf	??___ftmul,f
  3393  0595  0B89               	decfsz	9,f
  3394  0596  2D92               	goto	u1655
  3395  0597  0820               	movf	??___ftmul,w
  3396  0598  00A3               	movwf	??___ftmul+3
  3397  0599  0823               	movf	??___ftmul+3,w
  3398  059A  06A9               	xorwf	___ftmul@sign,f
  3399  059B  3080               	movlw	128
  3400  059C  00A0               	movwf	??___ftmul
  3401  059D  0820               	movf	??___ftmul,w
  3402  059E  05A9               	andwf	___ftmul@sign,f
  3403  059F  17F9               	bsf	___ftmul@f1+1,7
  3404  05A0  17FC               	bsf	___ftmul@f2+1,7
  3405  05A1  30FF               	movlw	255
  3406  05A2  05FB               	andwf	___ftmul@f2,f
  3407  05A3  30FF               	movlw	255
  3408  05A4  05FC               	andwf	___ftmul@f2+1,f
  3409  05A5  3000               	movlw	0
  3410  05A6  05FD               	andwf	___ftmul@f2+2,f
  3411  05A7  3000               	movlw	0
  3412  05A8  00A5               	movwf	___ftmul@f3_as_product
  3413  05A9  3000               	movlw	0
  3414  05AA  00A6               	movwf	___ftmul@f3_as_product+1
  3415  05AB  3000               	movlw	0
  3416  05AC  00A7               	movwf	___ftmul@f3_as_product+2
  3417  05AD  3007               	movlw	7
  3418  05AE  00A0               	movwf	??___ftmul
  3419  05AF  0820               	movf	??___ftmul,w
  3420  05B0  00A8               	movwf	___ftmul@cntr
  3421  05B1                     l1469:	
  3422  05B1  1C78               	btfss	___ftmul@f1,0
  3423  05B2  2DB9               	goto	l1473
  3424  05B3  087B               	movf	___ftmul@f2,w
  3425  05B4  07A5               	addwf	___ftmul@f3_as_product,f
  3426  05B5  087C               	movf	___ftmul@f2+1,w
  3427  05B6  3DA6               	addwfc	___ftmul@f3_as_product+1,f
  3428  05B7  087D               	movf	___ftmul@f2+2,w
  3429  05B8  3DA7               	addwfc	___ftmul@f3_as_product+2,f
  3430  05B9                     l1473:	
  3431  05B9  3001               	movlw	1
  3432  05BA                     u1675:	
  3433  05BA  36FA               	lsrf	___ftmul@f1+2,f
  3434  05BB  0CF9               	rrf	___ftmul@f1+1,f
  3435  05BC  0CF8               	rrf	___ftmul@f1,f
  3436  05BD  0B89               	decfsz	9,f
  3437  05BE  2DBA               	goto	u1675
  3438  05BF  3001               	movlw	1
  3439  05C0                     u1685:	
  3440  05C0  35FB               	lslf	___ftmul@f2,f
  3441  05C1  0DFC               	rlf	___ftmul@f2+1,f
  3442  05C2  0DFD               	rlf	___ftmul@f2+2,f
  3443  05C3  0B89               	decfsz	9,f
  3444  05C4  2DC0               	goto	u1685
  3445  05C5  3001               	movlw	1
  3446  05C6  02A8               	subwf	___ftmul@cntr,f
  3447  05C7  1D03               	btfss	3,2
  3448  05C8  2DB1               	goto	l1469
  3449  05C9  3009               	movlw	9
  3450  05CA  00A0               	movwf	??___ftmul
  3451  05CB  0820               	movf	??___ftmul,w
  3452  05CC  00A8               	movwf	___ftmul@cntr
  3453  05CD                     l1481:	
  3454  05CD  1C78               	btfss	___ftmul@f1,0
  3455  05CE  2DD5               	goto	l1485
  3456  05CF  087B               	movf	___ftmul@f2,w
  3457  05D0  07A5               	addwf	___ftmul@f3_as_product,f
  3458  05D1  087C               	movf	___ftmul@f2+1,w
  3459  05D2  3DA6               	addwfc	___ftmul@f3_as_product+1,f
  3460  05D3  087D               	movf	___ftmul@f2+2,w
  3461  05D4  3DA7               	addwfc	___ftmul@f3_as_product+2,f
  3462  05D5                     l1485:	
  3463  05D5  3001               	movlw	1
  3464  05D6                     u1715:	
  3465  05D6  36FA               	lsrf	___ftmul@f1+2,f
  3466  05D7  0CF9               	rrf	___ftmul@f1+1,f
  3467  05D8  0CF8               	rrf	___ftmul@f1,f
  3468  05D9  0B89               	decfsz	9,f
  3469  05DA  2DD6               	goto	u1715
  3470  05DB  3001               	movlw	1
  3471  05DC                     u1725:	
  3472  05DC  36A7               	lsrf	___ftmul@f3_as_product+2,f
  3473  05DD  0CA6               	rrf	___ftmul@f3_as_product+1,f
  3474  05DE  0CA5               	rrf	___ftmul@f3_as_product,f
  3475  05DF  0B89               	decfsz	9,f
  3476  05E0  2DDC               	goto	u1725
  3477  05E1  3001               	movlw	1
  3478  05E2  02A8               	subwf	___ftmul@cntr,f
  3479  05E3  1D03               	btfss	3,2
  3480  05E4  2DCD               	goto	l1481
  3481  05E5  0825               	movf	___ftmul@f3_as_product,w
  3482  05E6  00F0               	movwf	___ftpack@arg
  3483  05E7  0826               	movf	___ftmul@f3_as_product+1,w
  3484  05E8  00F1               	movwf	___ftpack@arg+1
  3485  05E9  0827               	movf	___ftmul@f3_as_product+2,w
  3486  05EA  00F2               	movwf	___ftpack@arg+2
  3487  05EB  0824               	movf	___ftmul@exp,w
  3488  05EC  00A0               	movwf	??___ftmul
  3489  05ED  0820               	movf	??___ftmul,w
  3490  05EE  00F3               	movwf	___ftpack@exp
  3491  05EF  0829               	movf	___ftmul@sign,w
  3492  05F0  00A1               	movwf	??___ftmul+1
  3493  05F1  0821               	movf	??___ftmul+1,w
  3494  05F2  00F4               	movwf	___ftpack@sign
  3495  05F3  3183  2361         	fcall	___ftpack
  3496  05F5  0870               	movf	?___ftpack,w
  3497  05F6  00F8               	movwf	?___ftmul
  3498  05F7  0871               	movf	?___ftpack+1,w
  3499  05F8  00F9               	movwf	?___ftmul+1
  3500  05F9  0872               	movf	?___ftpack+2,w
  3501  05FA  00FA               	movwf	?___ftmul+2
  3502  05FB  0008               	return
  3503  05FC                     __end_of___ftmul:	
  3504                           
  3505                           	psect	text24
  3506  05FC                     __ptext24:	
  3507 ;; *************** function ___ftadd *****************
  3508 ;; Defined at:
  3509 ;;		line 86 in file "/opt/mmplabv310/xc8/sources/common/ftadd.c"
  3510 ;; Parameters:    Size  Location     Type
  3511 ;;  f1              3   10[BANK0 ] float 
  3512 ;;  f2              3   13[BANK0 ] float 
  3513 ;; Auto vars:     Size  Location     Type
  3514 ;;  exp1            1   22[BANK0 ] unsigned char 
  3515 ;;  exp2            1   21[BANK0 ] unsigned char 
  3516 ;;  sign            1   20[BANK0 ] unsigned char 
  3517 ;; Return value:  Size  Location     Type
  3518 ;;                  3   10[BANK0 ] float 
  3519 ;; Registers used:
  3520 ;;		wreg, status,2, status,0, pclath, cstack
  3521 ;; Tracked objects:
  3522 ;;		On entry : 0/0
  3523 ;;		On exit  : 0/0
  3524 ;;		Unchanged: 0/0
  3525 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3526 ;;      Params:         0       6       0       0
  3527 ;;      Locals:         0       3       0       0
  3528 ;;      Temps:          0       4       0       0
  3529 ;;      Totals:         0      13       0       0
  3530 ;;Total ram usage:       13 bytes
  3531 ;; Hardware stack levels used:    1
  3532 ;; Hardware stack levels required when called:    1
  3533 ;; This function calls:
  3534 ;;		___ftpack
  3535 ;; This function is called by:
  3536 ;;		_CalcHumid
  3537 ;; This function uses a non-reentrant model
  3538 ;;
  3539                           
  3540                           
  3541                           ;psect for function ___ftadd
  3542  05FC                     ___ftadd:	
  3543                           
  3544                           ;incstack = 0
  3545                           ; Regs used in ___ftadd: [wreg+status,2+status,0+pclath+cstack]
  3546  05FC  0020               	movlb	0	; select bank0
  3547  05FD  082A               	movf	___ftadd@f1,w
  3548  05FE  00B0               	movwf	??___ftadd
  3549  05FF  082B               	movf	___ftadd@f1+1,w
  3550  0600  00B1               	movwf	??___ftadd+1
  3551  0601  082C               	movf	___ftadd@f1+2,w
  3552  0602  00B2               	movwf	??___ftadd+2
  3553  0603  1003               	clrc
  3554  0604  0D31               	rlf	??___ftadd+1,w
  3555  0605  0D32               	rlf	??___ftadd+2,w
  3556  0606  00B3               	movwf	??___ftadd+3
  3557  0607  0833               	movf	??___ftadd+3,w
  3558  0608  00B6               	movwf	___ftadd@exp1
  3559  0609  082D               	movf	___ftadd@f2,w
  3560  060A  00B0               	movwf	??___ftadd
  3561  060B  082E               	movf	___ftadd@f2+1,w
  3562  060C  00B1               	movwf	??___ftadd+1
  3563  060D  082F               	movf	___ftadd@f2+2,w
  3564  060E  00B2               	movwf	??___ftadd+2
  3565  060F  1003               	clrc
  3566  0610  0D31               	rlf	??___ftadd+1,w
  3567  0611  0D32               	rlf	??___ftadd+2,w
  3568  0612  00B3               	movwf	??___ftadd+3
  3569  0613  0833               	movf	??___ftadd+3,w
  3570  0614  00B5               	movwf	___ftadd@exp2
  3571  0615  0836               	movf	___ftadd@exp1,w
  3572  0616  1903               	btfsc	3,2
  3573  0617  2E24               	goto	l1381
  3574  0618  0835               	movf	___ftadd@exp2,w
  3575  0619  0236               	subwf	___ftadd@exp1,w
  3576  061A  1803               	skipnc
  3577  061B  2E2B               	goto	l1385
  3578  061C  0336               	decf	___ftadd@exp1,w
  3579  061D  3AFF               	xorlw	255
  3580  061E  0735               	addwf	___ftadd@exp2,w
  3581  061F  00B0               	movwf	??___ftadd
  3582  0620  3019               	movlw	25
  3583  0621  0230               	subwf	??___ftadd,w
  3584  0622  1C03               	skipc
  3585  0623  2E2B               	goto	l1385
  3586  0624                     l1381:	
  3587  0624  082D               	movf	___ftadd@f2,w
  3588  0625  00AA               	movwf	?___ftadd
  3589  0626  082E               	movf	___ftadd@f2+1,w
  3590  0627  00AB               	movwf	?___ftadd+1
  3591  0628  082F               	movf	___ftadd@f2+2,w
  3592  0629  00AC               	movwf	?___ftadd+2
  3593  062A  0008               	return
  3594  062B                     l1385:	
  3595  062B  0835               	movf	___ftadd@exp2,w
  3596  062C  1903               	btfsc	3,2
  3597  062D  0008               	return
  3598  062E  0836               	movf	___ftadd@exp1,w
  3599  062F  0235               	subwf	___ftadd@exp2,w
  3600  0630  1803               	skipnc
  3601  0631  2E3A               	goto	l1391
  3602  0632  0335               	decf	___ftadd@exp2,w
  3603  0633  3AFF               	xorlw	255
  3604  0634  0736               	addwf	___ftadd@exp1,w
  3605  0635  00B0               	movwf	??___ftadd
  3606  0636  3019               	movlw	25
  3607  0637  0230               	subwf	??___ftadd,w
  3608  0638  1803               	btfsc	3,0
  3609  0639  0008               	return
  3610  063A                     l1391:	
  3611  063A  3006               	movlw	6
  3612  063B  00B0               	movwf	??___ftadd
  3613  063C  0830               	movf	??___ftadd,w
  3614  063D  00B4               	movwf	___ftadd@sign
  3615  063E  1BAC               	btfsc	___ftadd@f1+2,7
  3616  063F  17B4               	bsf	___ftadd@sign,7
  3617  0640  1BAF               	btfsc	___ftadd@f2+2,7
  3618  0641  1734               	bsf	___ftadd@sign,6
  3619  0642  17AB               	bsf	___ftadd@f1+1,7
  3620  0643  30FF               	movlw	255
  3621  0644  05AA               	andwf	___ftadd@f1,f
  3622  0645  30FF               	movlw	255
  3623  0646  05AB               	andwf	___ftadd@f1+1,f
  3624  0647  3000               	movlw	0
  3625  0648  05AC               	andwf	___ftadd@f1+2,f
  3626  0649  17AE               	bsf	___ftadd@f2+1,7
  3627  064A  30FF               	movlw	255
  3628  064B  05AD               	andwf	___ftadd@f2,f
  3629  064C  30FF               	movlw	255
  3630  064D  05AE               	andwf	___ftadd@f2+1,f
  3631  064E  3000               	movlw	0
  3632  064F  05AF               	andwf	___ftadd@f2+2,f
  3633  0650  0835               	movf	___ftadd@exp2,w
  3634  0651  0236               	subwf	___ftadd@exp1,w
  3635  0652  1803               	skipnc
  3636  0653  2E76               	goto	l1413
  3637  0654                     l1403:	
  3638  0654  3001               	movlw	1
  3639  0655                     u1485:	
  3640  0655  35AD               	lslf	___ftadd@f2,f
  3641  0656  0DAE               	rlf	___ftadd@f2+1,f
  3642  0657  0DAF               	rlf	___ftadd@f2+2,f
  3643  0658  0B89               	decfsz	9,f
  3644  0659  2E55               	goto	u1485
  3645  065A  3001               	movlw	1
  3646  065B  02B5               	subwf	___ftadd@exp2,f
  3647  065C  0835               	movf	___ftadd@exp2,w
  3648  065D  0636               	xorwf	___ftadd@exp1,w
  3649  065E  1903               	skipnz
  3650  065F  2E71               	goto	l1411
  3651  0660  3001               	movlw	1
  3652  0661  02B4               	subwf	___ftadd@sign,f
  3653  0662  0834               	movf	___ftadd@sign,w
  3654  0663  3907               	andlw	7
  3655  0664  1903               	btfsc	3,2
  3656  0665  2E71               	goto	l1411
  3657  0666  2E54               	goto	l1403
  3658  0667                     l1409:	
  3659  0667  3001               	movlw	1
  3660  0668                     u1515:	
  3661  0668  36AC               	lsrf	___ftadd@f1+2,f
  3662  0669  0CAB               	rrf	___ftadd@f1+1,f
  3663  066A  0CAA               	rrf	___ftadd@f1,f
  3664  066B  0B89               	decfsz	9,f
  3665  066C  2E68               	goto	u1515
  3666  066D  3001               	movlw	1
  3667  066E  00B0               	movwf	??___ftadd
  3668  066F  0830               	movf	??___ftadd,w
  3669  0670  07B6               	addwf	___ftadd@exp1,f
  3670  0671                     l1411:	
  3671  0671  0836               	movf	___ftadd@exp1,w
  3672  0672  0635               	xorwf	___ftadd@exp2,w
  3673  0673  1903               	btfsc	3,2
  3674  0674  2E9B               	goto	l459
  3675  0675  2E67               	goto	l1409
  3676  0676                     l1413:	
  3677  0676  0836               	movf	___ftadd@exp1,w
  3678  0677  0235               	subwf	___ftadd@exp2,w
  3679  0678  1803               	skipnc
  3680  0679  2E9B               	goto	l459
  3681  067A                     l1415:	
  3682  067A  3001               	movlw	1
  3683  067B                     u1545:	
  3684  067B  35AA               	lslf	___ftadd@f1,f
  3685  067C  0DAB               	rlf	___ftadd@f1+1,f
  3686  067D  0DAC               	rlf	___ftadd@f1+2,f
  3687  067E  0B89               	decfsz	9,f
  3688  067F  2E7B               	goto	u1545
  3689  0680  3001               	movlw	1
  3690  0681  02B6               	subwf	___ftadd@exp1,f
  3691  0682  0835               	movf	___ftadd@exp2,w
  3692  0683  0636               	xorwf	___ftadd@exp1,w
  3693  0684  1903               	skipnz
  3694  0685  2E97               	goto	l1423
  3695  0686  3001               	movlw	1
  3696  0687  02B4               	subwf	___ftadd@sign,f
  3697  0688  0834               	movf	___ftadd@sign,w
  3698  0689  3907               	andlw	7
  3699  068A  1903               	btfsc	3,2
  3700  068B  2E97               	goto	l1423
  3701  068C  2E7A               	goto	l1415
  3702  068D                     l1421:	
  3703  068D  3001               	movlw	1
  3704  068E                     u1575:	
  3705  068E  36AF               	lsrf	___ftadd@f2+2,f
  3706  068F  0CAE               	rrf	___ftadd@f2+1,f
  3707  0690  0CAD               	rrf	___ftadd@f2,f
  3708  0691  0B89               	decfsz	9,f
  3709  0692  2E8E               	goto	u1575
  3710  0693  3001               	movlw	1
  3711  0694  00B0               	movwf	??___ftadd
  3712  0695  0830               	movf	??___ftadd,w
  3713  0696  07B5               	addwf	___ftadd@exp2,f
  3714  0697                     l1423:	
  3715  0697  0836               	movf	___ftadd@exp1,w
  3716  0698  0635               	xorwf	___ftadd@exp2,w
  3717  0699  1D03               	skipz
  3718  069A  2E8D               	goto	l1421
  3719  069B                     l459:	
  3720  069B  1FB4               	btfss	___ftadd@sign,7
  3721  069C  2EAD               	goto	l1427
  3722  069D  30FF               	movlw	255
  3723  069E  06AA               	xorwf	___ftadd@f1,f
  3724  069F  30FF               	movlw	255
  3725  06A0  06AB               	xorwf	___ftadd@f1+1,f
  3726  06A1  30FF               	movlw	255
  3727  06A2  06AC               	xorwf	___ftadd@f1+2,f
  3728  06A3  3001               	movlw	1
  3729  06A4  07AA               	addwf	___ftadd@f1,f
  3730  06A5  3000               	movlw	0
  3731  06A6  1803               	skipnc
  3732  06A7  3001               	movlw	1
  3733  06A8  07AB               	addwf	___ftadd@f1+1,f
  3734  06A9  3000               	movlw	0
  3735  06AA  1803               	skipnc
  3736  06AB  3001               	movlw	1
  3737  06AC  07AC               	addwf	___ftadd@f1+2,f
  3738  06AD                     l1427:	
  3739  06AD  1F34               	btfss	___ftadd@sign,6
  3740  06AE  2EBF               	goto	l1431
  3741  06AF  30FF               	movlw	255
  3742  06B0  06AD               	xorwf	___ftadd@f2,f
  3743  06B1  30FF               	movlw	255
  3744  06B2  06AE               	xorwf	___ftadd@f2+1,f
  3745  06B3  30FF               	movlw	255
  3746  06B4  06AF               	xorwf	___ftadd@f2+2,f
  3747  06B5  3001               	movlw	1
  3748  06B6  07AD               	addwf	___ftadd@f2,f
  3749  06B7  3000               	movlw	0
  3750  06B8  1803               	skipnc
  3751  06B9  3001               	movlw	1
  3752  06BA  07AE               	addwf	___ftadd@f2+1,f
  3753  06BB  3000               	movlw	0
  3754  06BC  1803               	skipnc
  3755  06BD  3001               	movlw	1
  3756  06BE  07AF               	addwf	___ftadd@f2+2,f
  3757  06BF                     l1431:	
  3758  06BF  01B4               	clrf	___ftadd@sign
  3759  06C0  082A               	movf	___ftadd@f1,w
  3760  06C1  07AD               	addwf	___ftadd@f2,f
  3761  06C2  082B               	movf	___ftadd@f1+1,w
  3762  06C3  3DAE               	addwfc	___ftadd@f2+1,f
  3763  06C4  082C               	movf	___ftadd@f1+2,w
  3764  06C5  3DAF               	addwfc	___ftadd@f2+2,f
  3765  06C6  1FAF               	btfss	___ftadd@f2+2,7
  3766  06C7  2EDA               	goto	l1441
  3767  06C8  30FF               	movlw	255
  3768  06C9  06AD               	xorwf	___ftadd@f2,f
  3769  06CA  30FF               	movlw	255
  3770  06CB  06AE               	xorwf	___ftadd@f2+1,f
  3771  06CC  30FF               	movlw	255
  3772  06CD  06AF               	xorwf	___ftadd@f2+2,f
  3773  06CE  3001               	movlw	1
  3774  06CF  07AD               	addwf	___ftadd@f2,f
  3775  06D0  3000               	movlw	0
  3776  06D1  1803               	skipnc
  3777  06D2  3001               	movlw	1
  3778  06D3  07AE               	addwf	___ftadd@f2+1,f
  3779  06D4  3000               	movlw	0
  3780  06D5  1803               	skipnc
  3781  06D6  3001               	movlw	1
  3782  06D7  07AF               	addwf	___ftadd@f2+2,f
  3783  06D8  01B4               	clrf	___ftadd@sign
  3784  06D9  0AB4               	incf	___ftadd@sign,f
  3785  06DA                     l1441:	
  3786  06DA  082D               	movf	___ftadd@f2,w
  3787  06DB  00F0               	movwf	___ftpack@arg
  3788  06DC  082E               	movf	___ftadd@f2+1,w
  3789  06DD  00F1               	movwf	___ftpack@arg+1
  3790  06DE  082F               	movf	___ftadd@f2+2,w
  3791  06DF  00F2               	movwf	___ftpack@arg+2
  3792  06E0  0836               	movf	___ftadd@exp1,w
  3793  06E1  00B0               	movwf	??___ftadd
  3794  06E2  0830               	movf	??___ftadd,w
  3795  06E3  00F3               	movwf	___ftpack@exp
  3796  06E4  0834               	movf	___ftadd@sign,w
  3797  06E5  00B1               	movwf	??___ftadd+1
  3798  06E6  0831               	movf	??___ftadd+1,w
  3799  06E7  00F4               	movwf	___ftpack@sign
  3800  06E8  3183  2361         	fcall	___ftpack
  3801  06EA  0870               	movf	?___ftpack,w
  3802  06EB  0020               	movlb	0	; select bank0
  3803  06EC  00AA               	movwf	?___ftadd
  3804  06ED  0871               	movf	?___ftpack+1,w
  3805  06EE  00AB               	movwf	?___ftadd+1
  3806  06EF  0872               	movf	?___ftpack+2,w
  3807  06F0  00AC               	movwf	?___ftadd+2
  3808  06F1  0008               	return
  3809  06F2                     __end_of___ftadd:	
  3810                           
  3811                           	psect	text25
  3812  01FB                     __ptext25:	
  3813 ;; *************** function ___awtoft *****************
  3814 ;; Defined at:
  3815 ;;		line 32 in file "/opt/mmplabv310/xc8/sources/common/awtoft.c"
  3816 ;; Parameters:    Size  Location     Type
  3817 ;;  c               2    8[COMMON] int 
  3818 ;; Auto vars:     Size  Location     Type
  3819 ;;  sign            1   13[COMMON] unsigned char 
  3820 ;; Return value:  Size  Location     Type
  3821 ;;                  3    8[COMMON] float 
  3822 ;; Registers used:
  3823 ;;		wreg, status,2, status,0, pclath, cstack
  3824 ;; Tracked objects:
  3825 ;;		On entry : 0/0
  3826 ;;		On exit  : 0/0
  3827 ;;		Unchanged: 0/0
  3828 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3829 ;;      Params:         3       0       0       0
  3830 ;;      Locals:         1       0       0       0
  3831 ;;      Temps:          2       0       0       0
  3832 ;;      Totals:         6       0       0       0
  3833 ;;Total ram usage:        6 bytes
  3834 ;; Hardware stack levels used:    1
  3835 ;; Hardware stack levels required when called:    1
  3836 ;; This function calls:
  3837 ;;		___ftpack
  3838 ;; This function is called by:
  3839 ;;		_CalcTemp
  3840 ;;		_CalcHumid
  3841 ;; This function uses a non-reentrant model
  3842 ;;
  3843                           
  3844                           
  3845                           ;psect for function ___awtoft
  3846  01FB                     ___awtoft:	
  3847                           
  3848                           ;incstack = 0
  3849                           ; Regs used in ___awtoft: [wreg+status,2+status,0+pclath+cstack]
  3850  01FB  01FD               	clrf	___awtoft@sign
  3851  01FC  1FF9               	btfss	___awtoft@c+1,7
  3852  01FD  2A05               	goto	l1371
  3853  01FE  09F8               	comf	___awtoft@c,f
  3854  01FF  09F9               	comf	___awtoft@c+1,f
  3855  0200  0AF8               	incf	___awtoft@c,f
  3856  0201  1903               	skipnz
  3857  0202  0AF9               	incf	___awtoft@c+1,f
  3858  0203  01FD               	clrf	___awtoft@sign
  3859  0204  0AFD               	incf	___awtoft@sign,f
  3860  0205                     l1371:	
  3861  0205  0878               	movf	___awtoft@c,w
  3862  0206  00F0               	movwf	___ftpack@arg
  3863  0207  0879               	movf	___awtoft@c+1,w
  3864  0208  00F1               	movwf	___ftpack@arg+1
  3865  0209  01F2               	clrf	___ftpack@arg+2
  3866  020A  308E               	movlw	142
  3867  020B  00FB               	movwf	??___awtoft
  3868  020C  087B               	movf	??___awtoft,w
  3869  020D  00F3               	movwf	___ftpack@exp
  3870  020E  087D               	movf	___awtoft@sign,w
  3871  020F  00FC               	movwf	??___awtoft+1
  3872  0210  087C               	movf	??___awtoft+1,w
  3873  0211  00F4               	movwf	___ftpack@sign
  3874  0212  3183  2361         	fcall	___ftpack
  3875  0214  0870               	movf	?___ftpack,w
  3876  0215  00F8               	movwf	?___awtoft
  3877  0216  0871               	movf	?___ftpack+1,w
  3878  0217  00F9               	movwf	?___awtoft+1
  3879  0218  0872               	movf	?___ftpack+2,w
  3880  0219  00FA               	movwf	?___awtoft+2
  3881  021A  0008               	return
  3882  021B                     __end_of___awtoft:	
  3883                           
  3884                           	psect	text26
  3885  0361                     __ptext26:	
  3886 ;; *************** function ___ftpack *****************
  3887 ;; Defined at:
  3888 ;;		line 62 in file "/opt/mmplabv310/xc8/sources/common/float.c"
  3889 ;; Parameters:    Size  Location     Type
  3890 ;;  arg             3    0[COMMON] unsigned um
  3891 ;;  exp             1    3[COMMON] unsigned char 
  3892 ;;  sign            1    4[COMMON] unsigned char 
  3893 ;; Auto vars:     Size  Location     Type
  3894 ;;		None
  3895 ;; Return value:  Size  Location     Type
  3896 ;;                  3    0[COMMON] float 
  3897 ;; Registers used:
  3898 ;;		wreg, status,2, status,0
  3899 ;; Tracked objects:
  3900 ;;		On entry : 0/0
  3901 ;;		On exit  : 0/0
  3902 ;;		Unchanged: 0/0
  3903 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3904 ;;      Params:         5       0       0       0
  3905 ;;      Locals:         0       0       0       0
  3906 ;;      Temps:          3       0       0       0
  3907 ;;      Totals:         8       0       0       0
  3908 ;;Total ram usage:        8 bytes
  3909 ;; Hardware stack levels used:    1
  3910 ;; This function calls:
  3911 ;;		Nothing
  3912 ;; This function is called by:
  3913 ;;		___awtoft
  3914 ;;		___ftadd
  3915 ;;		___ftmul
  3916 ;; This function uses a non-reentrant model
  3917 ;;
  3918                           
  3919                           
  3920                           ;psect for function ___ftpack
  3921  0361                     ___ftpack:	
  3922                           
  3923                           ;incstack = 0
  3924                           ; Regs used in ___ftpack: [wreg+status,2+status,0]
  3925  0361  0873               	movf	___ftpack@exp,w
  3926  0362  1903               	btfsc	3,2
  3927  0363  2B69               	goto	l1233
  3928  0364  0872               	movf	___ftpack@arg+2,w
  3929  0365  0471               	iorwf	___ftpack@arg+1,w
  3930  0366  0470               	iorwf	___ftpack@arg,w
  3931  0367  1D03               	skipz
  3932  0368  2B7A               	goto	l1239
  3933  0369                     l1233:	
  3934  0369  3000               	movlw	0
  3935  036A  00F0               	movwf	?___ftpack
  3936  036B  3000               	movlw	0
  3937  036C  00F1               	movwf	?___ftpack+1
  3938  036D  3000               	movlw	0
  3939  036E  00F2               	movwf	?___ftpack+2
  3940  036F  0008               	return
  3941  0370                     l1237:	
  3942  0370  3001               	movlw	1
  3943  0371  00F5               	movwf	??___ftpack
  3944  0372  0875               	movf	??___ftpack,w
  3945  0373  07F3               	addwf	___ftpack@exp,f
  3946  0374  3001               	movlw	1
  3947  0375                     u1045:	
  3948  0375  36F2               	lsrf	___ftpack@arg+2,f
  3949  0376  0CF1               	rrf	___ftpack@arg+1,f
  3950  0377  0CF0               	rrf	___ftpack@arg,f
  3951  0378  0B89               	decfsz	9,f
  3952  0379  2B75               	goto	u1045
  3953  037A                     l1239:	
  3954  037A  30FE               	movlw	254
  3955  037B  0572               	andwf	___ftpack@arg+2,w
  3956  037C  1903               	btfsc	3,2
  3957  037D  2B93               	goto	l428
  3958  037E  2B70               	goto	l1237
  3959  037F                     l1241:	
  3960  037F  3001               	movlw	1
  3961  0380  00F5               	movwf	??___ftpack
  3962  0381  0875               	movf	??___ftpack,w
  3963  0382  07F3               	addwf	___ftpack@exp,f
  3964  0383  3001               	movlw	1
  3965  0384  07F0               	addwf	___ftpack@arg,f
  3966  0385  3000               	movlw	0
  3967  0386  1803               	skipnc
  3968  0387  3001               	movlw	1
  3969  0388  07F1               	addwf	___ftpack@arg+1,f
  3970  0389  3000               	movlw	0
  3971  038A  1803               	skipnc
  3972  038B  3001               	movlw	1
  3973  038C  07F2               	addwf	___ftpack@arg+2,f
  3974  038D  3001               	movlw	1
  3975  038E                     u1065:	
  3976  038E  36F2               	lsrf	___ftpack@arg+2,f
  3977  038F  0CF1               	rrf	___ftpack@arg+1,f
  3978  0390  0CF0               	rrf	___ftpack@arg,f
  3979  0391  0B89               	decfsz	9,f
  3980  0392  2B8E               	goto	u1065
  3981  0393                     l428:	
  3982  0393  30FF               	movlw	255
  3983  0394  0572               	andwf	___ftpack@arg+2,w
  3984  0395  1903               	btfsc	3,2
  3985  0396  2BA0               	goto	l1249
  3986  0397  2B7F               	goto	l1241
  3987  0398                     l1247:	
  3988  0398  3001               	movlw	1
  3989  0399  02F3               	subwf	___ftpack@exp,f
  3990  039A  3001               	movlw	1
  3991  039B                     u1085:	
  3992  039B  35F0               	lslf	___ftpack@arg,f
  3993  039C  0DF1               	rlf	___ftpack@arg+1,f
  3994  039D  0DF2               	rlf	___ftpack@arg+2,f
  3995  039E  0B89               	decfsz	9,f
  3996  039F  2B9B               	goto	u1085
  3997  03A0                     l1249:	
  3998  03A0  1BF1               	btfsc	___ftpack@arg+1,7
  3999  03A1  2BA6               	goto	l435
  4000  03A2  3002               	movlw	2
  4001  03A3  0273               	subwf	___ftpack@exp,w
  4002  03A4  1803               	skipnc
  4003  03A5  2B98               	goto	l1247
  4004  03A6                     l435:	
  4005  03A6  1873               	btfsc	___ftpack@exp,0
  4006  03A7  2BAE               	goto	l436
  4007  03A8  30FF               	movlw	255
  4008  03A9  05F0               	andwf	___ftpack@arg,f
  4009  03AA  307F               	movlw	127
  4010  03AB  05F1               	andwf	___ftpack@arg+1,f
  4011  03AC  30FF               	movlw	255
  4012  03AD  05F2               	andwf	___ftpack@arg+2,f
  4013  03AE                     l436:	
  4014  03AE  1003               	clrc
  4015  03AF  0CF3               	rrf	___ftpack@exp,f
  4016  03B0  0873               	movf	___ftpack@exp,w
  4017  03B1  00F5               	movwf	??___ftpack
  4018  03B2  01F6               	clrf	??___ftpack+1
  4019  03B3  01F7               	clrf	??___ftpack+2
  4020  03B4  3010               	movlw	16
  4021  03B5                     u1125:	
  4022  03B5  35F5               	lslf	??___ftpack,f
  4023  03B6  0DF6               	rlf	??___ftpack+1,f
  4024  03B7  0DF7               	rlf	??___ftpack+2,f
  4025  03B8  0B89               	decfsz	9,f
  4026  03B9  2BB5               	goto	u1125
  4027  03BA  0875               	movf	??___ftpack,w
  4028  03BB  04F0               	iorwf	___ftpack@arg,f
  4029  03BC  0876               	movf	??___ftpack+1,w
  4030  03BD  04F1               	iorwf	___ftpack@arg+1,f
  4031  03BE  0877               	movf	??___ftpack+2,w
  4032  03BF  04F2               	iorwf	___ftpack@arg+2,f
  4033  03C0  0874               	movf	___ftpack@sign,w
  4034  03C1  1903               	btfsc	3,2
  4035  03C2  0008               	return
  4036  03C3  17F2               	bsf	___ftpack@arg+2,7
  4037  03C4  0008               	return
  4038  03C5                     __end_of___ftpack:	
  4039  007E                     btemp	set	126	;btemp
  4040  007E                     wtemp	set	126
  4041  007E                     wtemp0	set	126
  4042  0080                     wtemp1	set	128
  4043  0082                     wtemp2	set	130
  4044  0084                     wtemp3	set	132
  4045  0086                     wtemp4	set	134
  4046  0088                     wtemp5	set	136
  4047  007F                     wtemp6	set	127
  4048  007E                     ttemp	set	126
  4049  007E                     ttemp0	set	126
  4050  0081                     ttemp1	set	129
  4051  0084                     ttemp2	set	132
  4052  0087                     ttemp3	set	135
  4053  007F                     ttemp4	set	127
  4054  007E                     ltemp	set	126
  4055  007E                     ltemp0	set	126
  4056  0082                     ltemp1	set	130
  4057  0086                     ltemp2	set	134
  4058  0080                     ltemp3	set	128


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         10
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     57      67
    BANK1            80      0       0
    BANK2            80      0       0

Pointer List with Targets:

    utoa@buf	PTR unsigned char  size(1) Largest target is 8
		 -> main@buf(BANK0[8]), 

    sp__utoa	PTR unsigned char  size(1) Largest target is 8
		 -> main@buf(BANK0[8]), 

    itoa@buf	PTR unsigned char  size(1) Largest target is 8
		 -> main@buf(BANK0[8]), 

    itoa@cp	PTR unsigned char  size(1) Largest target is 8
		 -> main@buf(BANK0[8]), 

    sp__itoa	PTR unsigned char  size(1) Largest target is 8
		 -> main@buf(BANK0[8]), 

    UART_String@letters	PTR unsigned char  size(1) Largest target is 8
		 -> main@buf(BANK0[8]), 


Critical Paths under _main in COMMON

    _main->_itoa
    _itoa->_utoa
    _utoa->___lwdiv
    _UART_String->_uart_xmit
    _I2C_restart->_I2C_check_idle
    _CalcTemp->___awtoft
    _CalcTemp->___ftmul
    _CalcTemp->___fttol
    _CalcHumid->___awtoft
    _CalcHumid->___ftmul
    _CalcHumid->___fttol
    ___ftmul->___ftpack
    ___ftadd->___ftmul
    ___awtoft->___ftpack

Critical Paths under _main in BANK0

    _main->_CalcHumid
    _itoa->_utoa
    _CalcTemp->___ftmul
    _CalcHumid->___ftadd
    ___ftadd->___ftmul

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                22    22      0   15638
                                             37 BANK0     20    20      0
                          _CalcHumid
                           _CalcTemp
                         _GetReading
                        _UART_String
                            _init_io
                               _itoa
                        _serial_init
                          _uart_xmit
 ---------------------------------------------------------------------------------
 (1) _serial_init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _itoa                                                 7     3      4    1636
                                             13 COMMON     1     1      0
                                              4 BANK0      6     2      4
                               _utoa
 ---------------------------------------------------------------------------------
 (2) _utoa                                                 9     5      4    1074
                                              8 COMMON     5     1      4
                                              0 BANK0      4     4      0
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              6     2      4     265
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              8     4      4     374
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (1) _init_io                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _UART_String                                          6     6      0     776
                                              2 COMMON     6     6      0
                          _uart_xmit
 ---------------------------------------------------------------------------------
 (1) _uart_xmit                                            2     0      2     605
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (1) _GetReading                                          25    18      7     338
                                              3 COMMON     7     0      7
                                              0 BANK0     18    18      0
                            _I2C_ACK
                   _I2C_Control_Read
                  _I2C_Control_Write
                            _I2C_NAK
                      _I2C_Start_Bit
                       _I2C_Stop_Bit
                        _I2C_restart
                        _RX_I2C_Data
                      _Send_I2C_Data
 ---------------------------------------------------------------------------------
 (2) _Send_I2C_Data                                        2     0      2     128
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (2) _RX_I2C_Data                                          2     2      0      23
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) _I2C_restart                                          0     0      0      46
                     _I2C_check_idle
 ---------------------------------------------------------------------------------
 (3) _I2C_check_idle                                       3     3      0      46
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (2) _I2C_Stop_Bit                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C_Start_Bit                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C_NAK                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C_Control_Write                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C_Control_Read                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C_ACK                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _CalcTemp                                            14    12      2    4678
                                             10 BANK0     14    12      2
                           ___awtoft
                            ___ftmul
                            ___fttol
 ---------------------------------------------------------------------------------
 (1) _CalcHumid                                           14    12      2    7395
                                             23 BANK0     14    12      2
                           ___awtoft
                            ___ftadd
                            ___ftmul
                            ___fttol
 ---------------------------------------------------------------------------------
 (2) ___fttol                                             14    10      4     358
                                              0 COMMON    14    10      4
 ---------------------------------------------------------------------------------
 (2) ___ftmul                                             16    10      6    2312
                                              8 COMMON     6     0      6
                                              0 BANK0     10    10      0
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___ftadd                                             13     7      6    2694
                                             10 BANK0     13     7      6
                            ___ftmul (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___awtoft                                             6     3      3    1865
                                              8 COMMON     6     3      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (3) ___ftpack                                             8     3      5    1668
                                              0 COMMON     8     3      5
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _CalcHumid
     ___awtoft
       ___ftpack
     ___ftadd
       ___ftmul (ARG)
         ___ftpack
       ___ftpack (ARG)
     ___ftmul
       ___ftpack
     ___fttol
   _CalcTemp
     ___awtoft
       ___ftpack
     ___ftmul
       ___ftpack
     ___fttol
   _GetReading
     _I2C_ACK
     _I2C_Control_Read
     _I2C_Control_Write
     _I2C_NAK
     _I2C_Start_Bit
     _I2C_Stop_Bit
     _I2C_restart
       _I2C_check_idle
     _RX_I2C_Data
     _Send_I2C_Data
   _UART_String
     _uart_xmit
   _init_io
   _itoa
     _utoa
       ___lwdiv
       ___lwmod
   _serial_init
   _uart_xmit

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM              F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      51       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50     39      43       6       83.8%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
DATA                 0      0      51      11        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.35 build -356382666 
Symbol Table                                                                                   Fri Nov 20 00:54:53 2015

                         _i 005B                 __CFG_CP$OFF 0000                 _SSPSTATbits 0214  
                        _BF 10A0                          l84 0148                          l93 015B  
                        l99 0164                ___ftadd@exp1 0036                ___ftadd@exp2 0035  
               __CFG_LVP$ON 0000                ___ftadd@sign 0034                         l105 016A  
                       l122 01AC                         l116 01BC                         l132 01BE  
                       l108 016C                         l128 019C                         l137 0153  
                       l171 070C                         l435 03A6                         l436 03AE  
                       l428 0393                         l534 034B                         l519 0496  
                       l459 069B                         _PEN 10B2             __end_of_I2C_ACK 015F  
           __end_of_I2C_NAK 018F                         _tb1 005F                         _tb2 0060  
              __CFG_BORV$LO 0000                         wreg 0009                __CFG_IESO$ON 0000  
               _RX_I2C_Data 0168                        l1301 027E                        l1241 037F  
                      l1233 0369                        l1305 0287                        l1411 0671  
                      l1403 0654                        l1331 01B3                        l1237 0370  
                      l1421 068D                        l1413 0676                        l1501 0442  
                      l1247 0398                        l1239 037A                        l1431 06BF  
                      l1423 0697                        l1415 067A                        l1271 0294  
                      l1249 03A0                        l1441 06DA                        l1409 0667  
                      l1521 0480                        l1361 0186                        l1345 0193  
                      l1273 02A0                        l1371 0205                        l1427 06AD  
                      l1451 0560                        l1339 01A3                        l1355 0178  
                      l1283 02BB                        l1381 0624                        l1533 04A7  
                      l1391 063A                        l1527 048D                        l1519 0472  
                      l1279 02B2                        l1295 0266                        l1385 062B  
                      l1481 05CD                        l1473 05B9                        l1457 0576  
                      l1529 0499                        l1297 0272                        l1539 0305  
                      l1485 05D5                        l1469 05B1                        l1549 0323  
                      l1639 04BB                        l1681 021E                        l1693 0254  
                      u1125 03B5                        u1045 0375                        u1065 038E  
                      u1225 0269                        u1155 0297                        u1085 039B  
                      u1245 0278                        u1175 02A1                        u1255 027F  
                      u1185 02AB                        u1515 0668                        u1195 02B3  
                      u1545 067B                        u1715 05D6                        u1485 0655  
                      u1725 05DC                        u1645 0582                        u1910 0758  
                      u1575 068E                        u1655 0592                        u1815 048E  
                      u1675 05BA                        u1755 0449                        u1685 05C0  
                      u1927 0711                        u1880 0544                        u1785 0473  
                      u1937 0745                        u1947 076F                        u1957 077F  
                      u1967 04D1                        _RCEN 10B3                        _RSEN 10B1  
         ?_I2C_Control_Read 0070                __CFG_WRT$OFF 0000               __CFG_FCMEN$ON 0000  
                      _main 06F2                ___ftpack@arg 0070                        _kirk 005D  
                      _itoa 023C                ___ftpack@exp 0073                        fsr0h 0005  
                      fsr1h 0007                        fsr0l 0004                        indf1 0001  
                      fsr1l 0006                        btemp 007E                        _utoa 02FF  
        ??_I2C_Control_Read 0070               __CFG_BOREN$ON 0000                        ltemp 007E  
                      start 0002                        ttemp 007E                        wtemp 007E  
             __CFG_MCLRE$ON 0000                ___ftmul@cntr 0028                ___ftmul@sign 0029  
      __size_of_I2C_restart 0008               __CFG_LPBOR$ON 0000                  _GetReading 04B0  
              ___fttol@exp1 007D                ___fttol@lval 0079       __size_of_I2C_Stop_Bit 000D  
                     ?_main 0070                       _ACKEN 10B4                       _ACKDT 10B5  
                     ?_itoa 0024             __end_of___ftadd 06F2               __CFG_WDTE$OFF 0000  
                     ?_utoa 0078             __end_of___ftmul 05FC             __end_of___fttol 04B0  
           __end_of___lwdiv 02C0             __end_of___lwmod 028C           _I2C_Control_Write 01AE  
                     _TRISA 008C                       _TRISB 008D                       _TXREG 019A  
              main@received 0052          ?_I2C_Control_Write 0070               ___awtoft@sign 007D  
                     _kirk2 005E             __end_of_init_io 01FB               ___ftpack@sign 0074  
                     ltemp0 007E                       ltemp1 0082                       ltemp2 0086  
                     ltemp3 0080            __end_of_CalcTemp 02FF         ??_I2C_Control_Write 0070  
                     ttemp0 007E                       ttemp1 0081                       ttemp2 0084  
                     ttemp3 0087                       ttemp4 007F                       utoa@c 0022  
                     utoa@v 0020                       status 0003                       wtemp0 007E  
                     wtemp1 0080                       wtemp2 0082                       wtemp3 0084  
                     wtemp4 0086                       wtemp5 0088                       wtemp6 007F  
        __size_of_CalcHumid 0065                _I2C_Stop_Bit 0174             __initialization 07F3  
              __end_of_main 07F3                __end_of_itoa 0260                __end_of_utoa 0361  
                 ??_I2C_ACK 0070                   ??_I2C_NAK 0070            CalcHumid@rcv_val 003E  
 __end_of_I2C_Control_Write 01BE                      ??_main 0045               ___fttol@sign1 0078  
                    ??_itoa 007D      __size_of_I2C_Start_Bit 000F                      ??_utoa 007C  
          __end_of___awtoft 021B                      _ANSELA 018C                      _ANSELB 018D  
                    _ANSELC 018E            __end_of___ftpack 03C5                      _SPBRGH 019C  
                    _SPBRGL 019B                      _SSPADD 0212                      _SSPCON 0215  
                    _SSPBUF 0211              __CFG_PWRTE$OFF 0000                ?_UART_String 0070  
              ?_serial_init 0070      __size_of_Send_I2C_Data 0009                   ??___ftadd 0030  
            __CFG_STVREN$ON 0000                 ?_GetReading 0073                   ??___ftmul 0020  
                 ??___fttol 0074                   ??___lwdiv 0074             CalcTemp@rcv_val 0031  
                 ??___lwmod 0074                      main@ct 0050       ___ftmul@f3_as_product 0025  
                    itoa@cp 0028                   ??_init_io 0070           __end_of_CalcHumid 042A  
     Send_I2C_Data@databyte 0070     __end_of__initialization 07FD               _I2C_Start_Bit 018F  
                ___ftadd@f1 002A                  ___ftadd@f2 002D                CalcHumid@ans 0042  
                ___awtoft@c 0078                  ___ftmul@f1 0078                  ___ftmul@f2 007B  
                ___fttol@f1 0070              __pcstackCOMMON 0070  __size_of_I2C_Control_Write 0010  
                 ?_CalcTemp 002A              _OPTION_REGbits 0095               _Send_I2C_Data 015F  
              ?_RX_I2C_Data 0070                  __pbssBANK0 0059         __size_of_GetReading 0099  
            ?_I2C_Start_Bit 0070                  __pmaintext 06F2                     _I2C_ACK 0156  
 __size_of_I2C_Control_Read 0010                     _I2C_NAK 0181                   ?___awtoft 0078  
                 ?___ftpack 0070                     _ACK_bit 0059                  ??_CalcTemp 002C  
        __size_of_uart_xmit 0006              ?_Send_I2C_Data 0070                     _SSP1ADD 0212  
                   _SSP1BUF 0211                     _SSPCON2 0216                     _SSPSTAT 0214  
   __size_of_I2C_check_idle 0010               ??_I2C_restart 0073             RX_I2C_Data@byte 0071  
                   ___ftadd 05FC                     ___ftmul 0549                     ___fttol 042A  
      __size_of_UART_String 0021                     ___lwdiv 028C                     ___lwmod 0260  
      __size_of_serial_init 0011                  ??___awtoft 007B                  ??___ftpack 0075  
                   __ptext1 01CE                     __ptext2 023C                     __ptext3 02FF  
                   __ptext4 0260                     __ptext5 028C                     __ptext6 01DF  
                   __ptext7 021B                     __ptext8 0148                     __ptext9 04B0  
                   _init_io 01DF                     main@buf 0048             ??_I2C_Start_Bit 0070  
      end_of_initialization 07FD                     itoa@buf 0029                     itoa@val 0024  
         __end_of_uart_xmit 014E                   _RCSTAbits 019D                ??_GetReading 0020  
       __end_of_I2C_restart 0156                     utoa@buf 0023                     utoa@val 0078  
           ??_Send_I2C_Data 0072            __CFG_FOSC$INTOSC 0000                   _TRISAbits 008C  
                 _TRISBbits 008D                   _TRISCbits 008E                   _CalcHumid 03C5  
      uart_xmit@mydata_byte 0070          __end_of_GetReading 0549        __size_of_RX_I2C_Data 000C  
                 _TXSTAbits 019E                 ___ftmul@exp 0024            _I2C_Control_Read 019E  
       start_initialization 07F3           __size_of_CalcTemp 003F                  ?_CalcHumid 0037  
            _I2C_check_idle 01BE         I2C_check_idle@byte1 0071         I2C_check_idle@byte2 0072  
               _I2C_restart 014E                    ?_I2C_ACK 0070                    ?_I2C_NAK 0070  
         __size_of___awtoft 0020           __size_of___ftpack 0064                 CalcHumid@b1 0041  
               CalcHumid@b2 0037                   ___latbits 0001               __pcstackBANK0 0020  
               CalcTemp@ans 0034      __end_of_I2C_check_idle 01CE               ?_I2C_Stop_Bit 0070  
          ___lwdiv@dividend 0072                    ?___ftadd 002A                    ?___ftmul 0078  
                  ?___fttol 0070                    ?___lwdiv 0070                    ?___lwmod 0070  
                  ?_init_io 0070            ___lwdiv@quotient 0075                 ??_CalcHumid 0039  
           ?_I2C_check_idle 0070          UART_String@letters 0077                    _LATCbits 010E  
            ??_I2C_Stop_Bit 0070                    _PIE1bits 0091               ??_UART_String 0072  
                  _PIR1bits 0011                GetReading@hh 0029                GetReading@hl 002A  
              GetReading@th 0027                GetReading@tl 0028               ??_serial_init 0070  
                 _tempbyte1 0061                   _tempbyte2 0062                   _uart_xmit 0148  
                  _SSP1STAT 0214            __size_of_I2C_ACK 0009            __size_of_I2C_NAK 000E  
                  _CalcTemp 02C0    __end_of_I2C_Control_Read 01AE       __end_of_I2C_Start_Bit 019E  
                ?_uart_xmit 0070            __size_of___ftadd 00F6            __size_of___ftmul 00B3  
          __size_of___fttol 0086            __size_of___lwdiv 0034            __size_of___lwmod 002C  
                  ___awtoft 01FB                    ___ftpack 0361         __end_of_UART_String 023C  
                CalcTemp@b1 0037                  CalcTemp@b2 002A         __end_of_serial_init 01DF  
          __size_of_init_io 001C             ___lwdiv@divisor 0070       __end_of_Send_I2C_Data 0168  
           ___lwdiv@counter 0077                    __ptext10 015F                    __ptext11 0168  
                  __ptext20 02C0                    __ptext12 014E                    __ptext21 03C5  
                  __ptext13 01BE                    __ptext22 042A                    __ptext14 0174  
                  __ptext23 0549                    __ptext15 018F                    __ptext24 05FC  
                  __ptext16 0181                    __ptext25 01FB                    __ptext17 01AE  
                  __ptext26 0361                    __ptext18 019E                    __ptext19 0156  
             ??_RX_I2C_Data 0070                _SSP1CON2bits 0216               __size_of_main 0101  
             __size_of_itoa 0024               __size_of_utoa 0062                ?_I2C_restart 0070  
           GetReading@local 002B                UART_String@i 0075                _SSP1STATbits 0214  
                _INTCONbits 000B        __end_of_I2C_Stop_Bit 0181                    itoa@base 0026  
          ___lwmod@dividend 0072           __CFG_CLKOUTEN$OFF 0000         __end_of_RX_I2C_Data 0174  
            GetReading@crc1 0025              GetReading@crc2 0026                  _OSCCONbits 0099  
               _UART_String 021B                 _serial_init 01CE                 ??_uart_xmit 0072  
                  utoa@base 007A             ___lwmod@divisor 0070            ??_I2C_check_idle 0070  
           ___lwmod@counter 0075                 _SSPCON2bits 0216                  _SSPCONbits 0215  
