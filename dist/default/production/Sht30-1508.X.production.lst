

Microchip Technology PIC LITE Macro Assembler V1.35 build -356382666 
                                                                                               Thu Nov 19 01:03:00 2015

Microchip Technology Omniscient Code Generator v1.35 (Free mode) build 201507080246
     1                           	processor	16F1508
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2
    10                           	psect	text2,local,class=CODE,merge=1,delta=2
    11                           	psect	text3,local,class=CODE,merge=1,delta=2
    12                           	psect	text4,local,class=CODE,merge=1,delta=2
    13                           	psect	text5,local,class=CODE,merge=1,delta=2
    14                           	psect	text6,local,class=CODE,merge=1,delta=2
    15                           	psect	text7,local,class=CODE,merge=1,delta=2
    16                           	psect	text8,local,class=CODE,merge=1,delta=2
    17                           	psect	text9,local,class=CODE,merge=1,delta=2
    18                           	psect	text10,local,class=CODE,merge=1,delta=2
    19                           	psect	text11,local,class=CODE,merge=1,delta=2
    20                           	psect	text12,local,class=CODE,merge=1,delta=2
    21                           	psect	text13,local,class=CODE,merge=1,delta=2
    22                           	psect	text14,local,class=CODE,merge=1,delta=2
    23                           	psect	text15,local,class=CODE,merge=1,delta=2
    24                           	psect	text16,local,class=CODE,merge=1,delta=2
    25                           	psect	text17,local,class=CODE,merge=1,delta=2
    26                           	psect	text18,local,class=CODE,merge=1,delta=2
    27                           	psect	text19,local,class=CODE,merge=1,delta=2
    28                           	psect	text20,local,class=CODE,merge=1,delta=2
    29                           	psect	text21,local,class=CODE,merge=1,delta=2
    30                           	psect	text22,local,class=CODE,merge=1,delta=2
    31                           	psect	text23,local,class=CODE,merge=1,delta=2
    32                           	psect	text24,local,class=CODE,merge=1,delta=2
    33                           	psect	text25,local,class=CODE,merge=1,delta=2
    34                           	dabs	1,0x7E,2
    35  0000                     	;# 
    36  0001                     	;# 
    37  0002                     	;# 
    38  0003                     	;# 
    39  0004                     	;# 
    40  0005                     	;# 
    41  0006                     	;# 
    42  0007                     	;# 
    43  0008                     	;# 
    44  0009                     	;# 
    45  000A                     	;# 
    46  000B                     	;# 
    47  000C                     	;# 
    48  000D                     	;# 
    49  000E                     	;# 
    50  0011                     	;# 
    51  0012                     	;# 
    52  0013                     	;# 
    53  0015                     	;# 
    54  0016                     	;# 
    55  0016                     	;# 
    56  0017                     	;# 
    57  0018                     	;# 
    58  0019                     	;# 
    59  001A                     	;# 
    60  001B                     	;# 
    61  001C                     	;# 
    62  008C                     	;# 
    63  008D                     	;# 
    64  008E                     	;# 
    65  0091                     	;# 
    66  0092                     	;# 
    67  0093                     	;# 
    68  0095                     	;# 
    69  0096                     	;# 
    70  0097                     	;# 
    71  0099                     	;# 
    72  009A                     	;# 
    73  009B                     	;# 
    74  009B                     	;# 
    75  009C                     	;# 
    76  009D                     	;# 
    77  009E                     	;# 
    78  009F                     	;# 
    79  010C                     	;# 
    80  010D                     	;# 
    81  010E                     	;# 
    82  0111                     	;# 
    83  0112                     	;# 
    84  0113                     	;# 
    85  0114                     	;# 
    86  0115                     	;# 
    87  0116                     	;# 
    88  0117                     	;# 
    89  0118                     	;# 
    90  0119                     	;# 
    91  011D                     	;# 
    92  018C                     	;# 
    93  018D                     	;# 
    94  018E                     	;# 
    95  0191                     	;# 
    96  0191                     	;# 
    97  0192                     	;# 
    98  0193                     	;# 
    99  0193                     	;# 
   100  0194                     	;# 
   101  0195                     	;# 
   102  0196                     	;# 
   103  0197                     	;# 
   104  0199                     	;# 
   105  019A                     	;# 
   106  019B                     	;# 
   107  019B                     	;# 
   108  019C                     	;# 
   109  019D                     	;# 
   110  019E                     	;# 
   111  019F                     	;# 
   112  020C                     	;# 
   113  020D                     	;# 
   114  0211                     	;# 
   115  0211                     	;# 
   116  0212                     	;# 
   117  0212                     	;# 
   118  0213                     	;# 
   119  0213                     	;# 
   120  0214                     	;# 
   121  0214                     	;# 
   122  0215                     	;# 
   123  0215                     	;# 
   124  0215                     	;# 
   125  0216                     	;# 
   126  0216                     	;# 
   127  0217                     	;# 
   128  0217                     	;# 
   129  0391                     	;# 
   130  0392                     	;# 
   131  0393                     	;# 
   132  0394                     	;# 
   133  0395                     	;# 
   134  0396                     	;# 
   135  0498                     	;# 
   136  0498                     	;# 
   137  0499                     	;# 
   138  049A                     	;# 
   139  049B                     	;# 
   140  049B                     	;# 
   141  049C                     	;# 
   142  049D                     	;# 
   143  049E                     	;# 
   144  049F                     	;# 
   145  0611                     	;# 
   146  0612                     	;# 
   147  0613                     	;# 
   148  0613                     	;# 
   149  0614                     	;# 
   150  0615                     	;# 
   151  0616                     	;# 
   152  0616                     	;# 
   153  0617                     	;# 
   154  0618                     	;# 
   155  0619                     	;# 
   156  0619                     	;# 
   157  061A                     	;# 
   158  061B                     	;# 
   159  061C                     	;# 
   160  061C                     	;# 
   161  0691                     	;# 
   162  0692                     	;# 
   163  0693                     	;# 
   164  0694                     	;# 
   165  0695                     	;# 
   166  0F0F                     	;# 
   167  0F10                     	;# 
   168  0F11                     	;# 
   169  0F12                     	;# 
   170  0F13                     	;# 
   171  0F14                     	;# 
   172  0F15                     	;# 
   173  0F16                     	;# 
   174  0F17                     	;# 
   175  0F18                     	;# 
   176  0F19                     	;# 
   177  0F1A                     	;# 
   178  0F1B                     	;# 
   179  0F1C                     	;# 
   180  0F1D                     	;# 
   181  0F1E                     	;# 
   182  0F1F                     	;# 
   183  0F20                     	;# 
   184  0F21                     	;# 
   185  0F22                     	;# 
   186  0F23                     	;# 
   187  0F24                     	;# 
   188  0F25                     	;# 
   189  0F26                     	;# 
   190  0F27                     	;# 
   191  0F28                     	;# 
   192  0F29                     	;# 
   193  0F2A                     	;# 
   194  0F2B                     	;# 
   195  0F2C                     	;# 
   196  0F2D                     	;# 
   197  0F2E                     	;# 
   198  0F2F                     	;# 
   199  0F8C                     	;# 
   200  0F8D                     	;# 
   201  0F91                     	;# 
   202  0F95                     	;# 
   203  0F96                     	;# 
   204  0F97                     	;# 
   205  0F9C                     	;# 
   206  0F9D                     	;# 
   207  0F9E                     	;# 
   208  0FE3                     	;# 
   209  0FE4                     	;# 
   210  0FE5                     	;# 
   211  0FE6                     	;# 
   212  0FE7                     	;# 
   213  0FE8                     	;# 
   214  0FE9                     	;# 
   215  0FEA                     	;# 
   216  0FEB                     	;# 
   217  0FED                     	;# 
   218  0FEE                     	;# 
   219  0FEF                     	;# 
   220  0000                     	;# 
   221  0001                     	;# 
   222  0002                     	;# 
   223  0003                     	;# 
   224  0004                     	;# 
   225  0005                     	;# 
   226  0006                     	;# 
   227  0007                     	;# 
   228  0008                     	;# 
   229  0009                     	;# 
   230  000A                     	;# 
   231  000B                     	;# 
   232  000C                     	;# 
   233  000D                     	;# 
   234  000E                     	;# 
   235  0011                     	;# 
   236  0012                     	;# 
   237  0013                     	;# 
   238  0015                     	;# 
   239  0016                     	;# 
   240  0016                     	;# 
   241  0017                     	;# 
   242  0018                     	;# 
   243  0019                     	;# 
   244  001A                     	;# 
   245  001B                     	;# 
   246  001C                     	;# 
   247  008C                     	;# 
   248  008D                     	;# 
   249  008E                     	;# 
   250  0091                     	;# 
   251  0092                     	;# 
   252  0093                     	;# 
   253  0095                     	;# 
   254  0096                     	;# 
   255  0097                     	;# 
   256  0099                     	;# 
   257  009A                     	;# 
   258  009B                     	;# 
   259  009B                     	;# 
   260  009C                     	;# 
   261  009D                     	;# 
   262  009E                     	;# 
   263  009F                     	;# 
   264  010C                     	;# 
   265  010D                     	;# 
   266  010E                     	;# 
   267  0111                     	;# 
   268  0112                     	;# 
   269  0113                     	;# 
   270  0114                     	;# 
   271  0115                     	;# 
   272  0116                     	;# 
   273  0117                     	;# 
   274  0118                     	;# 
   275  0119                     	;# 
   276  011D                     	;# 
   277  018C                     	;# 
   278  018D                     	;# 
   279  018E                     	;# 
   280  0191                     	;# 
   281  0191                     	;# 
   282  0192                     	;# 
   283  0193                     	;# 
   284  0193                     	;# 
   285  0194                     	;# 
   286  0195                     	;# 
   287  0196                     	;# 
   288  0197                     	;# 
   289  0199                     	;# 
   290  019A                     	;# 
   291  019B                     	;# 
   292  019B                     	;# 
   293  019C                     	;# 
   294  019D                     	;# 
   295  019E                     	;# 
   296  019F                     	;# 
   297  020C                     	;# 
   298  020D                     	;# 
   299  0211                     	;# 
   300  0211                     	;# 
   301  0212                     	;# 
   302  0212                     	;# 
   303  0213                     	;# 
   304  0213                     	;# 
   305  0214                     	;# 
   306  0214                     	;# 
   307  0215                     	;# 
   308  0215                     	;# 
   309  0215                     	;# 
   310  0216                     	;# 
   311  0216                     	;# 
   312  0217                     	;# 
   313  0217                     	;# 
   314  0391                     	;# 
   315  0392                     	;# 
   316  0393                     	;# 
   317  0394                     	;# 
   318  0395                     	;# 
   319  0396                     	;# 
   320  0498                     	;# 
   321  0498                     	;# 
   322  0499                     	;# 
   323  049A                     	;# 
   324  049B                     	;# 
   325  049B                     	;# 
   326  049C                     	;# 
   327  049D                     	;# 
   328  049E                     	;# 
   329  049F                     	;# 
   330  0611                     	;# 
   331  0612                     	;# 
   332  0613                     	;# 
   333  0613                     	;# 
   334  0614                     	;# 
   335  0615                     	;# 
   336  0616                     	;# 
   337  0616                     	;# 
   338  0617                     	;# 
   339  0618                     	;# 
   340  0619                     	;# 
   341  0619                     	;# 
   342  061A                     	;# 
   343  061B                     	;# 
   344  061C                     	;# 
   345  061C                     	;# 
   346  0691                     	;# 
   347  0692                     	;# 
   348  0693                     	;# 
   349  0694                     	;# 
   350  0695                     	;# 
   351  0F0F                     	;# 
   352  0F10                     	;# 
   353  0F11                     	;# 
   354  0F12                     	;# 
   355  0F13                     	;# 
   356  0F14                     	;# 
   357  0F15                     	;# 
   358  0F16                     	;# 
   359  0F17                     	;# 
   360  0F18                     	;# 
   361  0F19                     	;# 
   362  0F1A                     	;# 
   363  0F1B                     	;# 
   364  0F1C                     	;# 
   365  0F1D                     	;# 
   366  0F1E                     	;# 
   367  0F1F                     	;# 
   368  0F20                     	;# 
   369  0F21                     	;# 
   370  0F22                     	;# 
   371  0F23                     	;# 
   372  0F24                     	;# 
   373  0F25                     	;# 
   374  0F26                     	;# 
   375  0F27                     	;# 
   376  0F28                     	;# 
   377  0F29                     	;# 
   378  0F2A                     	;# 
   379  0F2B                     	;# 
   380  0F2C                     	;# 
   381  0F2D                     	;# 
   382  0F2E                     	;# 
   383  0F2F                     	;# 
   384  0F8C                     	;# 
   385  0F8D                     	;# 
   386  0F91                     	;# 
   387  0F95                     	;# 
   388  0F96                     	;# 
   389  0F97                     	;# 
   390  0F9C                     	;# 
   391  0F9D                     	;# 
   392  0F9E                     	;# 
   393  0FE3                     	;# 
   394  0FE4                     	;# 
   395  0FE5                     	;# 
   396  0FE6                     	;# 
   397  0FE7                     	;# 
   398  0FE8                     	;# 
   399  0FE9                     	;# 
   400  0FEA                     	;# 
   401  0FEB                     	;# 
   402  0FED                     	;# 
   403  0FEE                     	;# 
   404  0FEF                     	;# 
   405  000B                     _INTCONbits	set	11
   406  0011                     _PIR1bits	set	17
   407  0095                     _OPTION_REGbits	set	149
   408  0099                     _OSCCONbits	set	153
   409  0091                     _PIE1bits	set	145
   410  008C                     _TRISA	set	140
   411  008C                     _TRISAbits	set	140
   412  008D                     _TRISB	set	141
   413  008D                     _TRISBbits	set	141
   414  008E                     _TRISCbits	set	142
   415  010E                     _LATCbits	set	270
   416  018C                     _ANSELA	set	396
   417  018D                     _ANSELB	set	397
   418  018E                     _ANSELC	set	398
   419  019D                     _RCSTAbits	set	413
   420  019C                     _SPBRGH	set	412
   421  019B                     _SPBRGL	set	411
   422  019A                     _TXREG	set	410
   423  019E                     _TXSTAbits	set	414
   424  0212                     _SSP1ADD	set	530
   425  0211                     _SSP1BUF	set	529
   426  0216                     _SSP1CON2bits	set	534
   427  0214                     _SSP1STAT	set	532
   428  0214                     _SSP1STATbits	set	532
   429  0212                     _SSPADD	set	530
   430  0211                     _SSPBUF	set	529
   431  0215                     _SSPCON	set	533
   432  0216                     _SSPCON2	set	534
   433  0216                     _SSPCON2bits	set	534
   434  0215                     _SSPCONbits	set	533
   435  0214                     _SSPSTAT	set	532
   436  0214                     _SSPSTATbits	set	532
   437  10B5                     _ACKDT	set	4277
   438  10B4                     _ACKEN	set	4276
   439  10A0                     _BF	set	4256
   440  10B2                     _PEN	set	4274
   441  10B3                     _RCEN	set	4275
   442  10B1                     _RSEN	set	4273
   443                           
   444                           ; #config settings
   445  0000                     
   446                           	psect	cinit
   447  07F2                     start_initialization:	
   448  07F2                     __initialization:	
   449                           
   450                           ; Clear objects allocated to BANK0
   451  07F2  01D2               	clrf	__pbssBANK0& (0+127)
   452  07F3  01D3               	clrf	(__pbssBANK0+1)& (0+127)
   453  07F4  01D4               	clrf	(__pbssBANK0+2)& (0+127)
   454  07F5  01D5               	clrf	(__pbssBANK0+3)& (0+127)
   455  07F6  01D6               	clrf	(__pbssBANK0+4)& (0+127)
   456  07F7  01D7               	clrf	(__pbssBANK0+5)& (0+127)
   457  07F8  01D8               	clrf	(__pbssBANK0+6)& (0+127)
   458  07F9  01D9               	clrf	(__pbssBANK0+7)& (0+127)
   459  07FA  01DA               	clrf	(__pbssBANK0+8)& (0+127)
   460  07FB  01DB               	clrf	(__pbssBANK0+9)& (0+127)
   461  07FC  01DC               	clrf	(__pbssBANK0+10)& (0+127)
   462  07FD                     end_of_initialization:	
   463                           ;End of C runtime variable initialization code
   464                           
   465  07FD                     __end_of__initialization:	
   466  07FD  0020               	movlb	0
   467  07FE  3186  2EB0         	ljmp	_main	;jump to C main() function
   468                           
   469                           	psect	bssBANK0
   470  0052                     __pbssBANK0:	
   471  0052                     _ACK_bit:	
   472  0052                     	ds	2
   473  0054                     _i:	
   474  0054                     	ds	2
   475  0056                     _byte:	
   476  0056                     	ds	1
   477  0057                     _kirk:	
   478  0057                     	ds	1
   479  0058                     _kirk2:	
   480  0058                     	ds	1
   481  0059                     _tb1:	
   482  0059                     	ds	1
   483  005A                     _tb2:	
   484  005A                     	ds	1
   485  005B                     _tempbyte1:	
   486  005B                     	ds	1
   487  005C                     _tempbyte2:	
   488  005C                     	ds	1
   489                           
   490                           	psect	cstackCOMMON
   491  0070                     __pcstackCOMMON:	
   492  0070                     ?_init_io:	
   493  0070                     ??_init_io:	
   494                           ; 0 bytes @ 0x0
   495                           
   496  0070                     ?_uart_xmit:	
   497                           ; 0 bytes @ 0x0
   498                           
   499  0070                     ?_serial_init:	
   500                           ; 0 bytes @ 0x0
   501                           
   502  0070                     ?_I2C_ACK:	
   503                           ; 0 bytes @ 0x0
   504                           
   505  0070                     ??_I2C_ACK:	
   506                           ; 0 bytes @ 0x0
   507                           
   508  0070                     ?_Send_I2C_Data:	
   509                           ; 0 bytes @ 0x0
   510                           
   511  0070                     ??_RX_I2C_Data:	
   512                           ; 0 bytes @ 0x0
   513                           
   514  0070                     ?_I2C_Control_Write:	
   515                           ; 0 bytes @ 0x0
   516                           
   517  0070                     ??_I2C_Control_Write:	
   518                           ; 0 bytes @ 0x0
   519                           
   520  0070                     ?_I2C_Control_Read:	
   521                           ; 0 bytes @ 0x0
   522                           
   523  0070                     ??_I2C_Control_Read:	
   524                           ; 0 bytes @ 0x0
   525                           
   526  0070                     ?_I2C_Start_Bit:	
   527                           ; 0 bytes @ 0x0
   528                           
   529  0070                     ??_I2C_Start_Bit:	
   530                           ; 0 bytes @ 0x0
   531                           
   532  0070                     ?_I2C_check_idle:	
   533                           ; 0 bytes @ 0x0
   534                           
   535  0070                     ??_I2C_check_idle:	
   536                           ; 0 bytes @ 0x0
   537                           
   538  0070                     ?_I2C_restart:	
   539                           ; 0 bytes @ 0x0
   540                           
   541  0070                     ?_I2C_Stop_Bit:	
   542                           ; 0 bytes @ 0x0
   543                           
   544  0070                     ??_I2C_Stop_Bit:	
   545                           ; 0 bytes @ 0x0
   546                           
   547  0070                     ?_I2C_NAK:	
   548                           ; 0 bytes @ 0x0
   549                           
   550  0070                     ??_I2C_NAK:	
   551                           ; 0 bytes @ 0x0
   552                           
   553  0070                     ?_UART_String:	
   554                           ; 0 bytes @ 0x0
   555                           
   556  0070                     ?_RX_I2C_Data:	
   557                           ; 0 bytes @ 0x0
   558                           
   559  0070                     ?_main:	
   560                           ; 1 bytes @ 0x0
   561                           
   562  0070                     ?___lwdiv:	
   563                           ; 2 bytes @ 0x0
   564                           
   565  0070                     ?___lwmod:	
   566                           ; 2 bytes @ 0x0
   567                           
   568  0070                     ?___ftpack:	
   569                           ; 2 bytes @ 0x0
   570                           
   571  0070                     ?___fttol:	
   572                           ; 3 bytes @ 0x0
   573                           
   574  0070                     uart_xmit@mydata_byte:	
   575                           ; 4 bytes @ 0x0
   576                           
   577  0070                     Send_I2C_Data@databyte:	
   578                           ; 2 bytes @ 0x0
   579                           
   580  0070                     ___lwdiv@divisor:	
   581                           ; 2 bytes @ 0x0
   582                           
   583  0070                     ___lwmod@divisor:	
   584                           ; 2 bytes @ 0x0
   585                           
   586  0070                     ___ftpack@arg:	
   587                           ; 2 bytes @ 0x0
   588                           
   589  0070                     ___fttol@f1:	
   590                           ; 3 bytes @ 0x0
   591                           
   592                           
   593                           ; 3 bytes @ 0x0
   594  0070                     	ds	1
   595  0071                     I2C_check_idle@byte1:	
   596                           
   597                           ; 1 bytes @ 0x1
   598  0071                     	ds	1
   599  0072                     ??_uart_xmit:	
   600  0072                     ??_serial_init:	
   601                           ; 0 bytes @ 0x2
   602                           
   603  0072                     ??_Send_I2C_Data:	
   604                           ; 0 bytes @ 0x2
   605                           
   606  0072                     ??_UART_String:	
   607                           ; 0 bytes @ 0x2
   608                           
   609  0072                     I2C_check_idle@byte2:	
   610                           ; 0 bytes @ 0x2
   611                           
   612  0072                     ___lwdiv@dividend:	
   613                           ; 1 bytes @ 0x2
   614                           
   615  0072                     ___lwmod@dividend:	
   616                           ; 2 bytes @ 0x2
   617                           
   618                           
   619                           ; 2 bytes @ 0x2
   620  0072                     	ds	1
   621  0073                     ??_I2C_restart:	
   622  0073                     ___ftpack@exp:	
   623                           ; 0 bytes @ 0x3
   624                           
   625                           
   626                           ; 1 bytes @ 0x3
   627  0073                     	ds	1
   628  0074                     ??___fttol:	
   629  0074                     ??___lwdiv:	
   630                           ; 0 bytes @ 0x4
   631                           
   632  0074                     ??___lwmod:	
   633                           ; 0 bytes @ 0x4
   634                           
   635  0074                     ___ftpack@sign:	
   636                           ; 0 bytes @ 0x4
   637                           
   638                           
   639                           ; 1 bytes @ 0x4
   640  0074                     	ds	1
   641  0075                     ??___ftpack:	
   642  0075                     ___lwmod@counter:	
   643                           ; 0 bytes @ 0x5
   644                           
   645  0075                     UART_String@i:	
   646                           ; 1 bytes @ 0x5
   647                           
   648  0075                     ___lwdiv@quotient:	
   649                           ; 2 bytes @ 0x5
   650                           
   651                           
   652                           ; 2 bytes @ 0x5
   653  0075                     	ds	2
   654  0077                     UART_String@letters:	
   655  0077                     ___lwdiv@counter:	
   656                           ; 1 bytes @ 0x7
   657                           
   658                           
   659                           ; 1 bytes @ 0x7
   660  0077                     	ds	1
   661  0078                     ?_utoa:	
   662  0078                     ?___awtoft:	
   663                           ; 1 bytes @ 0x8
   664                           
   665  0078                     ?___ftmul:	
   666                           ; 3 bytes @ 0x8
   667                           
   668  0078                     ___fttol@sign1:	
   669                           ; 3 bytes @ 0x8
   670                           
   671  0078                     ___awtoft@c:	
   672                           ; 1 bytes @ 0x8
   673                           
   674  0078                     utoa@val:	
   675                           ; 2 bytes @ 0x8
   676                           
   677  0078                     ___ftmul@f1:	
   678                           ; 2 bytes @ 0x8
   679                           
   680                           
   681                           ; 3 bytes @ 0x8
   682  0078                     	ds	1
   683  0079                     ___fttol@lval:	
   684                           
   685                           ; 4 bytes @ 0x9
   686  0079                     	ds	1
   687  007A                     utoa@base:	
   688                           
   689                           ; 2 bytes @ 0xA
   690  007A                     	ds	1
   691  007B                     ??___awtoft:	
   692  007B                     ___ftmul@f2:	
   693                           ; 0 bytes @ 0xB
   694                           
   695                           
   696                           ; 3 bytes @ 0xB
   697  007B                     	ds	1
   698  007C                     ??_utoa:	
   699                           
   700                           ; 0 bytes @ 0xC
   701  007C                     	ds	1
   702  007D                     ??_itoa:	
   703  007D                     ___awtoft@sign:	
   704                           ; 0 bytes @ 0xD
   705                           
   706  007D                     ___fttol@exp1:	
   707                           ; 1 bytes @ 0xD
   708                           
   709                           
   710                           ; 1 bytes @ 0xD
   711  007D                     	ds	1
   712                           
   713                           	psect	cstackBANK0
   714  0020                     __pcstackBANK0:	
   715  0020                     ??___ftmul:	
   716  0020                     utoa@v:	
   717                           ; 0 bytes @ 0x0
   718                           
   719                           
   720                           ; 2 bytes @ 0x0
   721  0020                     	ds	2
   722  0022                     utoa@c:	
   723                           
   724                           ; 1 bytes @ 0x2
   725  0022                     	ds	1
   726  0023                     utoa@buf:	
   727                           
   728                           ; 1 bytes @ 0x3
   729  0023                     	ds	1
   730  0024                     ?_itoa:	
   731  0024                     ___ftmul@exp:	
   732                           ; 1 bytes @ 0x4
   733                           
   734  0024                     itoa@val:	
   735                           ; 1 bytes @ 0x4
   736                           
   737                           
   738                           ; 2 bytes @ 0x4
   739  0024                     	ds	1
   740  0025                     ___ftmul@f3_as_product:	
   741                           
   742                           ; 3 bytes @ 0x5
   743  0025                     	ds	1
   744  0026                     itoa@base:	
   745                           
   746                           ; 2 bytes @ 0x6
   747  0026                     	ds	2
   748  0028                     ___ftmul@cntr:	
   749  0028                     itoa@cp:	
   750                           ; 1 bytes @ 0x8
   751                           
   752                           
   753                           ; 1 bytes @ 0x8
   754  0028                     	ds	1
   755  0029                     ___ftmul@sign:	
   756  0029                     itoa@buf:	
   757                           ; 1 bytes @ 0x9
   758                           
   759                           
   760                           ; 1 bytes @ 0x9
   761  0029                     	ds	1
   762  002A                     ?_CalcTemp:	
   763  002A                     ?___ftadd:	
   764                           ; 2 bytes @ 0xA
   765                           
   766  002A                     CalcTemp@b2:	
   767                           ; 3 bytes @ 0xA
   768                           
   769  002A                     ___ftadd@f1:	
   770                           ; 1 bytes @ 0xA
   771                           
   772                           
   773                           ; 3 bytes @ 0xA
   774  002A                     	ds	2
   775  002C                     ??_CalcTemp:	
   776                           
   777                           ; 0 bytes @ 0xC
   778  002C                     	ds	1
   779  002D                     ___ftadd@f2:	
   780                           
   781                           ; 3 bytes @ 0xD
   782  002D                     	ds	3
   783  0030                     ??___ftadd:	
   784                           
   785                           ; 0 bytes @ 0x10
   786  0030                     	ds	1
   787  0031                     CalcTemp@rcv_val:	
   788                           
   789                           ; 3 bytes @ 0x11
   790  0031                     	ds	3
   791  0034                     ___ftadd@sign:	
   792  0034                     CalcTemp@ans:	
   793                           ; 1 bytes @ 0x14
   794                           
   795                           
   796                           ; 3 bytes @ 0x14
   797  0034                     	ds	1
   798  0035                     ___ftadd@exp2:	
   799                           
   800                           ; 1 bytes @ 0x15
   801  0035                     	ds	1
   802  0036                     ___ftadd@exp1:	
   803                           
   804                           ; 1 bytes @ 0x16
   805  0036                     	ds	1
   806  0037                     ?_CalcHumid:	
   807  0037                     CalcTemp@b1:	
   808                           ; 2 bytes @ 0x17
   809                           
   810  0037                     CalcHumid@b2:	
   811                           ; 1 bytes @ 0x17
   812                           
   813                           
   814                           ; 1 bytes @ 0x17
   815  0037                     	ds	2
   816  0039                     ??_CalcHumid:	
   817                           
   818                           ; 0 bytes @ 0x19
   819  0039                     	ds	5
   820  003E                     CalcHumid@rcv_val:	
   821                           
   822                           ; 3 bytes @ 0x1E
   823  003E                     	ds	3
   824  0041                     CalcHumid@b1:	
   825                           
   826                           ; 1 bytes @ 0x21
   827  0041                     	ds	1
   828  0042                     CalcHumid@ans:	
   829                           
   830                           ; 3 bytes @ 0x22
   831  0042                     	ds	3
   832  0045                     ??_main:	
   833                           
   834                           ; 0 bytes @ 0x25
   835  0045                     	ds	3
   836  0048                     main@buf:	
   837                           
   838                           ; 8 bytes @ 0x28
   839  0048                     	ds	8
   840  0050                     main@ct:	
   841                           
   842                           ; 2 bytes @ 0x30
   843  0050                     	ds	2
   844                           
   845                           	psect	maintext
   846  06B0                     __pmaintext:	
   847 ;;
   848 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   849 ;;
   850 ;; *************** function _main *****************
   851 ;; Defined at:
   852 ;;		line 267 in file "main.c"
   853 ;; Parameters:    Size  Location     Type
   854 ;;		None
   855 ;; Auto vars:     Size  Location     Type
   856 ;;  buf             8   40[BANK0 ] unsigned char [8]
   857 ;;  ct              2   48[BANK0 ] int 
   858 ;; Return value:  Size  Location     Type
   859 ;;                  2  168[None  ] int 
   860 ;; Registers used:
   861 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
   862 ;; Tracked objects:
   863 ;;		On entry : B1F/0
   864 ;;		On exit  : 0/0
   865 ;;		Unchanged: 0/0
   866 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   867 ;;      Params:         0       0       0       0
   868 ;;      Locals:         0      10       0       0
   869 ;;      Temps:          0       3       0       0
   870 ;;      Totals:         0      13       0       0
   871 ;;Total ram usage:       13 bytes
   872 ;; Hardware stack levels required when called:    3
   873 ;; This function calls:
   874 ;;		_CalcHumid
   875 ;;		_CalcTemp
   876 ;;		_I2C_ACK
   877 ;;		_I2C_Control_Read
   878 ;;		_I2C_Control_Write
   879 ;;		_I2C_NAK
   880 ;;		_I2C_Start_Bit
   881 ;;		_I2C_Stop_Bit
   882 ;;		_I2C_restart
   883 ;;		_RX_I2C_Data
   884 ;;		_Send_I2C_Data
   885 ;;		_UART_String
   886 ;;		_init_io
   887 ;;		_itoa
   888 ;;		_serial_init
   889 ;;		_uart_xmit
   890 ;; This function is called by:
   891 ;;		Startup code after reset
   892 ;; This function uses a non-reentrant model
   893 ;;
   894                           
   895                           
   896                           ;psect for function _main
   897  06B0                     _main:	
   898                           
   899                           ;main.c: 269: OSCCONbits.IRCF = 0x0d;
   900                           
   901                           ;incstack = 0
   902                           ; Regs used in _main: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
   903  06B0  0021               	movlb	1	; select bank1
   904  06B1  0819               	movf	25,w	;volatile
   905  06B2  3987               	andlw	-121
   906  06B3  3868               	iorlw	104
   907  06B4  0099               	movwf	25	;volatile
   908                           
   909                           ;main.c: 270: OSCCONbits.SCS = 0x02;
   910  06B5  0819               	movf	25,w	;volatile
   911  06B6  39FC               	andlw	-4
   912  06B7  3802               	iorlw	2
   913  06B8  0099               	movwf	25	;volatile
   914                           
   915                           ;main.c: 271: OPTION_REGbits.nWPUEN = 0;
   916  06B9  1395               	bcf	21,7	;volatile
   917                           
   918                           ;main.c: 273: init_io();
   919  06BA  3182  2208  3186   	fcall	_init_io
   920                           
   921                           ;main.c: 274: serial_init();
   922  06BD  3182  22B5  3186   	fcall	_serial_init
   923                           
   924                           ;main.c: 276: SSPCONbits.SSPM=0x08;
   925  06C0  0024               	movlb	4	; select bank4
   926  06C1  0815               	movf	21,w	;volatile
   927  06C2  39F0               	andlw	-16
   928  06C3  3808               	iorlw	8
   929  06C4  0095               	movwf	21	;volatile
   930                           
   931                           ;main.c: 277: SSPCONbits.SSPEN=1;
   932  06C5  1695               	bsf	21,5	;volatile
   933                           
   934                           ;main.c: 278: SSPADD = 0x09;
   935  06C6  3009               	movlw	9
   936  06C7  0092               	movwf	18	;volatile
   937                           
   938                           ;main.c: 279: SSP1ADD = 0x09;
   939  06C8  3009               	movlw	9
   940  06C9  0092               	movwf	18	;volatile
   941                           
   942                           ;main.c: 282: _delay((unsigned long)((50)*(4000000/4000.0)));
   943  06CA  3041               	movlw	65
   944  06CB  0020               	movlb	0	; select bank0
   945  06CC  00C6               	movwf	??_main+1
   946  06CD  30EE               	movlw	238
   947  06CE  00C5               	movwf	??_main
   948  06CF                     u1887:	
   949  06CF  0BC5               	decfsz	??_main,f
   950  06D0  2ECF               	goto	u1887
   951  06D1  0BC6               	decfsz	??_main+1,f
   952  06D2  2ECF               	goto	u1887
   953  06D3  0000               	nop
   954                           
   955                           ;main.c: 284: I2C_Start_Bit();
   956  06D4  3181  21C9  3186   	fcall	_I2C_Start_Bit
   957                           
   958                           ;main.c: 285: I2C_Control_Write();
   959  06D7  3181  21E8  3186   	fcall	_I2C_Control_Write
   960                           
   961                           ;main.c: 287: if (!SSP1CON2bits.ACKSTAT)
   962  06DA  0024               	movlb	4	; select bank4
   963  06DB  1B16               	btfsc	22,6	;volatile
   964  06DC  2EDF               	goto	l1666
   965                           
   966                           ;main.c: 288: LATCbits.LATC1 = 0;
   967  06DD  0022               	movlb	2	; select bank2
   968  06DE  108E               	bcf	14,1	;volatile
   969  06DF                     l1666:	
   970                           
   971                           ;main.c: 290: Send_I2C_Data(0x2C);
   972  06DF  302C               	movlw	44
   973  06E0  00F0               	movwf	Send_I2C_Data@databyte
   974  06E1  3000               	movlw	0
   975  06E2  00F1               	movwf	Send_I2C_Data@databyte+1
   976  06E3  3181  2199  3186   	fcall	_Send_I2C_Data
   977                           
   978                           ;main.c: 291: Send_I2C_Data(0x06);
   979  06E6  3006               	movlw	6
   980  06E7  00F0               	movwf	Send_I2C_Data@databyte
   981  06E8  3000               	movlw	0
   982  06E9  00F1               	movwf	Send_I2C_Data@databyte+1
   983  06EA  3181  2199  3186   	fcall	_Send_I2C_Data
   984                           
   985                           ;main.c: 292: I2C_Stop_Bit();
   986  06ED  3181  21AE  3186   	fcall	_I2C_Stop_Bit
   987                           
   988                           ;main.c: 294: _delay((unsigned long)((15)*(4000000/4000.0)));
   989  06F0  3014               	movlw	20
   990  06F1  0020               	movlb	0	; select bank0
   991  06F2  00C6               	movwf	??_main+1
   992  06F3  3079               	movlw	121
   993  06F4  00C5               	movwf	??_main
   994  06F5                     u1897:	
   995  06F5  0BC5               	decfsz	??_main,f
   996  06F6  2EF5               	goto	u1897
   997  06F7  0BC6               	decfsz	??_main+1,f
   998  06F8  2EF5               	goto	u1897
   999  06F9  3200               	nop2
  1000                           
  1001                           ;main.c: 302: I2C_restart();
  1002  06FA  3181  2188  3186   	fcall	_I2C_restart
  1003                           
  1004                           ;main.c: 303: I2C_Control_Read();
  1005  06FD  3181  21D8  3186   	fcall	_I2C_Control_Read
  1006                           
  1007                           ;main.c: 304: RX_I2C_Data();
  1008  0700  3181  21A2  3186   	fcall	_RX_I2C_Data
  1009                           
  1010                           ;main.c: 305: tempbyte1=byte;
  1011  0703  0020               	movlb	0	; select bank0
  1012  0704  0856               	movf	_byte,w
  1013  0705  00C5               	movwf	??_main
  1014  0706  0845               	movf	??_main,w
  1015  0707  00DB               	movwf	_tempbyte1
  1016                           
  1017                           ;main.c: 306: I2C_ACK();
  1018  0708  3181  2190  3186   	fcall	_I2C_ACK
  1019                           
  1020                           ;main.c: 307: RX_I2C_Data();
  1021  070B  3181  21A2  3186   	fcall	_RX_I2C_Data
  1022                           
  1023                           ;main.c: 308: tempbyte2=byte;
  1024  070E  0020               	movlb	0	; select bank0
  1025  070F  0856               	movf	_byte,w
  1026  0710  00C5               	movwf	??_main
  1027  0711  0845               	movf	??_main,w
  1028  0712  00DC               	movwf	_tempbyte2
  1029                           
  1030                           ;main.c: 310: I2C_ACK();
  1031  0713  3181  2190  3186   	fcall	_I2C_ACK
  1032                           
  1033                           ;main.c: 311: RX_I2C_Data();
  1034  0716  3181  21A2  3186   	fcall	_RX_I2C_Data
  1035                           
  1036                           ;main.c: 312: kirk=byte;
  1037  0719  0020               	movlb	0	; select bank0
  1038  071A  0856               	movf	_byte,w
  1039  071B  00C5               	movwf	??_main
  1040  071C  0845               	movf	??_main,w
  1041  071D  00D7               	movwf	_kirk
  1042                           
  1043                           ;main.c: 314: I2C_ACK();
  1044  071E  3181  2190  3186   	fcall	_I2C_ACK
  1045                           
  1046                           ;main.c: 315: RX_I2C_Data();
  1047  0721  3181  21A2  3186   	fcall	_RX_I2C_Data
  1048                           
  1049                           ;main.c: 316: tb1=byte;
  1050  0724  0020               	movlb	0	; select bank0
  1051  0725  0856               	movf	_byte,w
  1052  0726  00C5               	movwf	??_main
  1053  0727  0845               	movf	??_main,w
  1054  0728  00D9               	movwf	_tb1
  1055                           
  1056                           ;main.c: 318: I2C_ACK();
  1057  0729  3181  2190  3186   	fcall	_I2C_ACK
  1058                           
  1059                           ;main.c: 319: RX_I2C_Data();
  1060  072C  3181  21A2  3186   	fcall	_RX_I2C_Data
  1061                           
  1062                           ;main.c: 320: tb2=byte;
  1063  072F  0020               	movlb	0	; select bank0
  1064  0730  0856               	movf	_byte,w
  1065  0731  00C5               	movwf	??_main
  1066  0732  0845               	movf	??_main,w
  1067  0733  00DA               	movwf	_tb2
  1068                           
  1069                           ;main.c: 322: I2C_ACK();
  1070  0734  3181  2190  3186   	fcall	_I2C_ACK
  1071                           
  1072                           ;main.c: 323: RX_I2C_Data();
  1073  0737  3181  21A2  3186   	fcall	_RX_I2C_Data
  1074                           
  1075                           ;main.c: 324: kirk2=byte;
  1076  073A  0020               	movlb	0	; select bank0
  1077  073B  0856               	movf	_byte,w
  1078  073C  00C5               	movwf	??_main
  1079  073D  0845               	movf	??_main,w
  1080  073E  00D8               	movwf	_kirk2
  1081                           
  1082                           ;main.c: 328: I2C_NAK();
  1083  073F  3181  21BB  3186   	fcall	_I2C_NAK
  1084                           
  1085                           ;main.c: 331: I2C_Stop_Bit();
  1086  0742  3181  21AE  3186   	fcall	_I2C_Stop_Bit
  1087                           
  1088                           ;main.c: 336: uart_xmit(tempbyte1);
  1089  0745  0020               	movlb	0	; select bank0
  1090  0746  085B               	movf	_tempbyte1,w
  1091  0747  00C5               	movwf	??_main
  1092  0748  01C6               	clrf	??_main+1
  1093  0749  0845               	movf	??_main,w
  1094  074A  00F0               	movwf	uart_xmit@mydata_byte
  1095  074B  0846               	movf	??_main+1,w
  1096  074C  00F1               	movwf	uart_xmit@mydata_byte+1
  1097  074D  3181  2182  3186   	fcall	_uart_xmit
  1098                           
  1099                           ;main.c: 337: uart_xmit(tempbyte2);
  1100  0750  0020               	movlb	0	; select bank0
  1101  0751  085C               	movf	_tempbyte2,w
  1102  0752  00C5               	movwf	??_main
  1103  0753  01C6               	clrf	??_main+1
  1104  0754  0845               	movf	??_main,w
  1105  0755  00F0               	movwf	uart_xmit@mydata_byte
  1106  0756  0846               	movf	??_main+1,w
  1107  0757  00F1               	movwf	uart_xmit@mydata_byte+1
  1108  0758  3181  2182  3186   	fcall	_uart_xmit
  1109                           
  1110                           ;main.c: 338: uart_xmit(tb1);
  1111  075B  0020               	movlb	0	; select bank0
  1112  075C  0859               	movf	_tb1,w
  1113  075D  00C5               	movwf	??_main
  1114  075E  01C6               	clrf	??_main+1
  1115  075F  0845               	movf	??_main,w
  1116  0760  00F0               	movwf	uart_xmit@mydata_byte
  1117  0761  0846               	movf	??_main+1,w
  1118  0762  00F1               	movwf	uart_xmit@mydata_byte+1
  1119  0763  3181  2182  3186   	fcall	_uart_xmit
  1120                           
  1121                           ;main.c: 339: uart_xmit(tb2);
  1122  0766  0020               	movlb	0	; select bank0
  1123  0767  085A               	movf	_tb2,w
  1124  0768  00C5               	movwf	??_main
  1125  0769  01C6               	clrf	??_main+1
  1126  076A  0845               	movf	??_main,w
  1127  076B  00F0               	movwf	uart_xmit@mydata_byte
  1128  076C  0846               	movf	??_main+1,w
  1129  076D  00F1               	movwf	uart_xmit@mydata_byte+1
  1130  076E  3181  2182  3186   	fcall	_uart_xmit
  1131                           
  1132                           ;main.c: 341: _delay((unsigned long)((1)*(4000000/4000.0)));
  1133  0771  30F9               	movlw	249
  1134  0772  0020               	movlb	0	; select bank0
  1135  0773  00C5               	movwf	??_main
  1136  0774                     u1907:	
  1137  0774  0000               	nop
  1138  0775  0BC5               	decfsz	??_main,f
  1139  0776  2F74               	goto	u1907
  1140  0777  3200               	nop2	;nop
  1141  0778  0000               	nop
  1142  0779                     l170:	
  1143                           ;main.c: 343: while (1) {
  1144                           
  1145                           
  1146                           ;main.c: 344: char buf[8];
  1147                           ;main.c: 345: int ct = CalcTemp(tempbyte1,tempbyte2);
  1148  0779  0020               	movlb	0	; select bank0
  1149  077A  085C               	movf	_tempbyte2,w
  1150  077B  00C5               	movwf	??_main
  1151  077C  0845               	movf	??_main,w
  1152  077D  00AA               	movwf	CalcTemp@b2
  1153  077E  085B               	movf	_tempbyte1,w
  1154  077F  3183  2317  3186   	fcall	_CalcTemp
  1155  0782  0020               	movlb	0	; select bank0
  1156  0783  082B               	movf	?_CalcTemp+1,w
  1157  0784  00D1               	movwf	main@ct+1
  1158  0785  082A               	movf	?_CalcTemp,w
  1159  0786  00D0               	movwf	main@ct
  1160                           
  1161                           ;main.c: 346: _delay((unsigned long)((500)*(4000000/4000.0)));
  1162  0787  3003               	movlw	3
  1163  0788  00C7               	movwf	??_main+2
  1164  0789  308A               	movlw	138
  1165  078A  00C6               	movwf	??_main+1
  1166  078B  3056               	movlw	86
  1167  078C  00C5               	movwf	??_main
  1168  078D                     u1917:	
  1169  078D  0BC5               	decfsz	??_main,f
  1170  078E  2F8D               	goto	u1917
  1171  078F  0BC6               	decfsz	??_main+1,f
  1172  0790  2F8D               	goto	u1917
  1173  0791  0BC7               	decfsz	??_main+2,f
  1174  0792  2F8D               	goto	u1917
  1175  0793  3200               	nop2
  1176                           
  1177                           ;main.c: 347: LATCbits.LATC0 = 1;
  1178  0794  0022               	movlb	2	; select bank2
  1179  0795  140E               	bsf	14,0	;volatile
  1180                           
  1181                           ;main.c: 348: _delay((unsigned long)((500)*(4000000/4000.0)));
  1182  0796  3003               	movlw	3
  1183  0797  0020               	movlb	0	; select bank0
  1184  0798  00C7               	movwf	??_main+2
  1185  0799  308A               	movlw	138
  1186  079A  00C6               	movwf	??_main+1
  1187  079B  3056               	movlw	86
  1188  079C  00C5               	movwf	??_main
  1189  079D                     u1927:	
  1190  079D  0BC5               	decfsz	??_main,f
  1191  079E  2F9D               	goto	u1927
  1192  079F  0BC6               	decfsz	??_main+1,f
  1193  07A0  2F9D               	goto	u1927
  1194  07A1  0BC7               	decfsz	??_main+2,f
  1195  07A2  2F9D               	goto	u1927
  1196  07A3  3200               	nop2
  1197                           
  1198                           ;main.c: 349: LATCbits.LATC0 = 0;
  1199  07A4  0022               	movlb	2	; select bank2
  1200  07A5  100E               	bcf	14,0	;volatile
  1201                           
  1202                           ;main.c: 350: itoa(buf,ct,10);
  1203  07A6  0020               	movlb	0	; select bank0
  1204  07A7  0851               	movf	main@ct+1,w
  1205  07A8  00A5               	movwf	itoa@val+1
  1206  07A9  0850               	movf	main@ct,w
  1207  07AA  00A4               	movwf	itoa@val
  1208  07AB  300A               	movlw	10
  1209  07AC  00A6               	movwf	itoa@base
  1210  07AD  3000               	movlw	0
  1211  07AE  00A7               	movwf	itoa@base+1
  1212  07AF  3048               	movlw	(low (main@buf| 0))& (0+255)
  1213  07B0  3182  2265  3186   	fcall	_itoa
  1214                           
  1215                           ;main.c: 351: UART_String(buf);
  1216  07B3  3048               	movlw	(low (main@buf| 0))& (0+255)
  1217  07B4  3182  2244  3186   	fcall	_UART_String
  1218                           
  1219                           ;main.c: 352: uart_xmit(10);
  1220  07B7  300A               	movlw	10
  1221  07B8  00F0               	movwf	uart_xmit@mydata_byte
  1222  07B9  3000               	movlw	0
  1223  07BA  00F1               	movwf	uart_xmit@mydata_byte+1
  1224  07BB  3181  2182  3186   	fcall	_uart_xmit
  1225                           
  1226                           ;main.c: 353: uart_xmit(13);
  1227  07BE  300D               	movlw	13
  1228  07BF  00F0               	movwf	uart_xmit@mydata_byte
  1229  07C0  3000               	movlw	0
  1230  07C1  00F1               	movwf	uart_xmit@mydata_byte+1
  1231  07C2  3181  2182  3186   	fcall	_uart_xmit
  1232                           
  1233                           ;main.c: 355: int ct = CalcHumid(tb1,tb2);
  1234  07C5  0020               	movlb	0	; select bank0
  1235  07C6  085A               	movf	_tb2,w
  1236  07C7  00C5               	movwf	??_main
  1237  07C8  0845               	movf	??_main,w
  1238  07C9  00B7               	movwf	CalcHumid@b2
  1239  07CA  0859               	movf	_tb1,w
  1240  07CB  3184  241C  3186   	fcall	_CalcHumid
  1241  07CE  0020               	movlb	0	; select bank0
  1242  07CF  0838               	movf	?_CalcHumid+1,w
  1243  07D0  00D1               	movwf	main@ct+1
  1244  07D1  0837               	movf	?_CalcHumid,w
  1245  07D2  00D0               	movwf	main@ct
  1246                           
  1247                           ;main.c: 356: itoa(buf,ct,10);
  1248  07D3  0851               	movf	main@ct+1,w
  1249  07D4  00A5               	movwf	itoa@val+1
  1250  07D5  0850               	movf	main@ct,w
  1251  07D6  00A4               	movwf	itoa@val
  1252  07D7  300A               	movlw	10
  1253  07D8  00A6               	movwf	itoa@base
  1254  07D9  3000               	movlw	0
  1255  07DA  00A7               	movwf	itoa@base+1
  1256  07DB  3048               	movlw	(low (main@buf| 0))& (0+255)
  1257  07DC  3182  2265  3186   	fcall	_itoa
  1258                           
  1259                           ;main.c: 357: UART_String(buf);
  1260  07DF  3048               	movlw	(low (main@buf| 0))& (0+255)
  1261  07E0  3182  2244  3186   	fcall	_UART_String
  1262                           
  1263                           ;main.c: 358: uart_xmit(10);
  1264  07E3  300A               	movlw	10
  1265  07E4  00F0               	movwf	uart_xmit@mydata_byte
  1266  07E5  3000               	movlw	0
  1267  07E6  00F1               	movwf	uart_xmit@mydata_byte+1
  1268  07E7  3181  2182  3186   	fcall	_uart_xmit
  1269                           
  1270                           ;main.c: 359: uart_xmit(13);
  1271  07EA  300D               	movlw	13
  1272  07EB  00F0               	movwf	uart_xmit@mydata_byte
  1273  07EC  3000               	movlw	0
  1274  07ED  00F1               	movwf	uart_xmit@mydata_byte+1
  1275  07EE  3181  2182  3186   	fcall	_uart_xmit
  1276  07F1  2F79               	goto	l170
  1277  07F2                     __end_of_main:	
  1278                           ;main.c: 363: }
  1279                           ;main.c: 364: return;
  1280                           
  1281                           
  1282                           	psect	text1
  1283  02B5                     __ptext1:	
  1284 ;; *************** function _serial_init *****************
  1285 ;; Defined at:
  1286 ;;		line 106 in file "main.c"
  1287 ;; Parameters:    Size  Location     Type
  1288 ;;		None
  1289 ;; Auto vars:     Size  Location     Type
  1290 ;;		None
  1291 ;; Return value:  Size  Location     Type
  1292 ;;		None               void
  1293 ;; Registers used:
  1294 ;;		wreg, status,2, status,0, pclath, cstack
  1295 ;; Tracked objects:
  1296 ;;		On entry : 0/0
  1297 ;;		On exit  : 0/0
  1298 ;;		Unchanged: 0/0
  1299 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1300 ;;      Params:         0       0       0       0
  1301 ;;      Locals:         0       0       0       0
  1302 ;;      Temps:          2       0       0       0
  1303 ;;      Totals:         2       0       0       0
  1304 ;;Total ram usage:        2 bytes
  1305 ;; Hardware stack levels used:    1
  1306 ;; Hardware stack levels required when called:    1
  1307 ;; This function calls:
  1308 ;;		_uart_xmit
  1309 ;; This function is called by:
  1310 ;;		_main
  1311 ;; This function uses a non-reentrant model
  1312 ;;
  1313                           
  1314                           
  1315                           ;psect for function _serial_init
  1316  02B5                     _serial_init:	
  1317                           
  1318                           ;main.c: 114: TXSTAbits.BRGH=1;
  1319                           
  1320                           ;incstack = 0
  1321                           ; Regs used in _serial_init: [wreg+status,2+status,0+pclath+cstack]
  1322  02B5  0023               	movlb	3	; select bank3
  1323  02B6  151E               	bsf	30,2	;volatile
  1324                           
  1325                           ;main.c: 115: TXSTAbits.TX9=0;
  1326  02B7  131E               	bcf	30,6	;volatile
  1327                           
  1328                           ;main.c: 116: TXSTAbits.TXEN = 1;
  1329  02B8  169E               	bsf	30,5	;volatile
  1330                           
  1331                           ;main.c: 118: RCSTAbits.SPEN=1;
  1332  02B9  179D               	bsf	29,7	;volatile
  1333                           
  1334                           ;main.c: 119: RCSTAbits.RX9=0;
  1335  02BA  131D               	bcf	29,6	;volatile
  1336                           
  1337                           ;main.c: 120: RCSTAbits.CREN=1;
  1338  02BB  161D               	bsf	29,4	;volatile
  1339                           
  1340                           ;main.c: 122: SPBRGL=25;
  1341  02BC  3019               	movlw	25
  1342  02BD  009B               	movwf	27	;volatile
  1343                           
  1344                           ;main.c: 123: SPBRGH=0;
  1345  02BE  019C               	clrf	28	;volatile
  1346                           
  1347                           ;main.c: 125: PIR1bits.RCIF=0;
  1348  02BF  0020               	movlb	0	; select bank0
  1349  02C0  1291               	bcf	17,5	;volatile
  1350                           
  1351                           ;main.c: 126: PIE1bits.RCIE=1;
  1352  02C1  0021               	movlb	1	; select bank1
  1353  02C2  1691               	bsf	17,5	;volatile
  1354                           
  1355                           ;main.c: 127: INTCONbits.PEIE = 1;
  1356  02C3  170B               	bsf	11,6	;volatile
  1357                           
  1358                           ;main.c: 128: INTCONbits.GIE = 1;
  1359  02C4  178B               	bsf	11,7	;volatile
  1360                           
  1361                           ;main.c: 130: _delay((unsigned long)((50)*(4000000/4000.0)));
  1362  02C5  3041               	movlw	65
  1363  02C6  00F3               	movwf	??_serial_init+1
  1364  02C7  30EE               	movlw	238
  1365  02C8  00F2               	movwf	??_serial_init
  1366  02C9                     u1937:	
  1367  02C9  0BF2               	decfsz	??_serial_init,f
  1368  02CA  2AC9               	goto	u1937
  1369  02CB  0BF3               	decfsz	??_serial_init+1,f
  1370  02CC  2AC9               	goto	u1937
  1371  02CD  0000               	nop
  1372                           
  1373                           ;main.c: 132: uart_xmit('R');
  1374  02CE  3052               	movlw	82
  1375  02CF  00F0               	movwf	uart_xmit@mydata_byte
  1376  02D0  3000               	movlw	0
  1377  02D1  00F1               	movwf	uart_xmit@mydata_byte+1
  1378  02D2  3181  2182  3182   	fcall	_uart_xmit
  1379                           
  1380                           ;main.c: 133: uart_xmit('S');
  1381  02D5  3053               	movlw	83
  1382  02D6  00F0               	movwf	uart_xmit@mydata_byte
  1383  02D7  3000               	movlw	0
  1384  02D8  00F1               	movwf	uart_xmit@mydata_byte+1
  1385  02D9  3181  2182  3182   	fcall	_uart_xmit
  1386                           
  1387                           ;main.c: 134: uart_xmit('T');
  1388  02DC  3054               	movlw	84
  1389  02DD  00F0               	movwf	uart_xmit@mydata_byte
  1390  02DE  3000               	movlw	0
  1391  02DF  00F1               	movwf	uart_xmit@mydata_byte+1
  1392  02E0  3181  2182         	fcall	_uart_xmit
  1393  02E2  0008               	return
  1394  02E3                     __end_of_serial_init:	
  1395                           
  1396                           	psect	text2
  1397  0265                     __ptext2:	
  1398 ;; *************** function _itoa *****************
  1399 ;; Defined at:
  1400 ;;		line 4 in file "/opt/mmplabv310/xc8/sources/common/itoa.c"
  1401 ;; Parameters:    Size  Location     Type
  1402 ;;  buf             1    wreg     PTR unsigned char 
  1403 ;;		 -> main@buf(8), 
  1404 ;;  val             2    4[BANK0 ] int 
  1405 ;;  base            2    6[BANK0 ] int 
  1406 ;; Auto vars:     Size  Location     Type
  1407 ;;  buf             1    9[BANK0 ] PTR unsigned char 
  1408 ;;		 -> main@buf(8), 
  1409 ;;  cp              1    8[BANK0 ] PTR unsigned char 
  1410 ;;		 -> main@buf(8), 
  1411 ;; Return value:  Size  Location     Type
  1412 ;;                  1    wreg      PTR unsigned char 
  1413 ;; Registers used:
  1414 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1415 ;; Tracked objects:
  1416 ;;		On entry : 0/0
  1417 ;;		On exit  : 0/0
  1418 ;;		Unchanged: 0/0
  1419 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1420 ;;      Params:         0       4       0       0
  1421 ;;      Locals:         0       2       0       0
  1422 ;;      Temps:          1       0       0       0
  1423 ;;      Totals:         1       6       0       0
  1424 ;;Total ram usage:        7 bytes
  1425 ;; Hardware stack levels used:    1
  1426 ;; Hardware stack levels required when called:    2
  1427 ;; This function calls:
  1428 ;;		_utoa
  1429 ;; This function is called by:
  1430 ;;		_main
  1431 ;; This function uses a non-reentrant model
  1432 ;;
  1433                           
  1434                           
  1435                           ;psect for function _itoa
  1436  0265                     _itoa:	
  1437                           
  1438                           ;incstack = 0
  1439                           ; Regs used in _itoa: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  1440                           ;itoa@buf stored from wreg
  1441  0265  0020               	movlb	0	; select bank0
  1442  0266  00A9               	movwf	itoa@buf
  1443  0267  0829               	movf	itoa@buf,w
  1444  0268  00FD               	movwf	??_itoa
  1445  0269  087D               	movf	??_itoa,w
  1446  026A  00A8               	movwf	itoa@cp
  1447  026B  1FA5               	btfss	itoa@val+1,7
  1448  026C  2A7D               	goto	l1642
  1449  026D  302D               	movlw	45
  1450  026E  00FD               	movwf	??_itoa
  1451  026F  0829               	movf	itoa@buf,w
  1452  0270  0086               	movwf	6
  1453  0271  0187               	clrf	7
  1454  0272  087D               	movf	??_itoa,w
  1455  0273  0081               	movwf	1
  1456  0274  3001               	movlw	1
  1457  0275  00FD               	movwf	??_itoa
  1458  0276  087D               	movf	??_itoa,w
  1459  0277  07A9               	addwf	itoa@buf,f
  1460  0278  09A4               	comf	itoa@val,f
  1461  0279  09A5               	comf	itoa@val+1,f
  1462  027A  0AA4               	incf	itoa@val,f
  1463  027B  1903               	skipnz
  1464  027C  0AA5               	incf	itoa@val+1,f
  1465  027D                     l1642:	
  1466  027D  0825               	movf	itoa@val+1,w
  1467  027E  00F9               	movwf	utoa@val+1
  1468  027F  0824               	movf	itoa@val,w
  1469  0280  00F8               	movwf	utoa@val
  1470  0281  0827               	movf	itoa@base+1,w
  1471  0282  00FB               	movwf	utoa@base+1
  1472  0283  0826               	movf	itoa@base,w
  1473  0284  00FA               	movwf	utoa@base
  1474  0285  0829               	movf	itoa@buf,w
  1475  0286  3183  2356         	fcall	_utoa
  1476  0288  0008               	return
  1477  0289                     __end_of_itoa:	
  1478                           ;	Return value of _itoa is never used
  1479                           
  1480                           
  1481                           	psect	text3
  1482  0356                     __ptext3:	
  1483 ;; *************** function _utoa *****************
  1484 ;; Defined at:
  1485 ;;		line 17 in file "/opt/mmplabv310/xc8/sources/common/itoa.c"
  1486 ;; Parameters:    Size  Location     Type
  1487 ;;  buf             1    wreg     PTR unsigned char 
  1488 ;;		 -> main@buf(8), 
  1489 ;;  val             2    8[COMMON] unsigned int 
  1490 ;;  base            2   10[COMMON] int 
  1491 ;; Auto vars:     Size  Location     Type
  1492 ;;  buf             1    3[BANK0 ] PTR unsigned char 
  1493 ;;		 -> main@buf(8), 
  1494 ;;  v               2    0[BANK0 ] unsigned int 
  1495 ;;  c               1    2[BANK0 ] unsigned char 
  1496 ;; Return value:  Size  Location     Type
  1497 ;;                  1    wreg      PTR unsigned char 
  1498 ;; Registers used:
  1499 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1500 ;; Tracked objects:
  1501 ;;		On entry : 0/0
  1502 ;;		On exit  : 0/0
  1503 ;;		Unchanged: 0/0
  1504 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1505 ;;      Params:         4       0       0       0
  1506 ;;      Locals:         0       4       0       0
  1507 ;;      Temps:          1       0       0       0
  1508 ;;      Totals:         5       4       0       0
  1509 ;;Total ram usage:        9 bytes
  1510 ;; Hardware stack levels used:    1
  1511 ;; Hardware stack levels required when called:    1
  1512 ;; This function calls:
  1513 ;;		___lwdiv
  1514 ;;		___lwmod
  1515 ;; This function is called by:
  1516 ;;		_itoa
  1517 ;; This function uses a non-reentrant model
  1518 ;;
  1519                           
  1520                           
  1521                           ;psect for function _utoa
  1522  0356                     _utoa:	
  1523                           
  1524                           ;incstack = 0
  1525                           ; Regs used in _utoa: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  1526                           ;utoa@buf stored from wreg
  1527  0356  0020               	movlb	0	; select bank0
  1528  0357  00A3               	movwf	utoa@buf
  1529  0358  0879               	movf	utoa@val+1,w
  1530  0359  00A1               	movwf	utoa@v+1
  1531  035A  0878               	movf	utoa@val,w
  1532  035B  00A0               	movwf	utoa@v
  1533  035C                     l1472:	
  1534  035C  087B               	movf	utoa@base+1,w
  1535  035D  00F1               	movwf	___lwdiv@divisor+1
  1536  035E  087A               	movf	utoa@base,w
  1537  035F  00F0               	movwf	___lwdiv@divisor
  1538  0360  0821               	movf	utoa@v+1,w
  1539  0361  00F3               	movwf	___lwdiv@dividend+1
  1540  0362  0820               	movf	utoa@v,w
  1541  0363  00F2               	movwf	___lwdiv@dividend
  1542  0364  3182  22E3  3183   	fcall	___lwdiv
  1543  0367  0871               	movf	?___lwdiv+1,w
  1544  0368  0020               	movlb	0	; select bank0
  1545  0369  00A1               	movwf	utoa@v+1
  1546  036A  0870               	movf	?___lwdiv,w
  1547  036B  00A0               	movwf	utoa@v
  1548  036C  3001               	movlw	1
  1549  036D  00FC               	movwf	??_utoa
  1550  036E  087C               	movf	??_utoa,w
  1551  036F  07A3               	addwf	utoa@buf,f
  1552  0370  0820               	movf	utoa@v,w
  1553  0371  0421               	iorwf	utoa@v+1,w
  1554  0372  1D03               	btfss	3,2
  1555  0373  2B5C               	goto	l1472
  1556  0374  0823               	movf	utoa@buf,w
  1557  0375  0086               	movwf	6
  1558  0376  0187               	clrf	7
  1559  0377  0181               	clrf	1
  1560  0378  3001               	movlw	1
  1561  0379  02A3               	subwf	utoa@buf,f
  1562  037A                     l1482:	
  1563  037A  087B               	movf	utoa@base+1,w
  1564  037B  00F1               	movwf	___lwmod@divisor+1
  1565  037C  087A               	movf	utoa@base,w
  1566  037D  00F0               	movwf	___lwmod@divisor
  1567  037E  0879               	movf	utoa@val+1,w
  1568  037F  00F3               	movwf	___lwmod@dividend+1
  1569  0380  0878               	movf	utoa@val,w
  1570  0381  00F2               	movwf	___lwmod@dividend
  1571  0382  3182  2289  3183   	fcall	___lwmod
  1572  0385  0870               	movf	?___lwmod,w
  1573  0386  00FC               	movwf	??_utoa
  1574  0387  087C               	movf	??_utoa,w
  1575  0388  0020               	movlb	0	; select bank0
  1576  0389  00A2               	movwf	utoa@c
  1577  038A  087B               	movf	utoa@base+1,w
  1578  038B  00F1               	movwf	___lwdiv@divisor+1
  1579  038C  087A               	movf	utoa@base,w
  1580  038D  00F0               	movwf	___lwdiv@divisor
  1581  038E  0879               	movf	utoa@val+1,w
  1582  038F  00F3               	movwf	___lwdiv@dividend+1
  1583  0390  0878               	movf	utoa@val,w
  1584  0391  00F2               	movwf	___lwdiv@dividend
  1585  0392  3182  22E3  3183   	fcall	___lwdiv
  1586  0395  0871               	movf	?___lwdiv+1,w
  1587  0396  00F9               	movwf	utoa@val+1
  1588  0397  0870               	movf	?___lwdiv,w
  1589  0398  00F8               	movwf	utoa@val
  1590  0399  300A               	movlw	10
  1591  039A  0020               	movlb	0	; select bank0
  1592  039B  0222               	subwf	utoa@c,w
  1593  039C  1C03               	skipc
  1594  039D  2BA2               	goto	l533
  1595  039E  3007               	movlw	7
  1596  039F  00FC               	movwf	??_utoa
  1597  03A0  087C               	movf	??_utoa,w
  1598  03A1  07A2               	addwf	utoa@c,f
  1599  03A2                     l533:	
  1600  03A2  3030               	movlw	48
  1601  03A3  00FC               	movwf	??_utoa
  1602  03A4  087C               	movf	??_utoa,w
  1603  03A5  07A2               	addwf	utoa@c,f
  1604  03A6  0822               	movf	utoa@c,w
  1605  03A7  00FC               	movwf	??_utoa
  1606  03A8  0823               	movf	utoa@buf,w
  1607  03A9  0086               	movwf	6
  1608  03AA  0187               	clrf	7
  1609  03AB  087C               	movf	??_utoa,w
  1610  03AC  0081               	movwf	1
  1611  03AD  3001               	movlw	1
  1612  03AE  02A3               	subwf	utoa@buf,f
  1613  03AF  0878               	movf	utoa@val,w
  1614  03B0  0479               	iorwf	utoa@val+1,w
  1615  03B1  1D03               	btfss	3,2
  1616  03B2  2B7A               	goto	l1482
  1617                           
  1618                           ;	Return value of _utoa is never used
  1619  03B3  3001               	movlw	1
  1620  03B4  00FC               	movwf	??_utoa
  1621  03B5  087C               	movf	??_utoa,w
  1622  03B6  07A3               	addwf	utoa@buf,f
  1623  03B7  0008               	return
  1624  03B8                     __end_of_utoa:	
  1625                           
  1626                           	psect	text4
  1627  0289                     __ptext4:	
  1628 ;; *************** function ___lwmod *****************
  1629 ;; Defined at:
  1630 ;;		line 6 in file "/opt/mmplabv310/xc8/sources/common/lwmod.c"
  1631 ;; Parameters:    Size  Location     Type
  1632 ;;  divisor         2    0[COMMON] unsigned int 
  1633 ;;  dividend        2    2[COMMON] unsigned int 
  1634 ;; Auto vars:     Size  Location     Type
  1635 ;;  counter         1    5[COMMON] unsigned char 
  1636 ;; Return value:  Size  Location     Type
  1637 ;;                  2    0[COMMON] unsigned int 
  1638 ;; Registers used:
  1639 ;;		wreg, status,2, status,0
  1640 ;; Tracked objects:
  1641 ;;		On entry : 0/0
  1642 ;;		On exit  : 0/0
  1643 ;;		Unchanged: 0/0
  1644 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1645 ;;      Params:         4       0       0       0
  1646 ;;      Locals:         1       0       0       0
  1647 ;;      Temps:          1       0       0       0
  1648 ;;      Totals:         6       0       0       0
  1649 ;;Total ram usage:        6 bytes
  1650 ;; Hardware stack levels used:    1
  1651 ;; This function calls:
  1652 ;;		Nothing
  1653 ;; This function is called by:
  1654 ;;		_utoa
  1655 ;; This function uses a non-reentrant model
  1656 ;;
  1657                           
  1658                           
  1659                           ;psect for function ___lwmod
  1660  0289                     ___lwmod:	
  1661                           
  1662                           ;incstack = 0
  1663                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  1664  0289  0870               	movf	___lwmod@divisor,w
  1665  028A  0471               	iorwf	___lwmod@divisor+1,w
  1666  028B  1903               	btfsc	3,2
  1667  028C  2AB0               	goto	l1284
  1668  028D  01F5               	clrf	___lwmod@counter
  1669  028E  0AF5               	incf	___lwmod@counter,f
  1670  028F                     l1274:	
  1671  028F  1BF1               	btfsc	___lwmod@divisor+1,7
  1672  0290  2A9B               	goto	l1276
  1673  0291  3001               	movlw	1
  1674  0292                     u1195:	
  1675  0292  35F0               	lslf	___lwmod@divisor,f
  1676  0293  0DF1               	rlf	___lwmod@divisor+1,f
  1677  0294  0B89               	decfsz	9,f
  1678  0295  2A92               	goto	u1195
  1679  0296  3001               	movlw	1
  1680  0297  00F4               	movwf	??___lwmod
  1681  0298  0874               	movf	??___lwmod,w
  1682  0299  07F5               	addwf	___lwmod@counter,f
  1683  029A  2A8F               	goto	l1274
  1684  029B                     l1276:	
  1685  029B  0871               	movf	___lwmod@divisor+1,w
  1686  029C  0273               	subwf	___lwmod@dividend+1,w
  1687  029D  1D03               	skipz
  1688  029E  2AA1               	goto	u1215
  1689  029F  0870               	movf	___lwmod@divisor,w
  1690  02A0  0272               	subwf	___lwmod@dividend,w
  1691  02A1                     u1215:	
  1692  02A1  1C03               	skipc
  1693  02A2  2AA7               	goto	l1280
  1694  02A3  0870               	movf	___lwmod@divisor,w
  1695  02A4  02F2               	subwf	___lwmod@dividend,f
  1696  02A5  0871               	movf	___lwmod@divisor+1,w
  1697  02A6  3BF3               	subwfb	___lwmod@dividend+1,f
  1698  02A7                     l1280:	
  1699  02A7  3001               	movlw	1
  1700  02A8                     u1225:	
  1701  02A8  36F1               	lsrf	___lwmod@divisor+1,f
  1702  02A9  0CF0               	rrf	___lwmod@divisor,f
  1703  02AA  0B89               	decfsz	9,f
  1704  02AB  2AA8               	goto	u1225
  1705  02AC  3001               	movlw	1
  1706  02AD  02F5               	subwf	___lwmod@counter,f
  1707  02AE  1D03               	btfss	3,2
  1708  02AF  2A9B               	goto	l1276
  1709  02B0                     l1284:	
  1710  02B0  0873               	movf	___lwmod@dividend+1,w
  1711  02B1  00F1               	movwf	?___lwmod+1
  1712  02B2  0872               	movf	___lwmod@dividend,w
  1713  02B3  00F0               	movwf	?___lwmod
  1714  02B4  0008               	return
  1715  02B5                     __end_of___lwmod:	
  1716                           
  1717                           	psect	text5
  1718  02E3                     __ptext5:	
  1719 ;; *************** function ___lwdiv *****************
  1720 ;; Defined at:
  1721 ;;		line 6 in file "/opt/mmplabv310/xc8/sources/common/lwdiv.c"
  1722 ;; Parameters:    Size  Location     Type
  1723 ;;  divisor         2    0[COMMON] unsigned int 
  1724 ;;  dividend        2    2[COMMON] unsigned int 
  1725 ;; Auto vars:     Size  Location     Type
  1726 ;;  quotient        2    5[COMMON] unsigned int 
  1727 ;;  counter         1    7[COMMON] unsigned char 
  1728 ;; Return value:  Size  Location     Type
  1729 ;;                  2    0[COMMON] unsigned int 
  1730 ;; Registers used:
  1731 ;;		wreg, status,2, status,0
  1732 ;; Tracked objects:
  1733 ;;		On entry : 0/0
  1734 ;;		On exit  : 0/0
  1735 ;;		Unchanged: 0/0
  1736 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1737 ;;      Params:         4       0       0       0
  1738 ;;      Locals:         3       0       0       0
  1739 ;;      Temps:          1       0       0       0
  1740 ;;      Totals:         8       0       0       0
  1741 ;;Total ram usage:        8 bytes
  1742 ;; Hardware stack levels used:    1
  1743 ;; This function calls:
  1744 ;;		Nothing
  1745 ;; This function is called by:
  1746 ;;		_utoa
  1747 ;; This function uses a non-reentrant model
  1748 ;;
  1749                           
  1750                           
  1751                           ;psect for function ___lwdiv
  1752  02E3                     ___lwdiv:	
  1753                           
  1754                           ;incstack = 0
  1755                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  1756  02E3  01F5               	clrf	___lwdiv@quotient
  1757  02E4  01F6               	clrf	___lwdiv@quotient+1
  1758  02E5  0870               	movf	___lwdiv@divisor,w
  1759  02E6  0471               	iorwf	___lwdiv@divisor+1,w
  1760  02E7  1903               	btfsc	3,2
  1761  02E8  2B12               	goto	l1262
  1762  02E9  01F7               	clrf	___lwdiv@counter
  1763  02EA  0AF7               	incf	___lwdiv@counter,f
  1764  02EB                     l1250:	
  1765  02EB  1BF1               	btfsc	___lwdiv@divisor+1,7
  1766  02EC  2AF7               	goto	l1252
  1767  02ED  3001               	movlw	1
  1768  02EE                     u1125:	
  1769  02EE  35F0               	lslf	___lwdiv@divisor,f
  1770  02EF  0DF1               	rlf	___lwdiv@divisor+1,f
  1771  02F0  0B89               	decfsz	9,f
  1772  02F1  2AEE               	goto	u1125
  1773  02F2  3001               	movlw	1
  1774  02F3  00F4               	movwf	??___lwdiv
  1775  02F4  0874               	movf	??___lwdiv,w
  1776  02F5  07F7               	addwf	___lwdiv@counter,f
  1777  02F6  2AEB               	goto	l1250
  1778  02F7                     l1252:	
  1779  02F7  3001               	movlw	1
  1780  02F8                     u1145:	
  1781  02F8  35F5               	lslf	___lwdiv@quotient,f
  1782  02F9  0DF6               	rlf	___lwdiv@quotient+1,f
  1783  02FA  0B89               	decfsz	9,f
  1784  02FB  2AF8               	goto	u1145
  1785  02FC  0871               	movf	___lwdiv@divisor+1,w
  1786  02FD  0273               	subwf	___lwdiv@dividend+1,w
  1787  02FE  1D03               	skipz
  1788  02FF  2B02               	goto	u1155
  1789  0300  0870               	movf	___lwdiv@divisor,w
  1790  0301  0272               	subwf	___lwdiv@dividend,w
  1791  0302                     u1155:	
  1792  0302  1C03               	skipc
  1793  0303  2B09               	goto	l1258
  1794  0304  0870               	movf	___lwdiv@divisor,w
  1795  0305  02F2               	subwf	___lwdiv@dividend,f
  1796  0306  0871               	movf	___lwdiv@divisor+1,w
  1797  0307  3BF3               	subwfb	___lwdiv@dividend+1,f
  1798  0308  1475               	bsf	___lwdiv@quotient,0
  1799  0309                     l1258:	
  1800  0309  3001               	movlw	1
  1801  030A                     u1165:	
  1802  030A  36F1               	lsrf	___lwdiv@divisor+1,f
  1803  030B  0CF0               	rrf	___lwdiv@divisor,f
  1804  030C  0B89               	decfsz	9,f
  1805  030D  2B0A               	goto	u1165
  1806  030E  3001               	movlw	1
  1807  030F  02F7               	subwf	___lwdiv@counter,f
  1808  0310  1D03               	btfss	3,2
  1809  0311  2AF7               	goto	l1252
  1810  0312                     l1262:	
  1811  0312  0876               	movf	___lwdiv@quotient+1,w
  1812  0313  00F1               	movwf	?___lwdiv+1
  1813  0314  0875               	movf	___lwdiv@quotient,w
  1814  0315  00F0               	movwf	?___lwdiv
  1815  0316  0008               	return
  1816  0317                     __end_of___lwdiv:	
  1817                           
  1818                           	psect	text6
  1819  0208                     __ptext6:	
  1820 ;; *************** function _init_io *****************
  1821 ;; Defined at:
  1822 ;;		line 69 in file "main.c"
  1823 ;; Parameters:    Size  Location     Type
  1824 ;;		None
  1825 ;; Auto vars:     Size  Location     Type
  1826 ;;		None
  1827 ;; Return value:  Size  Location     Type
  1828 ;;		None               void
  1829 ;; Registers used:
  1830 ;;		status,2
  1831 ;; Tracked objects:
  1832 ;;		On entry : 0/0
  1833 ;;		On exit  : 0/0
  1834 ;;		Unchanged: 0/0
  1835 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1836 ;;      Params:         0       0       0       0
  1837 ;;      Locals:         0       0       0       0
  1838 ;;      Temps:          0       0       0       0
  1839 ;;      Totals:         0       0       0       0
  1840 ;;Total ram usage:        0 bytes
  1841 ;; Hardware stack levels used:    1
  1842 ;; This function calls:
  1843 ;;		Nothing
  1844 ;; This function is called by:
  1845 ;;		_main
  1846 ;; This function uses a non-reentrant model
  1847 ;;
  1848                           
  1849                           
  1850                           ;psect for function _init_io
  1851  0208                     _init_io:	
  1852                           
  1853                           ;main.c: 71: ANSELA = 0x00;
  1854                           
  1855                           ;incstack = 0
  1856                           ; Regs used in _init_io: [status,2]
  1857  0208  0023               	movlb	3	; select bank3
  1858  0209  018C               	clrf	12	;volatile
  1859                           
  1860                           ;main.c: 72: ANSELB = 0x00;
  1861  020A  018D               	clrf	13	;volatile
  1862                           
  1863                           ;main.c: 73: ANSELC = 0x00;
  1864  020B  018E               	clrf	14	;volatile
  1865                           
  1866                           ;main.c: 75: TRISAbits.TRISA0 = 1;
  1867  020C  0021               	movlb	1	; select bank1
  1868  020D  140C               	bsf	12,0	;volatile
  1869                           
  1870                           ;main.c: 76: TRISAbits.TRISA1 = 1;
  1871  020E  148C               	bsf	12,1	;volatile
  1872                           
  1873                           ;main.c: 77: TRISAbits.TRISA2 = 1;
  1874  020F  150C               	bsf	12,2	;volatile
  1875                           
  1876                           ;main.c: 78: TRISAbits.TRISA3 = 1;
  1877  0210  158C               	bsf	12,3	;volatile
  1878                           
  1879                           ;main.c: 79: TRISAbits.TRISA4 = 1;
  1880  0211  160C               	bsf	12,4	;volatile
  1881                           
  1882                           ;main.c: 80: TRISAbits.TRISA5 = 1;
  1883  0212  168C               	bsf	12,5	;volatile
  1884                           
  1885                           ;main.c: 82: TRISBbits.TRISB4 = 1;
  1886  0213  160D               	bsf	13,4	;volatile
  1887                           
  1888                           ;main.c: 83: TRISBbits.TRISB5 = 1;
  1889  0214  168D               	bsf	13,5	;volatile
  1890                           
  1891                           ;main.c: 84: TRISBbits.TRISB6 = 1;
  1892  0215  170D               	bsf	13,6	;volatile
  1893                           
  1894                           ;main.c: 85: TRISBbits.TRISB7 = 0;
  1895  0216  138D               	bcf	13,7	;volatile
  1896                           
  1897                           ;main.c: 87: TRISCbits.TRISC0 = 0;
  1898  0217  100E               	bcf	14,0	;volatile
  1899                           
  1900                           ;main.c: 88: TRISCbits.TRISC1 = 0;
  1901  0218  108E               	bcf	14,1	;volatile
  1902                           
  1903                           ;main.c: 89: TRISCbits.TRISC2 = 0;
  1904  0219  110E               	bcf	14,2	;volatile
  1905                           
  1906                           ;main.c: 90: TRISCbits.TRISC3 = 0;
  1907  021A  118E               	bcf	14,3	;volatile
  1908                           
  1909                           ;main.c: 91: TRISCbits.TRISC4 = 0;
  1910  021B  120E               	bcf	14,4	;volatile
  1911                           
  1912                           ;main.c: 92: TRISCbits.TRISC5 = 0;
  1913  021C  128E               	bcf	14,5	;volatile
  1914                           
  1915                           ;main.c: 93: TRISCbits.TRISC6 = 0;
  1916  021D  130E               	bcf	14,6	;volatile
  1917                           
  1918                           ;main.c: 94: TRISCbits.TRISC7 = 0;
  1919  021E  138E               	bcf	14,7	;volatile
  1920                           
  1921                           ;main.c: 96: LATCbits.LATC0 = 1;
  1922  021F  0022               	movlb	2	; select bank2
  1923  0220  140E               	bsf	14,0	;volatile
  1924                           
  1925                           ;main.c: 97: LATCbits.LATC1 = 0;
  1926  0221  108E               	bcf	14,1	;volatile
  1927                           
  1928                           ;main.c: 98: LATCbits.LATC2 = 0;
  1929  0222  110E               	bcf	14,2	;volatile
  1930  0223  0008               	return
  1931  0224                     __end_of_init_io:	
  1932                           
  1933                           	psect	text7
  1934  0244                     __ptext7:	
  1935 ;; *************** function _UART_String *****************
  1936 ;; Defined at:
  1937 ;;		line 260 in file "main.c"
  1938 ;; Parameters:    Size  Location     Type
  1939 ;;  letters         1    wreg     PTR unsigned char 
  1940 ;;		 -> main@buf(8), 
  1941 ;; Auto vars:     Size  Location     Type
  1942 ;;  letters         1    7[COMMON] PTR unsigned char 
  1943 ;;		 -> main@buf(8), 
  1944 ;;  i               2    5[COMMON] int 
  1945 ;; Return value:  Size  Location     Type
  1946 ;;		None               void
  1947 ;; Registers used:
  1948 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1949 ;; Tracked objects:
  1950 ;;		On entry : 0/0
  1951 ;;		On exit  : 0/0
  1952 ;;		Unchanged: 0/0
  1953 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1954 ;;      Params:         0       0       0       0
  1955 ;;      Locals:         3       0       0       0
  1956 ;;      Temps:          3       0       0       0
  1957 ;;      Totals:         6       0       0       0
  1958 ;;Total ram usage:        6 bytes
  1959 ;; Hardware stack levels used:    1
  1960 ;; Hardware stack levels required when called:    1
  1961 ;; This function calls:
  1962 ;;		_uart_xmit
  1963 ;; This function is called by:
  1964 ;;		_main
  1965 ;; This function uses a non-reentrant model
  1966 ;;
  1967                           
  1968                           
  1969                           ;psect for function _UART_String
  1970  0244                     _UART_String:	
  1971                           
  1972                           ;incstack = 0
  1973                           ; Regs used in _UART_String: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  1974                           ;UART_String@letters stored from wreg
  1975  0244  00F7               	movwf	UART_String@letters
  1976                           
  1977                           ;main.c: 261: int i = 0;
  1978  0245  01F5               	clrf	UART_String@i
  1979  0246  01F6               	clrf	UART_String@i+1
  1980  0247                     l1630:	
  1981                           ;main.c: 262: while(letters[i] != 0) {
  1982                           
  1983  0247  0875               	movf	UART_String@i,w
  1984  0248  0777               	addwf	UART_String@letters,w
  1985  0249  00F2               	movwf	??_UART_String
  1986  024A  0872               	movf	??_UART_String,w
  1987  024B  0086               	movwf	6
  1988  024C  0187               	clrf	7
  1989  024D  0801               	movf	1,w
  1990  024E  1903               	btfsc	3,2
  1991  024F  0008               	return
  1992                           
  1993                           ;main.c: 263: uart_xmit(letters[i++]);
  1994  0250  0875               	movf	UART_String@i,w
  1995  0251  0777               	addwf	UART_String@letters,w
  1996  0252  00F2               	movwf	??_UART_String
  1997  0253  0872               	movf	??_UART_String,w
  1998  0254  0086               	movwf	6
  1999  0255  0187               	clrf	7
  2000  0256  0801               	movf	1,w
  2001  0257  00F3               	movwf	??_UART_String+1
  2002  0258  01F4               	clrf	??_UART_String+2
  2003  0259  0873               	movf	??_UART_String+1,w
  2004  025A  00F0               	movwf	uart_xmit@mydata_byte
  2005  025B  0874               	movf	??_UART_String+2,w
  2006  025C  00F1               	movwf	uart_xmit@mydata_byte+1
  2007  025D  3181  2182  3182   	fcall	_uart_xmit
  2008  0260  3001               	movlw	1
  2009  0261  07F5               	addwf	UART_String@i,f
  2010  0262  3000               	movlw	0
  2011  0263  3DF6               	addwfc	UART_String@i+1,f
  2012  0264  2A47               	goto	l1630
  2013  0265                     __end_of_UART_String:	
  2014                           
  2015                           	psect	text8
  2016  0182                     __ptext8:	
  2017 ;; *************** function _uart_xmit *****************
  2018 ;; Defined at:
  2019 ;;		line 101 in file "main.c"
  2020 ;; Parameters:    Size  Location     Type
  2021 ;;  mydata_byte     2    0[COMMON] unsigned int 
  2022 ;; Auto vars:     Size  Location     Type
  2023 ;;		None
  2024 ;; Return value:  Size  Location     Type
  2025 ;;		None               void
  2026 ;; Registers used:
  2027 ;;		wreg
  2028 ;; Tracked objects:
  2029 ;;		On entry : 0/0
  2030 ;;		On exit  : 0/0
  2031 ;;		Unchanged: 0/0
  2032 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2033 ;;      Params:         2       0       0       0
  2034 ;;      Locals:         0       0       0       0
  2035 ;;      Temps:          0       0       0       0
  2036 ;;      Totals:         2       0       0       0
  2037 ;;Total ram usage:        2 bytes
  2038 ;; Hardware stack levels used:    1
  2039 ;; This function calls:
  2040 ;;		Nothing
  2041 ;; This function is called by:
  2042 ;;		_serial_init
  2043 ;;		_UART_String
  2044 ;;		_main
  2045 ;; This function uses a non-reentrant model
  2046 ;;
  2047                           
  2048                           
  2049                           ;psect for function _uart_xmit
  2050  0182                     _uart_xmit:	
  2051  0182                     l86:	
  2052                           ;main.c: 103: while(!TXSTAbits.TRMT);
  2053                           
  2054                           ;incstack = 0
  2055                           ; Regs used in _uart_xmit: [wreg]
  2056                           
  2057  0182  0023               	movlb	3	; select bank3
  2058  0183  1C9E               	btfss	30,1	;volatile
  2059  0184  2982               	goto	l86
  2060                           
  2061                           ;main.c: 104: TXREG = mydata_byte;
  2062  0185  0870               	movf	uart_xmit@mydata_byte,w
  2063  0186  009A               	movwf	26	;volatile
  2064  0187  0008               	return
  2065  0188                     __end_of_uart_xmit:	
  2066                           
  2067                           	psect	text9
  2068  0199                     __ptext9:	
  2069 ;; *************** function _Send_I2C_Data *****************
  2070 ;; Defined at:
  2071 ;;		line 146 in file "main.c"
  2072 ;; Parameters:    Size  Location     Type
  2073 ;;  databyte        2    0[COMMON] unsigned int 
  2074 ;; Auto vars:     Size  Location     Type
  2075 ;;		None
  2076 ;; Return value:  Size  Location     Type
  2077 ;;		None               void
  2078 ;; Registers used:
  2079 ;;		wreg
  2080 ;; Tracked objects:
  2081 ;;		On entry : 0/0
  2082 ;;		On exit  : 0/0
  2083 ;;		Unchanged: 0/0
  2084 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2085 ;;      Params:         2       0       0       0
  2086 ;;      Locals:         0       0       0       0
  2087 ;;      Temps:          0       0       0       0
  2088 ;;      Totals:         2       0       0       0
  2089 ;;Total ram usage:        2 bytes
  2090 ;; Hardware stack levels used:    1
  2091 ;; This function calls:
  2092 ;;		Nothing
  2093 ;; This function is called by:
  2094 ;;		_main
  2095 ;; This function uses a non-reentrant model
  2096 ;;
  2097                           
  2098                           
  2099                           ;psect for function _Send_I2C_Data
  2100  0199                     _Send_I2C_Data:	
  2101                           
  2102                           ;main.c: 148: PIR1bits.SSP1IF=0;
  2103                           
  2104                           ;incstack = 0
  2105                           ; Regs used in _Send_I2C_Data: [wreg]
  2106  0199  0020               	movlb	0	; select bank0
  2107  019A  1191               	bcf	17,3	;volatile
  2108                           
  2109                           ;main.c: 149: SSPBUF = databyte;
  2110  019B  0870               	movf	Send_I2C_Data@databyte,w
  2111  019C  0024               	movlb	4	; select bank4
  2112  019D  0091               	movwf	17	;volatile
  2113  019E                     l101:	
  2114                           ;main.c: 150: while(!PIR1bits.SSP1IF);
  2115                           
  2116  019E  0020               	movlb	0	; select bank0
  2117  019F  1991               	btfsc	17,3	;volatile
  2118  01A0  0008               	return
  2119  01A1  299E               	goto	l101
  2120  01A2                     __end_of_Send_I2C_Data:	
  2121                           
  2122                           	psect	text10
  2123  01A2                     __ptext10:	
  2124 ;; *************** function _RX_I2C_Data *****************
  2125 ;; Defined at:
  2126 ;;		line 153 in file "main.c"
  2127 ;; Parameters:    Size  Location     Type
  2128 ;;		None
  2129 ;; Auto vars:     Size  Location     Type
  2130 ;;		None
  2131 ;; Return value:  Size  Location     Type
  2132 ;;                  1    wreg      unsigned char 
  2133 ;; Registers used:
  2134 ;;		wreg
  2135 ;; Tracked objects:
  2136 ;;		On entry : 0/0
  2137 ;;		On exit  : 0/0
  2138 ;;		Unchanged: 0/0
  2139 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2140 ;;      Params:         0       0       0       0
  2141 ;;      Locals:         0       0       0       0
  2142 ;;      Temps:          1       0       0       0
  2143 ;;      Totals:         1       0       0       0
  2144 ;;Total ram usage:        1 bytes
  2145 ;; Hardware stack levels used:    1
  2146 ;; This function calls:
  2147 ;;		Nothing
  2148 ;; This function is called by:
  2149 ;;		_main
  2150 ;; This function uses a non-reentrant model
  2151 ;;
  2152                           
  2153                           
  2154                           ;psect for function _RX_I2C_Data
  2155  01A2                     _RX_I2C_Data:	
  2156                           
  2157                           ;main.c: 156: RCEN = 1;
  2158                           
  2159                           ;incstack = 0
  2160                           ; Regs used in _RX_I2C_Data: [wreg]
  2161  01A2  0024               	movlb	4	; select bank4
  2162  01A3  1596               	bsf	22,3	;volatile
  2163  01A4                     l107:	
  2164                           ;main.c: 157: while( RCEN ) continue;
  2165                           
  2166  01A4  1996               	btfsc	22,3	;volatile
  2167  01A5  29A4               	goto	l107
  2168  01A6                     l110:	
  2169                           ;main.c: 158: while( !BF ) continue;
  2170                           
  2171  01A6  1C14               	btfss	20,0	;volatile
  2172  01A7  29A6               	goto	l110
  2173                           
  2174                           ;main.c: 159: byte = SSPBUF;
  2175  01A8  0811               	movf	17,w	;volatile
  2176  01A9  00F0               	movwf	??_RX_I2C_Data
  2177  01AA  0870               	movf	??_RX_I2C_Data,w
  2178  01AB  0020               	movlb	0	; select bank0
  2179  01AC  00D6               	movwf	_byte
  2180  01AD  0008               	return
  2181  01AE                     __end_of_RX_I2C_Data:	
  2182                           ;main.c: 160: return byte;
  2183                           ;	Return value of _RX_I2C_Data is never used
  2184                           
  2185                           
  2186                           	psect	text11
  2187  0188                     __ptext11:	
  2188 ;; *************** function _I2C_restart *****************
  2189 ;; Defined at:
  2190 ;;		line 214 in file "main.c"
  2191 ;; Parameters:    Size  Location     Type
  2192 ;;		None
  2193 ;; Auto vars:     Size  Location     Type
  2194 ;;		None
  2195 ;; Return value:  Size  Location     Type
  2196 ;;		None               void
  2197 ;; Registers used:
  2198 ;;		wreg, status,2, status,0, pclath, cstack
  2199 ;; Tracked objects:
  2200 ;;		On entry : 0/0
  2201 ;;		On exit  : 0/0
  2202 ;;		Unchanged: 0/0
  2203 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2204 ;;      Params:         0       0       0       0
  2205 ;;      Locals:         0       0       0       0
  2206 ;;      Temps:          0       0       0       0
  2207 ;;      Totals:         0       0       0       0
  2208 ;;Total ram usage:        0 bytes
  2209 ;; Hardware stack levels used:    1
  2210 ;; Hardware stack levels required when called:    1
  2211 ;; This function calls:
  2212 ;;		_I2C_check_idle
  2213 ;; This function is called by:
  2214 ;;		_main
  2215 ;; This function uses a non-reentrant model
  2216 ;;
  2217                           
  2218                           
  2219                           ;psect for function _I2C_restart
  2220  0188                     _I2C_restart:	
  2221                           
  2222                           ;main.c: 216: I2C_check_idle();
  2223                           
  2224                           ;incstack = 0
  2225                           ; Regs used in _I2C_restart: [wreg+status,2+status,0+pclath+cstack]
  2226  0188  3181  21F8  3181   	fcall	_I2C_check_idle
  2227                           
  2228                           ;main.c: 217: RSEN = 1;
  2229  018B  0024               	movlb	4	; select bank4
  2230  018C  1496               	bsf	22,1	;volatile
  2231  018D                     l139:	
  2232                           ;main.c: 218: while( RSEN ) continue;
  2233                           
  2234  018D  1C96               	btfss	22,1	;volatile
  2235  018E  0008               	return
  2236  018F  298D               	goto	l139
  2237  0190                     __end_of_I2C_restart:	
  2238                           
  2239                           	psect	text12
  2240  01F8                     __ptext12:	
  2241 ;; *************** function _I2C_check_idle *****************
  2242 ;; Defined at:
  2243 ;;		line 200 in file "main.c"
  2244 ;; Parameters:    Size  Location     Type
  2245 ;;		None
  2246 ;; Auto vars:     Size  Location     Type
  2247 ;;  byte2           1    2[COMMON] unsigned char 
  2248 ;;  byte1           1    1[COMMON] unsigned char 
  2249 ;; Return value:  Size  Location     Type
  2250 ;;		None               void
  2251 ;; Registers used:
  2252 ;;		wreg, status,2, status,0
  2253 ;; Tracked objects:
  2254 ;;		On entry : 0/0
  2255 ;;		On exit  : 0/0
  2256 ;;		Unchanged: 0/0
  2257 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2258 ;;      Params:         0       0       0       0
  2259 ;;      Locals:         2       0       0       0
  2260 ;;      Temps:          1       0       0       0
  2261 ;;      Totals:         3       0       0       0
  2262 ;;Total ram usage:        3 bytes
  2263 ;; Hardware stack levels used:    1
  2264 ;; This function calls:
  2265 ;;		Nothing
  2266 ;; This function is called by:
  2267 ;;		_I2C_restart
  2268 ;; This function uses a non-reentrant model
  2269 ;;
  2270                           
  2271                           
  2272                           ;psect for function _I2C_check_idle
  2273  01F8                     _I2C_check_idle:	
  2274  01F8                     l134:	
  2275                           ;incstack = 0
  2276                           ; Regs used in _I2C_check_idle: [wreg+status,2+status,0]
  2277                           ;main.c: 202: unsigned char byte1;
  2278                           ;main.c: 203: unsigned char byte2;
  2279                           ;main.c: 205: do
  2280                           
  2281                           
  2282                           ;main.c: 206: {
  2283                           ;main.c: 207: byte1 = SSPSTAT & 0x04;
  2284  01F8  0024               	movlb	4	; select bank4
  2285  01F9  0814               	movf	20,w	;volatile
  2286  01FA  3904               	andlw	4
  2287  01FB  00F0               	movwf	??_I2C_check_idle
  2288  01FC  0870               	movf	??_I2C_check_idle,w
  2289  01FD  00F1               	movwf	I2C_check_idle@byte1
  2290                           
  2291                           ;main.c: 208: byte2 = SSPCON2 & 0x1F;
  2292  01FE  0816               	movf	22,w	;volatile
  2293  01FF  391F               	andlw	31
  2294  0200  00F0               	movwf	??_I2C_check_idle
  2295  0201  0870               	movf	??_I2C_check_idle,w
  2296  0202  00F2               	movwf	I2C_check_idle@byte2
  2297                           
  2298                           ;main.c: 209: } while( byte1 | byte2 );
  2299  0203  0871               	movf	I2C_check_idle@byte1,w
  2300  0204  0472               	iorwf	I2C_check_idle@byte2,w
  2301  0205  1903               	btfsc	3,2
  2302  0206  0008               	return
  2303  0207  29F8               	goto	l134
  2304  0208                     __end_of_I2C_check_idle:	
  2305                           
  2306                           	psect	text13
  2307  01AE                     __ptext13:	
  2308 ;; *************** function _I2C_Stop_Bit *****************
  2309 ;; Defined at:
  2310 ;;		line 221 in file "main.c"
  2311 ;; Parameters:    Size  Location     Type
  2312 ;;		None
  2313 ;; Auto vars:     Size  Location     Type
  2314 ;;		None
  2315 ;; Return value:  Size  Location     Type
  2316 ;;		None               void
  2317 ;; Registers used:
  2318 ;;		wreg
  2319 ;; Tracked objects:
  2320 ;;		On entry : 0/0
  2321 ;;		On exit  : 0/0
  2322 ;;		Unchanged: 0/0
  2323 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2324 ;;      Params:         0       0       0       0
  2325 ;;      Locals:         0       0       0       0
  2326 ;;      Temps:          0       0       0       0
  2327 ;;      Totals:         0       0       0       0
  2328 ;;Total ram usage:        0 bytes
  2329 ;; Hardware stack levels used:    1
  2330 ;; This function calls:
  2331 ;;		Nothing
  2332 ;; This function is called by:
  2333 ;;		_main
  2334 ;; This function uses a non-reentrant model
  2335 ;;
  2336                           
  2337                           
  2338                           ;psect for function _I2C_Stop_Bit
  2339  01AE                     _I2C_Stop_Bit:	
  2340                           
  2341                           ;main.c: 223: PIR1bits.SSP1IF=0;
  2342                           
  2343                           ;incstack = 0
  2344                           ; Regs used in _I2C_Stop_Bit: [wreg]
  2345  01AE  0020               	movlb	0	; select bank0
  2346  01AF  1191               	bcf	17,3	;volatile
  2347                           
  2348                           ;main.c: 224: SSPCON2bits.PEN=1;
  2349  01B0  0024               	movlb	4	; select bank4
  2350  01B1  1516               	bsf	22,2	;volatile
  2351  01B2                     l1608:	
  2352                           ;main.c: 225: while(!PIR1bits.SSP1IF)
  2353                           
  2354  01B2  0020               	movlb	0	; select bank0
  2355  01B3  1991               	btfsc	17,3	;volatile
  2356  01B4  0008               	return
  2357                           
  2358                           ;main.c: 226: {
  2359                           ;main.c: 227: i = 1;
  2360  01B5  3001               	movlw	1
  2361  01B6  0020               	movlb	0	; select bank0
  2362  01B7  00D4               	movwf	_i
  2363  01B8  3000               	movlw	0
  2364  01B9  00D5               	movwf	_i+1
  2365  01BA  29B2               	goto	l1608
  2366  01BB                     __end_of_I2C_Stop_Bit:	
  2367                           
  2368                           	psect	text14
  2369  01C9                     __ptext14:	
  2370 ;; *************** function _I2C_Start_Bit *****************
  2371 ;; Defined at:
  2372 ;;		line 189 in file "main.c"
  2373 ;; Parameters:    Size  Location     Type
  2374 ;;		None
  2375 ;; Auto vars:     Size  Location     Type
  2376 ;;		None
  2377 ;; Return value:  Size  Location     Type
  2378 ;;		None               void
  2379 ;; Registers used:
  2380 ;;		wreg
  2381 ;; Tracked objects:
  2382 ;;		On entry : 0/0
  2383 ;;		On exit  : 0/0
  2384 ;;		Unchanged: 0/0
  2385 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2386 ;;      Params:         0       0       0       0
  2387 ;;      Locals:         0       0       0       0
  2388 ;;      Temps:          0       0       0       0
  2389 ;;      Totals:         0       0       0       0
  2390 ;;Total ram usage:        0 bytes
  2391 ;; Hardware stack levels used:    1
  2392 ;; This function calls:
  2393 ;;		Nothing
  2394 ;; This function is called by:
  2395 ;;		_main
  2396 ;; This function uses a non-reentrant model
  2397 ;;
  2398                           
  2399                           
  2400                           ;psect for function _I2C_Start_Bit
  2401  01C9                     _I2C_Start_Bit:	
  2402                           
  2403                           ;main.c: 191: PIR1bits.SSP1IF=0;
  2404                           
  2405                           ;incstack = 0
  2406                           ; Regs used in _I2C_Start_Bit: [wreg]
  2407  01C9  0020               	movlb	0	; select bank0
  2408  01CA  1191               	bcf	17,3	;volatile
  2409                           
  2410                           ;main.c: 192: SSPCON2bits.SEN=1;
  2411  01CB  0024               	movlb	4	; select bank4
  2412  01CC  1416               	bsf	22,0	;volatile
  2413  01CD                     l1598:	
  2414                           ;main.c: 193: while(!PIR1bits.SSP1IF)
  2415                           
  2416  01CD  0020               	movlb	0	; select bank0
  2417  01CE  1991               	btfsc	17,3	;volatile
  2418  01CF  29D6               	goto	l130
  2419                           
  2420                           ;main.c: 194: {
  2421                           ;main.c: 195: i = 1;
  2422  01D0  3001               	movlw	1
  2423  01D1  0020               	movlb	0	; select bank0
  2424  01D2  00D4               	movwf	_i
  2425  01D3  3000               	movlw	0
  2426  01D4  00D5               	movwf	_i+1
  2427  01D5  29CD               	goto	l1598
  2428  01D6                     l130:	
  2429                           
  2430                           ;main.c: 196: }
  2431                           ;main.c: 197: PIR1bits.SSP1IF=0;
  2432  01D6  1191               	bcf	17,3	;volatile
  2433  01D7  0008               	return
  2434  01D8                     __end_of_I2C_Start_Bit:	
  2435                           
  2436                           	psect	text15
  2437  01BB                     __ptext15:	
  2438 ;; *************** function _I2C_NAK *****************
  2439 ;; Defined at:
  2440 ;;		line 232 in file "main.c"
  2441 ;; Parameters:    Size  Location     Type
  2442 ;;		None
  2443 ;; Auto vars:     Size  Location     Type
  2444 ;;		None
  2445 ;; Return value:  Size  Location     Type
  2446 ;;		None               void
  2447 ;; Registers used:
  2448 ;;		wreg
  2449 ;; Tracked objects:
  2450 ;;		On entry : 0/0
  2451 ;;		On exit  : 0/0
  2452 ;;		Unchanged: 0/0
  2453 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2454 ;;      Params:         0       0       0       0
  2455 ;;      Locals:         0       0       0       0
  2456 ;;      Temps:          0       0       0       0
  2457 ;;      Totals:         0       0       0       0
  2458 ;;Total ram usage:        0 bytes
  2459 ;; Hardware stack levels used:    1
  2460 ;; This function calls:
  2461 ;;		Nothing
  2462 ;; This function is called by:
  2463 ;;		_main
  2464 ;; This function uses a non-reentrant model
  2465 ;;
  2466                           
  2467                           
  2468                           ;psect for function _I2C_NAK
  2469  01BB                     _I2C_NAK:	
  2470                           
  2471                           ;main.c: 234: PIR1bits.SSP1IF=0;
  2472                           
  2473                           ;incstack = 0
  2474                           ; Regs used in _I2C_NAK: [wreg]
  2475  01BB  0020               	movlb	0	; select bank0
  2476  01BC  1191               	bcf	17,3	;volatile
  2477                           
  2478                           ;main.c: 235: SSP1CON2bits.ACKDT=1;
  2479  01BD  0024               	movlb	4	; select bank4
  2480  01BE  1696               	bsf	22,5	;volatile
  2481                           
  2482                           ;main.c: 236: SSP1CON2bits.ACKEN=1;
  2483  01BF  1616               	bsf	22,4	;volatile
  2484  01C0                     l1614:	
  2485                           ;main.c: 237: while(!PIR1bits.SSP1IF)
  2486                           
  2487  01C0  0020               	movlb	0	; select bank0
  2488  01C1  1991               	btfsc	17,3	;volatile
  2489  01C2  0008               	return
  2490                           
  2491                           ;main.c: 238: {
  2492                           ;main.c: 239: i = 1;
  2493  01C3  3001               	movlw	1
  2494  01C4  0020               	movlb	0	; select bank0
  2495  01C5  00D4               	movwf	_i
  2496  01C6  3000               	movlw	0
  2497  01C7  00D5               	movwf	_i+1
  2498  01C8  29C0               	goto	l1614
  2499  01C9                     __end_of_I2C_NAK:	
  2500                           
  2501                           	psect	text16
  2502  01E8                     __ptext16:	
  2503 ;; *************** function _I2C_Control_Write *****************
  2504 ;; Defined at:
  2505 ;;		line 163 in file "main.c"
  2506 ;; Parameters:    Size  Location     Type
  2507 ;;		None
  2508 ;; Auto vars:     Size  Location     Type
  2509 ;;		None
  2510 ;; Return value:  Size  Location     Type
  2511 ;;		None               void
  2512 ;; Registers used:
  2513 ;;		wreg
  2514 ;; Tracked objects:
  2515 ;;		On entry : 0/0
  2516 ;;		On exit  : 0/0
  2517 ;;		Unchanged: 0/0
  2518 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2519 ;;      Params:         0       0       0       0
  2520 ;;      Locals:         0       0       0       0
  2521 ;;      Temps:          0       0       0       0
  2522 ;;      Totals:         0       0       0       0
  2523 ;;Total ram usage:        0 bytes
  2524 ;; Hardware stack levels used:    1
  2525 ;; This function calls:
  2526 ;;		Nothing
  2527 ;; This function is called by:
  2528 ;;		_main
  2529 ;; This function uses a non-reentrant model
  2530 ;;
  2531                           
  2532                           
  2533                           ;psect for function _I2C_Control_Write
  2534  01E8                     _I2C_Control_Write:	
  2535                           
  2536                           ;main.c: 165: PIR1bits.SSP1IF=0;
  2537                           
  2538                           ;incstack = 0
  2539                           ; Regs used in _I2C_Control_Write: [wreg]
  2540  01E8  0020               	movlb	0	; select bank0
  2541  01E9  1191               	bcf	17,3	;volatile
  2542                           
  2543                           ;main.c: 166: SSP1BUF = 0x44 << 1;
  2544  01EA  3088               	movlw	136
  2545  01EB  0024               	movlb	4	; select bank4
  2546  01EC  0091               	movwf	17	;volatile
  2547  01ED                     l1584:	
  2548                           ;main.c: 167: while(!PIR1bits.SSP1IF)
  2549                           
  2550  01ED  0020               	movlb	0	; select bank0
  2551  01EE  1991               	btfsc	17,3	;volatile
  2552  01EF  29F6               	goto	l118
  2553                           
  2554                           ;main.c: 168: {
  2555                           ;main.c: 169: i = 1;
  2556  01F0  3001               	movlw	1
  2557  01F1  0020               	movlb	0	; select bank0
  2558  01F2  00D4               	movwf	_i
  2559  01F3  3000               	movlw	0
  2560  01F4  00D5               	movwf	_i+1
  2561  01F5  29ED               	goto	l1584
  2562  01F6                     l118:	
  2563                           
  2564                           ;main.c: 171: }
  2565                           ;main.c: 172: PIR1bits.SSP1IF=0;
  2566  01F6  1191               	bcf	17,3	;volatile
  2567  01F7  0008               	return
  2568  01F8                     __end_of_I2C_Control_Write:	
  2569                           
  2570                           	psect	text17
  2571  01D8                     __ptext17:	
  2572 ;; *************** function _I2C_Control_Read *****************
  2573 ;; Defined at:
  2574 ;;		line 176 in file "main.c"
  2575 ;; Parameters:    Size  Location     Type
  2576 ;;		None
  2577 ;; Auto vars:     Size  Location     Type
  2578 ;;		None
  2579 ;; Return value:  Size  Location     Type
  2580 ;;		None               void
  2581 ;; Registers used:
  2582 ;;		wreg
  2583 ;; Tracked objects:
  2584 ;;		On entry : 0/0
  2585 ;;		On exit  : 0/0
  2586 ;;		Unchanged: 0/0
  2587 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2588 ;;      Params:         0       0       0       0
  2589 ;;      Locals:         0       0       0       0
  2590 ;;      Temps:          0       0       0       0
  2591 ;;      Totals:         0       0       0       0
  2592 ;;Total ram usage:        0 bytes
  2593 ;; Hardware stack levels used:    1
  2594 ;; This function calls:
  2595 ;;		Nothing
  2596 ;; This function is called by:
  2597 ;;		_main
  2598 ;; This function uses a non-reentrant model
  2599 ;;
  2600                           
  2601                           
  2602                           ;psect for function _I2C_Control_Read
  2603  01D8                     _I2C_Control_Read:	
  2604                           
  2605                           ;main.c: 178: PIR1bits.SSP1IF=0;
  2606                           
  2607                           ;incstack = 0
  2608                           ; Regs used in _I2C_Control_Read: [wreg]
  2609  01D8  0020               	movlb	0	; select bank0
  2610  01D9  1191               	bcf	17,3	;volatile
  2611                           
  2612                           ;main.c: 179: SSP1BUF = (0x44 << 1) + 1;
  2613  01DA  3089               	movlw	137
  2614  01DB  0024               	movlb	4	; select bank4
  2615  01DC  0091               	movwf	17	;volatile
  2616  01DD                     l1592:	
  2617                           ;main.c: 180: while(!PIR1bits.SSP1IF){
  2618                           
  2619  01DD  0020               	movlb	0	; select bank0
  2620  01DE  1991               	btfsc	17,3	;volatile
  2621  01DF  29E6               	goto	l124
  2622                           
  2623                           ;main.c: 181: i = 1;
  2624  01E0  3001               	movlw	1
  2625  01E1  0020               	movlb	0	; select bank0
  2626  01E2  00D4               	movwf	_i
  2627  01E3  3000               	movlw	0
  2628  01E4  00D5               	movwf	_i+1
  2629  01E5  29DD               	goto	l1592
  2630  01E6                     l124:	
  2631                           
  2632                           ;main.c: 182: }
  2633                           ;main.c: 186: PIR1bits.SSP1IF=0;
  2634  01E6  1191               	bcf	17,3	;volatile
  2635  01E7  0008               	return
  2636  01E8                     __end_of_I2C_Control_Read:	
  2637                           
  2638                           	psect	text18
  2639  0190                     __ptext18:	
  2640 ;; *************** function _I2C_ACK *****************
  2641 ;; Defined at:
  2642 ;;		line 138 in file "main.c"
  2643 ;; Parameters:    Size  Location     Type
  2644 ;;		None
  2645 ;; Auto vars:     Size  Location     Type
  2646 ;;		None
  2647 ;; Return value:  Size  Location     Type
  2648 ;;		None               void
  2649 ;; Registers used:
  2650 ;;		None
  2651 ;; Tracked objects:
  2652 ;;		On entry : 0/0
  2653 ;;		On exit  : 0/0
  2654 ;;		Unchanged: 0/0
  2655 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2656 ;;      Params:         0       0       0       0
  2657 ;;      Locals:         0       0       0       0
  2658 ;;      Temps:          0       0       0       0
  2659 ;;      Totals:         0       0       0       0
  2660 ;;Total ram usage:        0 bytes
  2661 ;; Hardware stack levels used:    1
  2662 ;; This function calls:
  2663 ;;		Nothing
  2664 ;; This function is called by:
  2665 ;;		_main
  2666 ;; This function uses a non-reentrant model
  2667 ;;
  2668                           
  2669                           
  2670                           ;psect for function _I2C_ACK
  2671  0190                     _I2C_ACK:	
  2672                           
  2673                           ;main.c: 140: PIR1bits.SSP1IF=0;
  2674                           
  2675                           ;incstack = 0
  2676                           ; Regs used in _I2C_ACK: []
  2677  0190  0020               	movlb	0	; select bank0
  2678  0191  1191               	bcf	17,3	;volatile
  2679                           
  2680                           ;main.c: 141: SSP1CON2bits.ACKDT=0;
  2681  0192  0024               	movlb	4	; select bank4
  2682  0193  1296               	bcf	22,5	;volatile
  2683                           
  2684                           ;main.c: 142: SSP1CON2bits.ACKEN=1;
  2685  0194  1616               	bsf	22,4	;volatile
  2686  0195                     l95:	
  2687                           ;main.c: 143: while(!PIR1bits.SSP1IF);
  2688                           
  2689  0195  0020               	movlb	0	; select bank0
  2690  0196  1991               	btfsc	17,3	;volatile
  2691  0197  0008               	return
  2692  0198  2995               	goto	l95
  2693  0199                     __end_of_I2C_ACK:	
  2694                           
  2695                           	psect	text19
  2696  0317                     __ptext19:	
  2697 ;; *************** function _CalcTemp *****************
  2698 ;; Defined at:
  2699 ;;		line 244 in file "main.c"
  2700 ;; Parameters:    Size  Location     Type
  2701 ;;  b1              1    wreg     unsigned char 
  2702 ;;  b2              1   10[BANK0 ] unsigned char 
  2703 ;; Auto vars:     Size  Location     Type
  2704 ;;  b1              1   23[BANK0 ] unsigned char 
  2705 ;;  ans             3   20[BANK0 ] float 
  2706 ;;  rcv_val         3   17[BANK0 ] float 
  2707 ;; Return value:  Size  Location     Type
  2708 ;;                  2   10[BANK0 ] int 
  2709 ;; Registers used:
  2710 ;;		wreg, status,2, status,0, pclath, cstack
  2711 ;; Tracked objects:
  2712 ;;		On entry : 0/0
  2713 ;;		On exit  : 0/0
  2714 ;;		Unchanged: 0/0
  2715 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2716 ;;      Params:         0       2       0       0
  2717 ;;      Locals:         0       7       0       0
  2718 ;;      Temps:          0       5       0       0
  2719 ;;      Totals:         0      14       0       0
  2720 ;;Total ram usage:       14 bytes
  2721 ;; Hardware stack levels used:    1
  2722 ;; Hardware stack levels required when called:    2
  2723 ;; This function calls:
  2724 ;;		___awtoft
  2725 ;;		___ftmul
  2726 ;;		___fttol
  2727 ;; This function is called by:
  2728 ;;		_main
  2729 ;; This function uses a non-reentrant model
  2730 ;;
  2731                           
  2732                           
  2733                           ;psect for function _CalcTemp
  2734  0317                     _CalcTemp:	
  2735                           
  2736                           ;incstack = 0
  2737                           ; Regs used in _CalcTemp: [wreg+status,2+status,0+pclath+cstack]
  2738                           ;CalcTemp@b1 stored from wreg
  2739  0317  0020               	movlb	0	; select bank0
  2740  0318  00B7               	movwf	CalcTemp@b1
  2741                           
  2742                           ;main.c: 245: float rcv_val = (b1 << 8) + b2;
  2743  0319  082A               	movf	CalcTemp@b2,w
  2744  031A  00AC               	movwf	??_CalcTemp
  2745  031B  01AD               	clrf	??_CalcTemp+1
  2746  031C  0837               	movf	CalcTemp@b1,w
  2747  031D  00AE               	movwf	??_CalcTemp+2
  2748  031E  01AF               	clrf	??_CalcTemp+3
  2749  031F  082E               	movf	??_CalcTemp+2,w
  2750  0320  00AF               	movwf	??_CalcTemp+3
  2751  0321  01AE               	clrf	??_CalcTemp+2
  2752  0322  082C               	movf	??_CalcTemp,w
  2753  0323  072E               	addwf	??_CalcTemp+2,w
  2754  0324  00F8               	movwf	___awtoft@c
  2755  0325  082D               	movf	??_CalcTemp+1,w
  2756  0326  3D2F               	addwfc	??_CalcTemp+3,w
  2757  0327  00F9               	movwf	___awtoft@c+1
  2758  0328  3182  2224  3183   	fcall	___awtoft
  2759  032B  0878               	movf	?___awtoft,w
  2760  032C  0020               	movlb	0	; select bank0
  2761  032D  00B1               	movwf	CalcTemp@rcv_val
  2762  032E  0879               	movf	?___awtoft+1,w
  2763  032F  00B2               	movwf	CalcTemp@rcv_val+1
  2764  0330  087A               	movf	?___awtoft+2,w
  2765  0331  00B3               	movwf	CalcTemp@rcv_val+2
  2766                           
  2767                           ;main.c: 246: float ans = rcv_val * 0.0015259;
  2768  0332  3001               	movlw	1
  2769  0333  00F8               	movwf	___ftmul@f1
  2770  0334  30C8               	movlw	200
  2771  0335  00F9               	movwf	___ftmul@f1+1
  2772  0336  303A               	movlw	58
  2773  0337  00FA               	movwf	___ftmul@f1+2
  2774  0338  0831               	movf	CalcTemp@rcv_val,w
  2775  0339  00FB               	movwf	___ftmul@f2
  2776  033A  0832               	movf	CalcTemp@rcv_val+1,w
  2777  033B  00FC               	movwf	___ftmul@f2+1
  2778  033C  0833               	movf	CalcTemp@rcv_val+2,w
  2779  033D  00FD               	movwf	___ftmul@f2+2
  2780  033E  3185  2507  3183   	fcall	___ftmul
  2781  0341  0878               	movf	?___ftmul,w
  2782  0342  0020               	movlb	0	; select bank0
  2783  0343  00B4               	movwf	CalcTemp@ans
  2784  0344  0879               	movf	?___ftmul+1,w
  2785  0345  00B5               	movwf	CalcTemp@ans+1
  2786  0346  087A               	movf	?___ftmul+2,w
  2787  0347  00B6               	movwf	CalcTemp@ans+2
  2788                           
  2789                           ;main.c: 248: return (int) ans;
  2790  0348  0834               	movf	CalcTemp@ans,w
  2791  0349  00F0               	movwf	___fttol@f1
  2792  034A  0835               	movf	CalcTemp@ans+1,w
  2793  034B  00F1               	movwf	___fttol@f1+1
  2794  034C  0836               	movf	CalcTemp@ans+2,w
  2795  034D  00F2               	movwf	___fttol@f1+2
  2796  034E  3184  2481         	fcall	___fttol
  2797  0350  0871               	movf	?___fttol+1,w
  2798  0351  0020               	movlb	0	; select bank0
  2799  0352  00AB               	movwf	?_CalcTemp+1
  2800  0353  0870               	movf	?___fttol,w
  2801  0354  00AA               	movwf	?_CalcTemp
  2802  0355  0008               	return
  2803  0356                     __end_of_CalcTemp:	
  2804                           
  2805                           	psect	text20
  2806  041C                     __ptext20:	
  2807 ;; *************** function _CalcHumid *****************
  2808 ;; Defined at:
  2809 ;;		line 251 in file "main.c"
  2810 ;; Parameters:    Size  Location     Type
  2811 ;;  b1              1    wreg     unsigned char 
  2812 ;;  b2              1   23[BANK0 ] unsigned char 
  2813 ;; Auto vars:     Size  Location     Type
  2814 ;;  b1              1   33[BANK0 ] unsigned char 
  2815 ;;  ans             3   34[BANK0 ] float 
  2816 ;;  rcv_val         3   30[BANK0 ] float 
  2817 ;; Return value:  Size  Location     Type
  2818 ;;                  2   23[BANK0 ] int 
  2819 ;; Registers used:
  2820 ;;		wreg, status,2, status,0, pclath, cstack
  2821 ;; Tracked objects:
  2822 ;;		On entry : 0/0
  2823 ;;		On exit  : 0/0
  2824 ;;		Unchanged: 0/0
  2825 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2826 ;;      Params:         0       2       0       0
  2827 ;;      Locals:         0       7       0       0
  2828 ;;      Temps:          0       5       0       0
  2829 ;;      Totals:         0      14       0       0
  2830 ;;Total ram usage:       14 bytes
  2831 ;; Hardware stack levels used:    1
  2832 ;; Hardware stack levels required when called:    2
  2833 ;; This function calls:
  2834 ;;		___awtoft
  2835 ;;		___ftadd
  2836 ;;		___ftmul
  2837 ;;		___fttol
  2838 ;; This function is called by:
  2839 ;;		_main
  2840 ;; This function uses a non-reentrant model
  2841 ;;
  2842                           
  2843                           
  2844                           ;psect for function _CalcHumid
  2845  041C                     _CalcHumid:	
  2846                           
  2847                           ;incstack = 0
  2848                           ; Regs used in _CalcHumid: [wreg+status,2+status,0+pclath+cstack]
  2849                           ;CalcHumid@b1 stored from wreg
  2850  041C  0020               	movlb	0	; select bank0
  2851  041D  00C1               	movwf	CalcHumid@b1
  2852                           
  2853                           ;main.c: 252: float rcv_val = (b1 << 8) + b2;
  2854  041E  0837               	movf	CalcHumid@b2,w
  2855  041F  00B9               	movwf	??_CalcHumid
  2856  0420  01BA               	clrf	??_CalcHumid+1
  2857  0421  0841               	movf	CalcHumid@b1,w
  2858  0422  00BB               	movwf	??_CalcHumid+2
  2859  0423  01BC               	clrf	??_CalcHumid+3
  2860  0424  083B               	movf	??_CalcHumid+2,w
  2861  0425  00BC               	movwf	??_CalcHumid+3
  2862  0426  01BB               	clrf	??_CalcHumid+2
  2863  0427  0839               	movf	??_CalcHumid,w
  2864  0428  073B               	addwf	??_CalcHumid+2,w
  2865  0429  00F8               	movwf	___awtoft@c
  2866  042A  083A               	movf	??_CalcHumid+1,w
  2867  042B  3D3C               	addwfc	??_CalcHumid+3,w
  2868  042C  00F9               	movwf	___awtoft@c+1
  2869  042D  3182  2224  3184   	fcall	___awtoft
  2870  0430  0878               	movf	?___awtoft,w
  2871  0431  0020               	movlb	0	; select bank0
  2872  0432  00BE               	movwf	CalcHumid@rcv_val
  2873  0433  0879               	movf	?___awtoft+1,w
  2874  0434  00BF               	movwf	CalcHumid@rcv_val+1
  2875  0435  087A               	movf	?___awtoft+2,w
  2876  0436  00C0               	movwf	CalcHumid@rcv_val+2
  2877                           
  2878                           ;main.c: 253: float ans = ((0.002670329 * rcv_val) - 45);
  2879  0437  3000               	movlw	0
  2880  0438  00AA               	movwf	___ftadd@f1
  2881  0439  3034               	movlw	52
  2882  043A  00AB               	movwf	___ftadd@f1+1
  2883  043B  30C2               	movlw	194
  2884  043C  00AC               	movwf	___ftadd@f1+2
  2885  043D  3001               	movlw	1
  2886  043E  00F8               	movwf	___ftmul@f1
  2887  043F  302F               	movlw	47
  2888  0440  00F9               	movwf	___ftmul@f1+1
  2889  0441  303B               	movlw	59
  2890  0442  00FA               	movwf	___ftmul@f1+2
  2891  0443  083E               	movf	CalcHumid@rcv_val,w
  2892  0444  00FB               	movwf	___ftmul@f2
  2893  0445  083F               	movf	CalcHumid@rcv_val+1,w
  2894  0446  00FC               	movwf	___ftmul@f2+1
  2895  0447  0840               	movf	CalcHumid@rcv_val+2,w
  2896  0448  00FD               	movwf	___ftmul@f2+2
  2897  0449  3185  2507  3184   	fcall	___ftmul
  2898  044C  0878               	movf	?___ftmul,w
  2899  044D  0020               	movlb	0	; select bank0
  2900  044E  00AD               	movwf	___ftadd@f2
  2901  044F  0879               	movf	?___ftmul+1,w
  2902  0450  00AE               	movwf	___ftadd@f2+1
  2903  0451  087A               	movf	?___ftmul+2,w
  2904  0452  00AF               	movwf	___ftadd@f2+2
  2905  0453  3185  25BA  3184   	fcall	___ftadd
  2906  0456  0020               	movlb	0	; select bank0
  2907  0457  082A               	movf	?___ftadd,w
  2908  0458  00C2               	movwf	CalcHumid@ans
  2909  0459  082B               	movf	?___ftadd+1,w
  2910  045A  00C3               	movwf	CalcHumid@ans+1
  2911  045B  082C               	movf	?___ftadd+2,w
  2912  045C  00C4               	movwf	CalcHumid@ans+2
  2913                           
  2914                           ;main.c: 254: ans = ans * 100;
  2915  045D  3000               	movlw	0
  2916  045E  00F8               	movwf	___ftmul@f1
  2917  045F  30C8               	movlw	200
  2918  0460  00F9               	movwf	___ftmul@f1+1
  2919  0461  3042               	movlw	66
  2920  0462  00FA               	movwf	___ftmul@f1+2
  2921  0463  0842               	movf	CalcHumid@ans,w
  2922  0464  00FB               	movwf	___ftmul@f2
  2923  0465  0843               	movf	CalcHumid@ans+1,w
  2924  0466  00FC               	movwf	___ftmul@f2+1
  2925  0467  0844               	movf	CalcHumid@ans+2,w
  2926  0468  00FD               	movwf	___ftmul@f2+2
  2927  0469  3185  2507  3184   	fcall	___ftmul
  2928  046C  0878               	movf	?___ftmul,w
  2929  046D  0020               	movlb	0	; select bank0
  2930  046E  00C2               	movwf	CalcHumid@ans
  2931  046F  0879               	movf	?___ftmul+1,w
  2932  0470  00C3               	movwf	CalcHumid@ans+1
  2933  0471  087A               	movf	?___ftmul+2,w
  2934  0472  00C4               	movwf	CalcHumid@ans+2
  2935                           
  2936                           ;main.c: 256: return (int) ans;
  2937  0473  0842               	movf	CalcHumid@ans,w
  2938  0474  00F0               	movwf	___fttol@f1
  2939  0475  0843               	movf	CalcHumid@ans+1,w
  2940  0476  00F1               	movwf	___fttol@f1+1
  2941  0477  0844               	movf	CalcHumid@ans+2,w
  2942  0478  00F2               	movwf	___fttol@f1+2
  2943  0479  3184  2481         	fcall	___fttol
  2944  047B  0871               	movf	?___fttol+1,w
  2945  047C  0020               	movlb	0	; select bank0
  2946  047D  00B8               	movwf	?_CalcHumid+1
  2947  047E  0870               	movf	?___fttol,w
  2948  047F  00B7               	movwf	?_CalcHumid
  2949  0480  0008               	return
  2950  0481                     __end_of_CalcHumid:	
  2951                           
  2952                           	psect	text21
  2953  0481                     __ptext21:	
  2954 ;; *************** function ___fttol *****************
  2955 ;; Defined at:
  2956 ;;		line 44 in file "/opt/mmplabv310/xc8/sources/common/fttol.c"
  2957 ;; Parameters:    Size  Location     Type
  2958 ;;  f1              3    0[COMMON] float 
  2959 ;; Auto vars:     Size  Location     Type
  2960 ;;  lval            4    9[COMMON] unsigned long 
  2961 ;;  exp1            1   13[COMMON] unsigned char 
  2962 ;;  sign1           1    8[COMMON] unsigned char 
  2963 ;; Return value:  Size  Location     Type
  2964 ;;                  4    0[COMMON] long 
  2965 ;; Registers used:
  2966 ;;		wreg, status,2, status,0
  2967 ;; Tracked objects:
  2968 ;;		On entry : 0/0
  2969 ;;		On exit  : 0/0
  2970 ;;		Unchanged: 0/0
  2971 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2972 ;;      Params:         4       0       0       0
  2973 ;;      Locals:         6       0       0       0
  2974 ;;      Temps:          4       0       0       0
  2975 ;;      Totals:        14       0       0       0
  2976 ;;Total ram usage:       14 bytes
  2977 ;; Hardware stack levels used:    1
  2978 ;; This function calls:
  2979 ;;		Nothing
  2980 ;; This function is called by:
  2981 ;;		_CalcTemp
  2982 ;;		_CalcHumid
  2983 ;; This function uses a non-reentrant model
  2984 ;;
  2985                           
  2986                           
  2987                           ;psect for function ___fttol
  2988  0481                     ___fttol:	
  2989                           
  2990                           ;incstack = 0
  2991                           ; Regs used in ___fttol: [wreg+status,2+status,0]
  2992  0481  0870               	movf	___fttol@f1,w
  2993  0482  00F4               	movwf	??___fttol
  2994  0483  0871               	movf	___fttol@f1+1,w
  2995  0484  00F5               	movwf	??___fttol+1
  2996  0485  0872               	movf	___fttol@f1+2,w
  2997  0486  00F6               	movwf	??___fttol+2
  2998  0487  1003               	clrc
  2999  0488  0D75               	rlf	??___fttol+1,w
  3000  0489  0D76               	rlf	??___fttol+2,w
  3001  048A  00F7               	movwf	??___fttol+3
  3002  048B  0877               	movf	??___fttol+3,w
  3003  048C  00FD               	movwf	___fttol@exp1
  3004  048D  087D               	movf	___fttol@exp1,w
  3005  048E  1D03               	btfss	3,2
  3006  048F  2C99               	goto	l1434
  3007  0490  3000               	movlw	0
  3008  0491  00F3               	movwf	?___fttol+3
  3009  0492  3000               	movlw	0
  3010  0493  00F2               	movwf	?___fttol+2
  3011  0494  3000               	movlw	0
  3012  0495  00F1               	movwf	?___fttol+1
  3013  0496  3000               	movlw	0
  3014  0497  00F0               	movwf	?___fttol
  3015  0498  0008               	return
  3016  0499                     l1434:	
  3017  0499  0870               	movf	___fttol@f1,w
  3018  049A  00F4               	movwf	??___fttol
  3019  049B  0871               	movf	___fttol@f1+1,w
  3020  049C  00F5               	movwf	??___fttol+1
  3021  049D  0872               	movf	___fttol@f1+2,w
  3022  049E  00F6               	movwf	??___fttol+2
  3023  049F  3017               	movlw	23
  3024  04A0                     u1635:	
  3025  04A0  36F6               	lsrf	??___fttol+2,f
  3026  04A1  0CF5               	rrf	??___fttol+1,f
  3027  04A2  0CF4               	rrf	??___fttol,f
  3028  04A3  0B89               	decfsz	9,f
  3029  04A4  2CA0               	goto	u1635
  3030  04A5  0874               	movf	??___fttol,w
  3031  04A6  00F7               	movwf	??___fttol+3
  3032  04A7  0877               	movf	??___fttol+3,w
  3033  04A8  00F8               	movwf	___fttol@sign1
  3034  04A9  17F1               	bsf	___fttol@f1+1,7
  3035  04AA  30FF               	movlw	255
  3036  04AB  05F0               	andwf	___fttol@f1,f
  3037  04AC  30FF               	movlw	255
  3038  04AD  05F1               	andwf	___fttol@f1+1,f
  3039  04AE  3000               	movlw	0
  3040  04AF  05F2               	andwf	___fttol@f1+2,f
  3041  04B0  0870               	movf	___fttol@f1,w
  3042  04B1  00F9               	movwf	___fttol@lval
  3043  04B2  0871               	movf	___fttol@f1+1,w
  3044  04B3  00FA               	movwf	___fttol@lval+1
  3045  04B4  0872               	movf	___fttol@f1+2,w
  3046  04B5  00FB               	movwf	___fttol@lval+2
  3047  04B6  01FC               	clrf	___fttol@lval+3
  3048  04B7  308E               	movlw	142
  3049  04B8  02FD               	subwf	___fttol@exp1,f
  3050  04B9  1FFD               	btfss	___fttol@exp1,7
  3051  04BA  2CD7               	goto	l1454
  3052  04BB  087D               	movf	___fttol@exp1,w
  3053  04BC  3A80               	xorlw	128
  3054  04BD  3E8F               	addlw	143
  3055  04BE  1803               	skipnc
  3056  04BF  2CC9               	goto	l1452
  3057  04C0  3000               	movlw	0
  3058  04C1  00F3               	movwf	?___fttol+3
  3059  04C2  3000               	movlw	0
  3060  04C3  00F2               	movwf	?___fttol+2
  3061  04C4  3000               	movlw	0
  3062  04C5  00F1               	movwf	?___fttol+1
  3063  04C6  3000               	movlw	0
  3064  04C7  00F0               	movwf	?___fttol
  3065  04C8  0008               	return
  3066  04C9                     l1452:	
  3067  04C9  3001               	movlw	1
  3068  04CA                     u1665:	
  3069  04CA  36FC               	lsrf	___fttol@lval+3,f
  3070  04CB  0CFB               	rrf	___fttol@lval+2,f
  3071  04CC  0CFA               	rrf	___fttol@lval+1,f
  3072  04CD  0CF9               	rrf	___fttol@lval,f
  3073  04CE  0B89               	decfsz	9,f
  3074  04CF  2CCA               	goto	u1665
  3075  04D0  3001               	movlw	1
  3076  04D1  00F4               	movwf	??___fttol
  3077  04D2  0874               	movf	??___fttol,w
  3078  04D3  07FD               	addwf	___fttol@exp1,f
  3079  04D4  1903               	btfsc	3,2
  3080  04D5  2CF0               	goto	l1462
  3081  04D6  2CC9               	goto	l1452
  3082  04D7                     l1454:	
  3083  04D7  3018               	movlw	24
  3084  04D8  027D               	subwf	___fttol@exp1,w
  3085  04D9  1C03               	skipc
  3086  04DA  2CED               	goto	l518
  3087  04DB  3000               	movlw	0
  3088  04DC  00F3               	movwf	?___fttol+3
  3089  04DD  3000               	movlw	0
  3090  04DE  00F2               	movwf	?___fttol+2
  3091  04DF  3000               	movlw	0
  3092  04E0  00F1               	movwf	?___fttol+1
  3093  04E1  3000               	movlw	0
  3094  04E2  00F0               	movwf	?___fttol
  3095  04E3  0008               	return
  3096  04E4                     l1460:	
  3097  04E4  3001               	movlw	1
  3098  04E5                     u1695:	
  3099  04E5  35F9               	lslf	___fttol@lval,f
  3100  04E6  0DFA               	rlf	___fttol@lval+1,f
  3101  04E7  0DFB               	rlf	___fttol@lval+2,f
  3102  04E8  0DFC               	rlf	___fttol@lval+3,f
  3103  04E9  0B89               	decfsz	9,f
  3104  04EA  2CE5               	goto	u1695
  3105  04EB  3001               	movlw	1
  3106  04EC  02FD               	subwf	___fttol@exp1,f
  3107  04ED                     l518:	
  3108  04ED  087D               	movf	___fttol@exp1,w
  3109  04EE  1D03               	btfss	3,2
  3110  04EF  2CE4               	goto	l1460
  3111  04F0                     l1462:	
  3112  04F0  0878               	movf	___fttol@sign1,w
  3113  04F1  1903               	btfsc	3,2
  3114  04F2  2CFE               	goto	l1466
  3115  04F3  09F9               	comf	___fttol@lval,f
  3116  04F4  09FA               	comf	___fttol@lval+1,f
  3117  04F5  09FB               	comf	___fttol@lval+2,f
  3118  04F6  09FC               	comf	___fttol@lval+3,f
  3119  04F7  0AF9               	incf	___fttol@lval,f
  3120  04F8  1903               	skipnz
  3121  04F9  0AFA               	incf	___fttol@lval+1,f
  3122  04FA  1903               	skipnz
  3123  04FB  0AFB               	incf	___fttol@lval+2,f
  3124  04FC  1903               	skipnz
  3125  04FD  0AFC               	incf	___fttol@lval+3,f
  3126  04FE                     l1466:	
  3127  04FE  087C               	movf	___fttol@lval+3,w
  3128  04FF  00F3               	movwf	?___fttol+3
  3129  0500  087B               	movf	___fttol@lval+2,w
  3130  0501  00F2               	movwf	?___fttol+2
  3131  0502  087A               	movf	___fttol@lval+1,w
  3132  0503  00F1               	movwf	?___fttol+1
  3133  0504  0879               	movf	___fttol@lval,w
  3134  0505  00F0               	movwf	?___fttol
  3135  0506  0008               	return
  3136  0507                     __end_of___fttol:	
  3137                           
  3138                           	psect	text22
  3139  0507                     __ptext22:	
  3140 ;; *************** function ___ftmul *****************
  3141 ;; Defined at:
  3142 ;;		line 62 in file "/opt/mmplabv310/xc8/sources/common/ftmul.c"
  3143 ;; Parameters:    Size  Location     Type
  3144 ;;  f1              3    8[COMMON] float 
  3145 ;;  f2              3   11[COMMON] float 
  3146 ;; Auto vars:     Size  Location     Type
  3147 ;;  f3_as_produc    3    5[BANK0 ] unsigned um
  3148 ;;  sign            1    9[BANK0 ] unsigned char 
  3149 ;;  cntr            1    8[BANK0 ] unsigned char 
  3150 ;;  exp             1    4[BANK0 ] unsigned char 
  3151 ;; Return value:  Size  Location     Type
  3152 ;;                  3    8[COMMON] float 
  3153 ;; Registers used:
  3154 ;;		wreg, status,2, status,0, pclath, cstack
  3155 ;; Tracked objects:
  3156 ;;		On entry : 0/0
  3157 ;;		On exit  : 0/0
  3158 ;;		Unchanged: 0/0
  3159 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3160 ;;      Params:         6       0       0       0
  3161 ;;      Locals:         0       6       0       0
  3162 ;;      Temps:          0       4       0       0
  3163 ;;      Totals:         6      10       0       0
  3164 ;;Total ram usage:       16 bytes
  3165 ;; Hardware stack levels used:    1
  3166 ;; Hardware stack levels required when called:    1
  3167 ;; This function calls:
  3168 ;;		___ftpack
  3169 ;; This function is called by:
  3170 ;;		_CalcTemp
  3171 ;;		_CalcHumid
  3172 ;; This function uses a non-reentrant model
  3173 ;;
  3174                           
  3175                           
  3176                           ;psect for function ___ftmul
  3177  0507                     ___ftmul:	
  3178                           
  3179                           ;incstack = 0
  3180                           ; Regs used in ___ftmul: [wreg+status,2+status,0+pclath+cstack]
  3181  0507  0878               	movf	___ftmul@f1,w
  3182  0508  0020               	movlb	0	; select bank0
  3183  0509  00A0               	movwf	??___ftmul
  3184  050A  0879               	movf	___ftmul@f1+1,w
  3185  050B  00A1               	movwf	??___ftmul+1
  3186  050C  087A               	movf	___ftmul@f1+2,w
  3187  050D  00A2               	movwf	??___ftmul+2
  3188  050E  1003               	clrc
  3189  050F  0D21               	rlf	??___ftmul+1,w
  3190  0510  0D22               	rlf	??___ftmul+2,w
  3191  0511  00A3               	movwf	??___ftmul+3
  3192  0512  0823               	movf	??___ftmul+3,w
  3193  0513  00A4               	movwf	___ftmul@exp
  3194  0514  0824               	movf	___ftmul@exp,w
  3195  0515  1D03               	btfss	3,2
  3196  0516  2D1E               	goto	l1384
  3197  0517  3000               	movlw	0
  3198  0518  00F8               	movwf	?___ftmul
  3199  0519  3000               	movlw	0
  3200  051A  00F9               	movwf	?___ftmul+1
  3201  051B  3000               	movlw	0
  3202  051C  00FA               	movwf	?___ftmul+2
  3203  051D  0008               	return
  3204  051E                     l1384:	
  3205  051E  087B               	movf	___ftmul@f2,w
  3206  051F  00A0               	movwf	??___ftmul
  3207  0520  087C               	movf	___ftmul@f2+1,w
  3208  0521  00A1               	movwf	??___ftmul+1
  3209  0522  087D               	movf	___ftmul@f2+2,w
  3210  0523  00A2               	movwf	??___ftmul+2
  3211  0524  1003               	clrc
  3212  0525  0D21               	rlf	??___ftmul+1,w
  3213  0526  0D22               	rlf	??___ftmul+2,w
  3214  0527  00A3               	movwf	??___ftmul+3
  3215  0528  0823               	movf	??___ftmul+3,w
  3216  0529  00A9               	movwf	___ftmul@sign
  3217  052A  0829               	movf	___ftmul@sign,w
  3218  052B  1D03               	btfss	3,2
  3219  052C  2D34               	goto	l1390
  3220  052D  3000               	movlw	0
  3221  052E  00F8               	movwf	?___ftmul
  3222  052F  3000               	movlw	0
  3223  0530  00F9               	movwf	?___ftmul+1
  3224  0531  3000               	movlw	0
  3225  0532  00FA               	movwf	?___ftmul+2
  3226  0533  0008               	return
  3227  0534                     l1390:	
  3228  0534  0829               	movf	___ftmul@sign,w
  3229  0535  3E7B               	addlw	123
  3230  0536  00A0               	movwf	??___ftmul
  3231  0537  0820               	movf	??___ftmul,w
  3232  0538  07A4               	addwf	___ftmul@exp,f
  3233  0539  0878               	movf	___ftmul@f1,w
  3234  053A  00A0               	movwf	??___ftmul
  3235  053B  0879               	movf	___ftmul@f1+1,w
  3236  053C  00A1               	movwf	??___ftmul+1
  3237  053D  087A               	movf	___ftmul@f1+2,w
  3238  053E  00A2               	movwf	??___ftmul+2
  3239  053F  3010               	movlw	16
  3240  0540                     u1525:	
  3241  0540  36A2               	lsrf	??___ftmul+2,f
  3242  0541  0CA1               	rrf	??___ftmul+1,f
  3243  0542  0CA0               	rrf	??___ftmul,f
  3244  0543  0B89               	decfsz	9,f
  3245  0544  2D40               	goto	u1525
  3246  0545  0820               	movf	??___ftmul,w
  3247  0546  00A3               	movwf	??___ftmul+3
  3248  0547  0823               	movf	??___ftmul+3,w
  3249  0548  00A9               	movwf	___ftmul@sign
  3250  0549  087B               	movf	___ftmul@f2,w
  3251  054A  00A0               	movwf	??___ftmul
  3252  054B  087C               	movf	___ftmul@f2+1,w
  3253  054C  00A1               	movwf	??___ftmul+1
  3254  054D  087D               	movf	___ftmul@f2+2,w
  3255  054E  00A2               	movwf	??___ftmul+2
  3256  054F  3010               	movlw	16
  3257  0550                     u1535:	
  3258  0550  36A2               	lsrf	??___ftmul+2,f
  3259  0551  0CA1               	rrf	??___ftmul+1,f
  3260  0552  0CA0               	rrf	??___ftmul,f
  3261  0553  0B89               	decfsz	9,f
  3262  0554  2D50               	goto	u1535
  3263  0555  0820               	movf	??___ftmul,w
  3264  0556  00A3               	movwf	??___ftmul+3
  3265  0557  0823               	movf	??___ftmul+3,w
  3266  0558  06A9               	xorwf	___ftmul@sign,f
  3267  0559  3080               	movlw	128
  3268  055A  00A0               	movwf	??___ftmul
  3269  055B  0820               	movf	??___ftmul,w
  3270  055C  05A9               	andwf	___ftmul@sign,f
  3271  055D  17F9               	bsf	___ftmul@f1+1,7
  3272  055E  17FC               	bsf	___ftmul@f2+1,7
  3273  055F  30FF               	movlw	255
  3274  0560  05FB               	andwf	___ftmul@f2,f
  3275  0561  30FF               	movlw	255
  3276  0562  05FC               	andwf	___ftmul@f2+1,f
  3277  0563  3000               	movlw	0
  3278  0564  05FD               	andwf	___ftmul@f2+2,f
  3279  0565  3000               	movlw	0
  3280  0566  00A5               	movwf	___ftmul@f3_as_product
  3281  0567  3000               	movlw	0
  3282  0568  00A6               	movwf	___ftmul@f3_as_product+1
  3283  0569  3000               	movlw	0
  3284  056A  00A7               	movwf	___ftmul@f3_as_product+2
  3285  056B  3007               	movlw	7
  3286  056C  00A0               	movwf	??___ftmul
  3287  056D  0820               	movf	??___ftmul,w
  3288  056E  00A8               	movwf	___ftmul@cntr
  3289  056F                     l1402:	
  3290  056F  1C78               	btfss	___ftmul@f1,0
  3291  0570  2D77               	goto	l1406
  3292  0571  087B               	movf	___ftmul@f2,w
  3293  0572  07A5               	addwf	___ftmul@f3_as_product,f
  3294  0573  087C               	movf	___ftmul@f2+1,w
  3295  0574  3DA6               	addwfc	___ftmul@f3_as_product+1,f
  3296  0575  087D               	movf	___ftmul@f2+2,w
  3297  0576  3DA7               	addwfc	___ftmul@f3_as_product+2,f
  3298  0577                     l1406:	
  3299  0577  3001               	movlw	1
  3300  0578                     u1555:	
  3301  0578  36FA               	lsrf	___ftmul@f1+2,f
  3302  0579  0CF9               	rrf	___ftmul@f1+1,f
  3303  057A  0CF8               	rrf	___ftmul@f1,f
  3304  057B  0B89               	decfsz	9,f
  3305  057C  2D78               	goto	u1555
  3306  057D  3001               	movlw	1
  3307  057E                     u1565:	
  3308  057E  35FB               	lslf	___ftmul@f2,f
  3309  057F  0DFC               	rlf	___ftmul@f2+1,f
  3310  0580  0DFD               	rlf	___ftmul@f2+2,f
  3311  0581  0B89               	decfsz	9,f
  3312  0582  2D7E               	goto	u1565
  3313  0583  3001               	movlw	1
  3314  0584  02A8               	subwf	___ftmul@cntr,f
  3315  0585  1D03               	btfss	3,2
  3316  0586  2D6F               	goto	l1402
  3317  0587  3009               	movlw	9
  3318  0588  00A0               	movwf	??___ftmul
  3319  0589  0820               	movf	??___ftmul,w
  3320  058A  00A8               	movwf	___ftmul@cntr
  3321  058B                     l1414:	
  3322  058B  1C78               	btfss	___ftmul@f1,0
  3323  058C  2D93               	goto	l1418
  3324  058D  087B               	movf	___ftmul@f2,w
  3325  058E  07A5               	addwf	___ftmul@f3_as_product,f
  3326  058F  087C               	movf	___ftmul@f2+1,w
  3327  0590  3DA6               	addwfc	___ftmul@f3_as_product+1,f
  3328  0591  087D               	movf	___ftmul@f2+2,w
  3329  0592  3DA7               	addwfc	___ftmul@f3_as_product+2,f
  3330  0593                     l1418:	
  3331  0593  3001               	movlw	1
  3332  0594                     u1595:	
  3333  0594  36FA               	lsrf	___ftmul@f1+2,f
  3334  0595  0CF9               	rrf	___ftmul@f1+1,f
  3335  0596  0CF8               	rrf	___ftmul@f1,f
  3336  0597  0B89               	decfsz	9,f
  3337  0598  2D94               	goto	u1595
  3338  0599  3001               	movlw	1
  3339  059A                     u1605:	
  3340  059A  36A7               	lsrf	___ftmul@f3_as_product+2,f
  3341  059B  0CA6               	rrf	___ftmul@f3_as_product+1,f
  3342  059C  0CA5               	rrf	___ftmul@f3_as_product,f
  3343  059D  0B89               	decfsz	9,f
  3344  059E  2D9A               	goto	u1605
  3345  059F  3001               	movlw	1
  3346  05A0  02A8               	subwf	___ftmul@cntr,f
  3347  05A1  1D03               	btfss	3,2
  3348  05A2  2D8B               	goto	l1414
  3349  05A3  0825               	movf	___ftmul@f3_as_product,w
  3350  05A4  00F0               	movwf	___ftpack@arg
  3351  05A5  0826               	movf	___ftmul@f3_as_product+1,w
  3352  05A6  00F1               	movwf	___ftpack@arg+1
  3353  05A7  0827               	movf	___ftmul@f3_as_product+2,w
  3354  05A8  00F2               	movwf	___ftpack@arg+2
  3355  05A9  0824               	movf	___ftmul@exp,w
  3356  05AA  00A0               	movwf	??___ftmul
  3357  05AB  0820               	movf	??___ftmul,w
  3358  05AC  00F3               	movwf	___ftpack@exp
  3359  05AD  0829               	movf	___ftmul@sign,w
  3360  05AE  00A1               	movwf	??___ftmul+1
  3361  05AF  0821               	movf	??___ftmul+1,w
  3362  05B0  00F4               	movwf	___ftpack@sign
  3363  05B1  3183  23B8         	fcall	___ftpack
  3364  05B3  0870               	movf	?___ftpack,w
  3365  05B4  00F8               	movwf	?___ftmul
  3366  05B5  0871               	movf	?___ftpack+1,w
  3367  05B6  00F9               	movwf	?___ftmul+1
  3368  05B7  0872               	movf	?___ftpack+2,w
  3369  05B8  00FA               	movwf	?___ftmul+2
  3370  05B9  0008               	return
  3371  05BA                     __end_of___ftmul:	
  3372                           
  3373                           	psect	text23
  3374  05BA                     __ptext23:	
  3375 ;; *************** function ___ftadd *****************
  3376 ;; Defined at:
  3377 ;;		line 86 in file "/opt/mmplabv310/xc8/sources/common/ftadd.c"
  3378 ;; Parameters:    Size  Location     Type
  3379 ;;  f1              3   10[BANK0 ] float 
  3380 ;;  f2              3   13[BANK0 ] float 
  3381 ;; Auto vars:     Size  Location     Type
  3382 ;;  exp1            1   22[BANK0 ] unsigned char 
  3383 ;;  exp2            1   21[BANK0 ] unsigned char 
  3384 ;;  sign            1   20[BANK0 ] unsigned char 
  3385 ;; Return value:  Size  Location     Type
  3386 ;;                  3   10[BANK0 ] float 
  3387 ;; Registers used:
  3388 ;;		wreg, status,2, status,0, pclath, cstack
  3389 ;; Tracked objects:
  3390 ;;		On entry : 0/0
  3391 ;;		On exit  : 0/0
  3392 ;;		Unchanged: 0/0
  3393 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3394 ;;      Params:         0       6       0       0
  3395 ;;      Locals:         0       3       0       0
  3396 ;;      Temps:          0       4       0       0
  3397 ;;      Totals:         0      13       0       0
  3398 ;;Total ram usage:       13 bytes
  3399 ;; Hardware stack levels used:    1
  3400 ;; Hardware stack levels required when called:    1
  3401 ;; This function calls:
  3402 ;;		___ftpack
  3403 ;; This function is called by:
  3404 ;;		_CalcHumid
  3405 ;; This function uses a non-reentrant model
  3406 ;;
  3407                           
  3408                           
  3409                           ;psect for function ___ftadd
  3410  05BA                     ___ftadd:	
  3411                           
  3412                           ;incstack = 0
  3413                           ; Regs used in ___ftadd: [wreg+status,2+status,0+pclath+cstack]
  3414  05BA  0020               	movlb	0	; select bank0
  3415  05BB  082A               	movf	___ftadd@f1,w
  3416  05BC  00B0               	movwf	??___ftadd
  3417  05BD  082B               	movf	___ftadd@f1+1,w
  3418  05BE  00B1               	movwf	??___ftadd+1
  3419  05BF  082C               	movf	___ftadd@f1+2,w
  3420  05C0  00B2               	movwf	??___ftadd+2
  3421  05C1  1003               	clrc
  3422  05C2  0D31               	rlf	??___ftadd+1,w
  3423  05C3  0D32               	rlf	??___ftadd+2,w
  3424  05C4  00B3               	movwf	??___ftadd+3
  3425  05C5  0833               	movf	??___ftadd+3,w
  3426  05C6  00B6               	movwf	___ftadd@exp1
  3427  05C7  082D               	movf	___ftadd@f2,w
  3428  05C8  00B0               	movwf	??___ftadd
  3429  05C9  082E               	movf	___ftadd@f2+1,w
  3430  05CA  00B1               	movwf	??___ftadd+1
  3431  05CB  082F               	movf	___ftadd@f2+2,w
  3432  05CC  00B2               	movwf	??___ftadd+2
  3433  05CD  1003               	clrc
  3434  05CE  0D31               	rlf	??___ftadd+1,w
  3435  05CF  0D32               	rlf	??___ftadd+2,w
  3436  05D0  00B3               	movwf	??___ftadd+3
  3437  05D1  0833               	movf	??___ftadd+3,w
  3438  05D2  00B5               	movwf	___ftadd@exp2
  3439  05D3  0836               	movf	___ftadd@exp1,w
  3440  05D4  1903               	btfsc	3,2
  3441  05D5  2DE2               	goto	l1314
  3442  05D6  0835               	movf	___ftadd@exp2,w
  3443  05D7  0236               	subwf	___ftadd@exp1,w
  3444  05D8  1803               	skipnc
  3445  05D9  2DE9               	goto	l1318
  3446  05DA  0336               	decf	___ftadd@exp1,w
  3447  05DB  3AFF               	xorlw	255
  3448  05DC  0735               	addwf	___ftadd@exp2,w
  3449  05DD  00B0               	movwf	??___ftadd
  3450  05DE  3019               	movlw	25
  3451  05DF  0230               	subwf	??___ftadd,w
  3452  05E0  1C03               	skipc
  3453  05E1  2DE9               	goto	l1318
  3454  05E2                     l1314:	
  3455  05E2  082D               	movf	___ftadd@f2,w
  3456  05E3  00AA               	movwf	?___ftadd
  3457  05E4  082E               	movf	___ftadd@f2+1,w
  3458  05E5  00AB               	movwf	?___ftadd+1
  3459  05E6  082F               	movf	___ftadd@f2+2,w
  3460  05E7  00AC               	movwf	?___ftadd+2
  3461  05E8  0008               	return
  3462  05E9                     l1318:	
  3463  05E9  0835               	movf	___ftadd@exp2,w
  3464  05EA  1903               	btfsc	3,2
  3465  05EB  0008               	return
  3466  05EC  0836               	movf	___ftadd@exp1,w
  3467  05ED  0235               	subwf	___ftadd@exp2,w
  3468  05EE  1803               	skipnc
  3469  05EF  2DF8               	goto	l1324
  3470  05F0  0335               	decf	___ftadd@exp2,w
  3471  05F1  3AFF               	xorlw	255
  3472  05F2  0736               	addwf	___ftadd@exp1,w
  3473  05F3  00B0               	movwf	??___ftadd
  3474  05F4  3019               	movlw	25
  3475  05F5  0230               	subwf	??___ftadd,w
  3476  05F6  1803               	btfsc	3,0
  3477  05F7  0008               	return
  3478  05F8                     l1324:	
  3479  05F8  3006               	movlw	6
  3480  05F9  00B0               	movwf	??___ftadd
  3481  05FA  0830               	movf	??___ftadd,w
  3482  05FB  00B4               	movwf	___ftadd@sign
  3483  05FC  1BAC               	btfsc	___ftadd@f1+2,7
  3484  05FD  17B4               	bsf	___ftadd@sign,7
  3485  05FE  1BAF               	btfsc	___ftadd@f2+2,7
  3486  05FF  1734               	bsf	___ftadd@sign,6
  3487  0600  17AB               	bsf	___ftadd@f1+1,7
  3488  0601  30FF               	movlw	255
  3489  0602  05AA               	andwf	___ftadd@f1,f
  3490  0603  30FF               	movlw	255
  3491  0604  05AB               	andwf	___ftadd@f1+1,f
  3492  0605  3000               	movlw	0
  3493  0606  05AC               	andwf	___ftadd@f1+2,f
  3494  0607  17AE               	bsf	___ftadd@f2+1,7
  3495  0608  30FF               	movlw	255
  3496  0609  05AD               	andwf	___ftadd@f2,f
  3497  060A  30FF               	movlw	255
  3498  060B  05AE               	andwf	___ftadd@f2+1,f
  3499  060C  3000               	movlw	0
  3500  060D  05AF               	andwf	___ftadd@f2+2,f
  3501  060E  0835               	movf	___ftadd@exp2,w
  3502  060F  0236               	subwf	___ftadd@exp1,w
  3503  0610  1803               	skipnc
  3504  0611  2E34               	goto	l1346
  3505  0612                     l1336:	
  3506  0612  3001               	movlw	1
  3507  0613                     u1365:	
  3508  0613  35AD               	lslf	___ftadd@f2,f
  3509  0614  0DAE               	rlf	___ftadd@f2+1,f
  3510  0615  0DAF               	rlf	___ftadd@f2+2,f
  3511  0616  0B89               	decfsz	9,f
  3512  0617  2E13               	goto	u1365
  3513  0618  3001               	movlw	1
  3514  0619  02B5               	subwf	___ftadd@exp2,f
  3515  061A  0835               	movf	___ftadd@exp2,w
  3516  061B  0636               	xorwf	___ftadd@exp1,w
  3517  061C  1903               	skipnz
  3518  061D  2E2F               	goto	l1344
  3519  061E  3001               	movlw	1
  3520  061F  02B4               	subwf	___ftadd@sign,f
  3521  0620  0834               	movf	___ftadd@sign,w
  3522  0621  3907               	andlw	7
  3523  0622  1903               	btfsc	3,2
  3524  0623  2E2F               	goto	l1344
  3525  0624  2E12               	goto	l1336
  3526  0625                     l1342:	
  3527  0625  3001               	movlw	1
  3528  0626                     u1395:	
  3529  0626  36AC               	lsrf	___ftadd@f1+2,f
  3530  0627  0CAB               	rrf	___ftadd@f1+1,f
  3531  0628  0CAA               	rrf	___ftadd@f1,f
  3532  0629  0B89               	decfsz	9,f
  3533  062A  2E26               	goto	u1395
  3534  062B  3001               	movlw	1
  3535  062C  00B0               	movwf	??___ftadd
  3536  062D  0830               	movf	??___ftadd,w
  3537  062E  07B6               	addwf	___ftadd@exp1,f
  3538  062F                     l1344:	
  3539  062F  0836               	movf	___ftadd@exp1,w
  3540  0630  0635               	xorwf	___ftadd@exp2,w
  3541  0631  1903               	btfsc	3,2
  3542  0632  2E59               	goto	l458
  3543  0633  2E25               	goto	l1342
  3544  0634                     l1346:	
  3545  0634  0836               	movf	___ftadd@exp1,w
  3546  0635  0235               	subwf	___ftadd@exp2,w
  3547  0636  1803               	skipnc
  3548  0637  2E59               	goto	l458
  3549  0638                     l1348:	
  3550  0638  3001               	movlw	1
  3551  0639                     u1425:	
  3552  0639  35AA               	lslf	___ftadd@f1,f
  3553  063A  0DAB               	rlf	___ftadd@f1+1,f
  3554  063B  0DAC               	rlf	___ftadd@f1+2,f
  3555  063C  0B89               	decfsz	9,f
  3556  063D  2E39               	goto	u1425
  3557  063E  3001               	movlw	1
  3558  063F  02B6               	subwf	___ftadd@exp1,f
  3559  0640  0835               	movf	___ftadd@exp2,w
  3560  0641  0636               	xorwf	___ftadd@exp1,w
  3561  0642  1903               	skipnz
  3562  0643  2E55               	goto	l1356
  3563  0644  3001               	movlw	1
  3564  0645  02B4               	subwf	___ftadd@sign,f
  3565  0646  0834               	movf	___ftadd@sign,w
  3566  0647  3907               	andlw	7
  3567  0648  1903               	btfsc	3,2
  3568  0649  2E55               	goto	l1356
  3569  064A  2E38               	goto	l1348
  3570  064B                     l1354:	
  3571  064B  3001               	movlw	1
  3572  064C                     u1455:	
  3573  064C  36AF               	lsrf	___ftadd@f2+2,f
  3574  064D  0CAE               	rrf	___ftadd@f2+1,f
  3575  064E  0CAD               	rrf	___ftadd@f2,f
  3576  064F  0B89               	decfsz	9,f
  3577  0650  2E4C               	goto	u1455
  3578  0651  3001               	movlw	1
  3579  0652  00B0               	movwf	??___ftadd
  3580  0653  0830               	movf	??___ftadd,w
  3581  0654  07B5               	addwf	___ftadd@exp2,f
  3582  0655                     l1356:	
  3583  0655  0836               	movf	___ftadd@exp1,w
  3584  0656  0635               	xorwf	___ftadd@exp2,w
  3585  0657  1D03               	skipz
  3586  0658  2E4B               	goto	l1354
  3587  0659                     l458:	
  3588  0659  1FB4               	btfss	___ftadd@sign,7
  3589  065A  2E6B               	goto	l1360
  3590  065B  30FF               	movlw	255
  3591  065C  06AA               	xorwf	___ftadd@f1,f
  3592  065D  30FF               	movlw	255
  3593  065E  06AB               	xorwf	___ftadd@f1+1,f
  3594  065F  30FF               	movlw	255
  3595  0660  06AC               	xorwf	___ftadd@f1+2,f
  3596  0661  3001               	movlw	1
  3597  0662  07AA               	addwf	___ftadd@f1,f
  3598  0663  3000               	movlw	0
  3599  0664  1803               	skipnc
  3600  0665  3001               	movlw	1
  3601  0666  07AB               	addwf	___ftadd@f1+1,f
  3602  0667  3000               	movlw	0
  3603  0668  1803               	skipnc
  3604  0669  3001               	movlw	1
  3605  066A  07AC               	addwf	___ftadd@f1+2,f
  3606  066B                     l1360:	
  3607  066B  1F34               	btfss	___ftadd@sign,6
  3608  066C  2E7D               	goto	l1364
  3609  066D  30FF               	movlw	255
  3610  066E  06AD               	xorwf	___ftadd@f2,f
  3611  066F  30FF               	movlw	255
  3612  0670  06AE               	xorwf	___ftadd@f2+1,f
  3613  0671  30FF               	movlw	255
  3614  0672  06AF               	xorwf	___ftadd@f2+2,f
  3615  0673  3001               	movlw	1
  3616  0674  07AD               	addwf	___ftadd@f2,f
  3617  0675  3000               	movlw	0
  3618  0676  1803               	skipnc
  3619  0677  3001               	movlw	1
  3620  0678  07AE               	addwf	___ftadd@f2+1,f
  3621  0679  3000               	movlw	0
  3622  067A  1803               	skipnc
  3623  067B  3001               	movlw	1
  3624  067C  07AF               	addwf	___ftadd@f2+2,f
  3625  067D                     l1364:	
  3626  067D  01B4               	clrf	___ftadd@sign
  3627  067E  082A               	movf	___ftadd@f1,w
  3628  067F  07AD               	addwf	___ftadd@f2,f
  3629  0680  082B               	movf	___ftadd@f1+1,w
  3630  0681  3DAE               	addwfc	___ftadd@f2+1,f
  3631  0682  082C               	movf	___ftadd@f1+2,w
  3632  0683  3DAF               	addwfc	___ftadd@f2+2,f
  3633  0684  1FAF               	btfss	___ftadd@f2+2,7
  3634  0685  2E98               	goto	l1374
  3635  0686  30FF               	movlw	255
  3636  0687  06AD               	xorwf	___ftadd@f2,f
  3637  0688  30FF               	movlw	255
  3638  0689  06AE               	xorwf	___ftadd@f2+1,f
  3639  068A  30FF               	movlw	255
  3640  068B  06AF               	xorwf	___ftadd@f2+2,f
  3641  068C  3001               	movlw	1
  3642  068D  07AD               	addwf	___ftadd@f2,f
  3643  068E  3000               	movlw	0
  3644  068F  1803               	skipnc
  3645  0690  3001               	movlw	1
  3646  0691  07AE               	addwf	___ftadd@f2+1,f
  3647  0692  3000               	movlw	0
  3648  0693  1803               	skipnc
  3649  0694  3001               	movlw	1
  3650  0695  07AF               	addwf	___ftadd@f2+2,f
  3651  0696  01B4               	clrf	___ftadd@sign
  3652  0697  0AB4               	incf	___ftadd@sign,f
  3653  0698                     l1374:	
  3654  0698  082D               	movf	___ftadd@f2,w
  3655  0699  00F0               	movwf	___ftpack@arg
  3656  069A  082E               	movf	___ftadd@f2+1,w
  3657  069B  00F1               	movwf	___ftpack@arg+1
  3658  069C  082F               	movf	___ftadd@f2+2,w
  3659  069D  00F2               	movwf	___ftpack@arg+2
  3660  069E  0836               	movf	___ftadd@exp1,w
  3661  069F  00B0               	movwf	??___ftadd
  3662  06A0  0830               	movf	??___ftadd,w
  3663  06A1  00F3               	movwf	___ftpack@exp
  3664  06A2  0834               	movf	___ftadd@sign,w
  3665  06A3  00B1               	movwf	??___ftadd+1
  3666  06A4  0831               	movf	??___ftadd+1,w
  3667  06A5  00F4               	movwf	___ftpack@sign
  3668  06A6  3183  23B8         	fcall	___ftpack
  3669  06A8  0870               	movf	?___ftpack,w
  3670  06A9  0020               	movlb	0	; select bank0
  3671  06AA  00AA               	movwf	?___ftadd
  3672  06AB  0871               	movf	?___ftpack+1,w
  3673  06AC  00AB               	movwf	?___ftadd+1
  3674  06AD  0872               	movf	?___ftpack+2,w
  3675  06AE  00AC               	movwf	?___ftadd+2
  3676  06AF  0008               	return
  3677  06B0                     __end_of___ftadd:	
  3678                           
  3679                           	psect	text24
  3680  0224                     __ptext24:	
  3681 ;; *************** function ___awtoft *****************
  3682 ;; Defined at:
  3683 ;;		line 32 in file "/opt/mmplabv310/xc8/sources/common/awtoft.c"
  3684 ;; Parameters:    Size  Location     Type
  3685 ;;  c               2    8[COMMON] int 
  3686 ;; Auto vars:     Size  Location     Type
  3687 ;;  sign            1   13[COMMON] unsigned char 
  3688 ;; Return value:  Size  Location     Type
  3689 ;;                  3    8[COMMON] float 
  3690 ;; Registers used:
  3691 ;;		wreg, status,2, status,0, pclath, cstack
  3692 ;; Tracked objects:
  3693 ;;		On entry : 0/0
  3694 ;;		On exit  : 0/0
  3695 ;;		Unchanged: 0/0
  3696 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3697 ;;      Params:         3       0       0       0
  3698 ;;      Locals:         1       0       0       0
  3699 ;;      Temps:          2       0       0       0
  3700 ;;      Totals:         6       0       0       0
  3701 ;;Total ram usage:        6 bytes
  3702 ;; Hardware stack levels used:    1
  3703 ;; Hardware stack levels required when called:    1
  3704 ;; This function calls:
  3705 ;;		___ftpack
  3706 ;; This function is called by:
  3707 ;;		_CalcTemp
  3708 ;;		_CalcHumid
  3709 ;; This function uses a non-reentrant model
  3710 ;;
  3711                           
  3712                           
  3713                           ;psect for function ___awtoft
  3714  0224                     ___awtoft:	
  3715                           
  3716                           ;incstack = 0
  3717                           ; Regs used in ___awtoft: [wreg+status,2+status,0+pclath+cstack]
  3718  0224  01FD               	clrf	___awtoft@sign
  3719  0225  1FF9               	btfss	___awtoft@c+1,7
  3720  0226  2A2E               	goto	l1304
  3721  0227  09F8               	comf	___awtoft@c,f
  3722  0228  09F9               	comf	___awtoft@c+1,f
  3723  0229  0AF8               	incf	___awtoft@c,f
  3724  022A  1903               	skipnz
  3725  022B  0AF9               	incf	___awtoft@c+1,f
  3726  022C  01FD               	clrf	___awtoft@sign
  3727  022D  0AFD               	incf	___awtoft@sign,f
  3728  022E                     l1304:	
  3729  022E  0878               	movf	___awtoft@c,w
  3730  022F  00F0               	movwf	___ftpack@arg
  3731  0230  0879               	movf	___awtoft@c+1,w
  3732  0231  00F1               	movwf	___ftpack@arg+1
  3733  0232  01F2               	clrf	___ftpack@arg+2
  3734  0233  308E               	movlw	142
  3735  0234  00FB               	movwf	??___awtoft
  3736  0235  087B               	movf	??___awtoft,w
  3737  0236  00F3               	movwf	___ftpack@exp
  3738  0237  087D               	movf	___awtoft@sign,w
  3739  0238  00FC               	movwf	??___awtoft+1
  3740  0239  087C               	movf	??___awtoft+1,w
  3741  023A  00F4               	movwf	___ftpack@sign
  3742  023B  3183  23B8         	fcall	___ftpack
  3743  023D  0870               	movf	?___ftpack,w
  3744  023E  00F8               	movwf	?___awtoft
  3745  023F  0871               	movf	?___ftpack+1,w
  3746  0240  00F9               	movwf	?___awtoft+1
  3747  0241  0872               	movf	?___ftpack+2,w
  3748  0242  00FA               	movwf	?___awtoft+2
  3749  0243  0008               	return
  3750  0244                     __end_of___awtoft:	
  3751                           
  3752                           	psect	text25
  3753  03B8                     __ptext25:	
  3754 ;; *************** function ___ftpack *****************
  3755 ;; Defined at:
  3756 ;;		line 62 in file "/opt/mmplabv310/xc8/sources/common/float.c"
  3757 ;; Parameters:    Size  Location     Type
  3758 ;;  arg             3    0[COMMON] unsigned um
  3759 ;;  exp             1    3[COMMON] unsigned char 
  3760 ;;  sign            1    4[COMMON] unsigned char 
  3761 ;; Auto vars:     Size  Location     Type
  3762 ;;		None
  3763 ;; Return value:  Size  Location     Type
  3764 ;;                  3    0[COMMON] float 
  3765 ;; Registers used:
  3766 ;;		wreg, status,2, status,0
  3767 ;; Tracked objects:
  3768 ;;		On entry : 0/0
  3769 ;;		On exit  : 0/0
  3770 ;;		Unchanged: 0/0
  3771 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3772 ;;      Params:         5       0       0       0
  3773 ;;      Locals:         0       0       0       0
  3774 ;;      Temps:          3       0       0       0
  3775 ;;      Totals:         8       0       0       0
  3776 ;;Total ram usage:        8 bytes
  3777 ;; Hardware stack levels used:    1
  3778 ;; This function calls:
  3779 ;;		Nothing
  3780 ;; This function is called by:
  3781 ;;		___awtoft
  3782 ;;		___ftadd
  3783 ;;		___ftmul
  3784 ;; This function uses a non-reentrant model
  3785 ;;
  3786                           
  3787                           
  3788                           ;psect for function ___ftpack
  3789  03B8                     ___ftpack:	
  3790                           
  3791                           ;incstack = 0
  3792                           ; Regs used in ___ftpack: [wreg+status,2+status,0]
  3793  03B8  0873               	movf	___ftpack@exp,w
  3794  03B9  1903               	btfsc	3,2
  3795  03BA  2BC0               	goto	l1212
  3796  03BB  0872               	movf	___ftpack@arg+2,w
  3797  03BC  0471               	iorwf	___ftpack@arg+1,w
  3798  03BD  0470               	iorwf	___ftpack@arg,w
  3799  03BE  1D03               	skipz
  3800  03BF  2BD1               	goto	l1218
  3801  03C0                     l1212:	
  3802  03C0  3000               	movlw	0
  3803  03C1  00F0               	movwf	?___ftpack
  3804  03C2  3000               	movlw	0
  3805  03C3  00F1               	movwf	?___ftpack+1
  3806  03C4  3000               	movlw	0
  3807  03C5  00F2               	movwf	?___ftpack+2
  3808  03C6  0008               	return
  3809  03C7                     l1216:	
  3810  03C7  3001               	movlw	1
  3811  03C8  00F5               	movwf	??___ftpack
  3812  03C9  0875               	movf	??___ftpack,w
  3813  03CA  07F3               	addwf	___ftpack@exp,f
  3814  03CB  3001               	movlw	1
  3815  03CC                     u1015:	
  3816  03CC  36F2               	lsrf	___ftpack@arg+2,f
  3817  03CD  0CF1               	rrf	___ftpack@arg+1,f
  3818  03CE  0CF0               	rrf	___ftpack@arg,f
  3819  03CF  0B89               	decfsz	9,f
  3820  03D0  2BCC               	goto	u1015
  3821  03D1                     l1218:	
  3822  03D1  30FE               	movlw	254
  3823  03D2  0572               	andwf	___ftpack@arg+2,w
  3824  03D3  1903               	btfsc	3,2
  3825  03D4  2BEA               	goto	l427
  3826  03D5  2BC7               	goto	l1216
  3827  03D6                     l1220:	
  3828  03D6  3001               	movlw	1
  3829  03D7  00F5               	movwf	??___ftpack
  3830  03D8  0875               	movf	??___ftpack,w
  3831  03D9  07F3               	addwf	___ftpack@exp,f
  3832  03DA  3001               	movlw	1
  3833  03DB  07F0               	addwf	___ftpack@arg,f
  3834  03DC  3000               	movlw	0
  3835  03DD  1803               	skipnc
  3836  03DE  3001               	movlw	1
  3837  03DF  07F1               	addwf	___ftpack@arg+1,f
  3838  03E0  3000               	movlw	0
  3839  03E1  1803               	skipnc
  3840  03E2  3001               	movlw	1
  3841  03E3  07F2               	addwf	___ftpack@arg+2,f
  3842  03E4  3001               	movlw	1
  3843  03E5                     u1035:	
  3844  03E5  36F2               	lsrf	___ftpack@arg+2,f
  3845  03E6  0CF1               	rrf	___ftpack@arg+1,f
  3846  03E7  0CF0               	rrf	___ftpack@arg,f
  3847  03E8  0B89               	decfsz	9,f
  3848  03E9  2BE5               	goto	u1035
  3849  03EA                     l427:	
  3850  03EA  30FF               	movlw	255
  3851  03EB  0572               	andwf	___ftpack@arg+2,w
  3852  03EC  1903               	btfsc	3,2
  3853  03ED  2BF7               	goto	l1228
  3854  03EE  2BD6               	goto	l1220
  3855  03EF                     l1226:	
  3856  03EF  3001               	movlw	1
  3857  03F0  02F3               	subwf	___ftpack@exp,f
  3858  03F1  3001               	movlw	1
  3859  03F2                     u1055:	
  3860  03F2  35F0               	lslf	___ftpack@arg,f
  3861  03F3  0DF1               	rlf	___ftpack@arg+1,f
  3862  03F4  0DF2               	rlf	___ftpack@arg+2,f
  3863  03F5  0B89               	decfsz	9,f
  3864  03F6  2BF2               	goto	u1055
  3865  03F7                     l1228:	
  3866  03F7  1BF1               	btfsc	___ftpack@arg+1,7
  3867  03F8  2BFD               	goto	l434
  3868  03F9  3002               	movlw	2
  3869  03FA  0273               	subwf	___ftpack@exp,w
  3870  03FB  1803               	skipnc
  3871  03FC  2BEF               	goto	l1226
  3872  03FD                     l434:	
  3873  03FD  1873               	btfsc	___ftpack@exp,0
  3874  03FE  2C05               	goto	l435
  3875  03FF  30FF               	movlw	255
  3876  0400  05F0               	andwf	___ftpack@arg,f
  3877  0401  307F               	movlw	127
  3878  0402  05F1               	andwf	___ftpack@arg+1,f
  3879  0403  30FF               	movlw	255
  3880  0404  05F2               	andwf	___ftpack@arg+2,f
  3881  0405                     l435:	
  3882  0405  1003               	clrc
  3883  0406  0CF3               	rrf	___ftpack@exp,f
  3884  0407  0873               	movf	___ftpack@exp,w
  3885  0408  00F5               	movwf	??___ftpack
  3886  0409  01F6               	clrf	??___ftpack+1
  3887  040A  01F7               	clrf	??___ftpack+2
  3888  040B  3010               	movlw	16
  3889  040C                     u1095:	
  3890  040C  35F5               	lslf	??___ftpack,f
  3891  040D  0DF6               	rlf	??___ftpack+1,f
  3892  040E  0DF7               	rlf	??___ftpack+2,f
  3893  040F  0B89               	decfsz	9,f
  3894  0410  2C0C               	goto	u1095
  3895  0411  0875               	movf	??___ftpack,w
  3896  0412  04F0               	iorwf	___ftpack@arg,f
  3897  0413  0876               	movf	??___ftpack+1,w
  3898  0414  04F1               	iorwf	___ftpack@arg+1,f
  3899  0415  0877               	movf	??___ftpack+2,w
  3900  0416  04F2               	iorwf	___ftpack@arg+2,f
  3901  0417  0874               	movf	___ftpack@sign,w
  3902  0418  1903               	btfsc	3,2
  3903  0419  0008               	return
  3904  041A  17F2               	bsf	___ftpack@arg+2,7
  3905  041B  0008               	return
  3906  041C                     __end_of___ftpack:	
  3907  007E                     btemp	set	126	;btemp
  3908  007E                     wtemp	set	126
  3909  007E                     wtemp0	set	126
  3910  0080                     wtemp1	set	128
  3911  0082                     wtemp2	set	130
  3912  0084                     wtemp3	set	132
  3913  0086                     wtemp4	set	134
  3914  0088                     wtemp5	set	136
  3915  007F                     wtemp6	set	127
  3916  007E                     ttemp	set	126
  3917  007E                     ttemp0	set	126
  3918  0081                     ttemp1	set	129
  3919  0084                     ttemp2	set	132
  3920  0087                     ttemp3	set	135
  3921  007F                     ttemp4	set	127
  3922  007E                     ltemp	set	126
  3923  007E                     ltemp0	set	126
  3924  0082                     ltemp1	set	130
  3925  0086                     ltemp2	set	134
  3926  0080                     ltemp3	set	128


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         11
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     50      61
    BANK1            80      0       0
    BANK2            80      0       0

Pointer List with Targets:

    utoa@buf	PTR unsigned char  size(1) Largest target is 8
		 -> main@buf(BANK0[8]), 

    sp__utoa	PTR unsigned char  size(1) Largest target is 8
		 -> main@buf(BANK0[8]), 

    itoa@buf	PTR unsigned char  size(1) Largest target is 8
		 -> main@buf(BANK0[8]), 

    itoa@cp	PTR unsigned char  size(1) Largest target is 8
		 -> main@buf(BANK0[8]), 

    sp__itoa	PTR unsigned char  size(1) Largest target is 8
		 -> main@buf(BANK0[8]), 

    UART_String@letters	PTR unsigned char  size(1) Largest target is 8
		 -> main@buf(BANK0[8]), 


Critical Paths under _main in COMMON

    _main->_itoa
    _serial_init->_uart_xmit
    _itoa->_utoa
    _utoa->___lwdiv
    _UART_String->_uart_xmit
    _I2C_restart->_I2C_check_idle
    _CalcTemp->___awtoft
    _CalcTemp->___ftmul
    _CalcTemp->___fttol
    _CalcHumid->___awtoft
    _CalcHumid->___ftmul
    _CalcHumid->___fttol
    ___ftmul->___ftpack
    ___ftadd->___ftmul
    ___awtoft->___ftpack

Critical Paths under _main in BANK0

    _main->_CalcHumid
    _itoa->_utoa
    _CalcTemp->___ftmul
    _CalcHumid->___ftadd
    ___ftadd->___ftmul

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                13    13      0   16010
                                             37 BANK0     13    13      0
                          _CalcHumid
                           _CalcTemp
                            _I2C_ACK
                   _I2C_Control_Read
                  _I2C_Control_Write
                            _I2C_NAK
                      _I2C_Start_Bit
                       _I2C_Stop_Bit
                        _I2C_restart
                        _RX_I2C_Data
                      _Send_I2C_Data
                        _UART_String
                            _init_io
                               _itoa
                        _serial_init
                          _uart_xmit
 ---------------------------------------------------------------------------------
 (1) _serial_init                                          2     2      0     658
                                              2 COMMON     2     2      0
                          _uart_xmit
 ---------------------------------------------------------------------------------
 (1) _itoa                                                 7     3      4    1503
                                             13 COMMON     1     1      0
                                              4 BANK0      6     2      4
                               _utoa
 ---------------------------------------------------------------------------------
 (2) _utoa                                                 9     5      4    1074
                                              8 COMMON     5     1      4
                                              0 BANK0      4     4      0
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              6     2      4     265
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              8     4      4     374
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (1) _init_io                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _UART_String                                          6     6      0     802
                                              2 COMMON     6     6      0
                          _uart_xmit
 ---------------------------------------------------------------------------------
 (1) _uart_xmit                                            2     0      2     658
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (1) _Send_I2C_Data                                        2     0      2     128
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (1) _RX_I2C_Data                                          1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _I2C_restart                                          0     0      0      46
                     _I2C_check_idle
 ---------------------------------------------------------------------------------
 (2) _I2C_check_idle                                       3     3      0      46
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _I2C_Stop_Bit                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _I2C_Start_Bit                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _I2C_NAK                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _I2C_Control_Write                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _I2C_Control_Read                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _I2C_ACK                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _CalcTemp                                            14    12      2    4678
                                             10 BANK0     14    12      2
                           ___awtoft
                            ___ftmul
                            ___fttol
 ---------------------------------------------------------------------------------
 (1) _CalcHumid                                           14    12      2    7395
                                             23 BANK0     14    12      2
                           ___awtoft
                            ___ftadd
                            ___ftmul
                            ___fttol
 ---------------------------------------------------------------------------------
 (2) ___fttol                                             14    10      4     358
                                              0 COMMON    14    10      4
 ---------------------------------------------------------------------------------
 (2) ___ftmul                                             16    10      6    2312
                                              8 COMMON     6     0      6
                                              0 BANK0     10    10      0
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___ftadd                                             13     7      6    2694
                                             10 BANK0     13     7      6
                            ___ftmul (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___awtoft                                             6     3      3    1865
                                              8 COMMON     6     3      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (3) ___ftpack                                             8     3      5    1668
                                              0 COMMON     8     3      5
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _CalcHumid
     ___awtoft
       ___ftpack
     ___ftadd
       ___ftmul (ARG)
         ___ftpack
       ___ftpack (ARG)
     ___ftmul
       ___ftpack
     ___fttol
   _CalcTemp
     ___awtoft
       ___ftpack
     ___ftmul
       ___ftpack
     ___fttol
   _I2C_ACK
   _I2C_Control_Read
   _I2C_Control_Write
   _I2C_NAK
   _I2C_Start_Bit
   _I2C_Stop_Bit
   _I2C_restart
     _I2C_check_idle
   _RX_I2C_Data
   _Send_I2C_Data
   _UART_String
     _uart_xmit
   _init_io
   _itoa
     _utoa
       ___lwdiv
       ___lwmod
   _serial_init
     _uart_xmit
   _uart_xmit

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM              F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      4B       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50     32      3D       6       76.2%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
DATA                 0      0      4B      11        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.35 build -356382666 
Symbol Table                                                                                   Thu Nov 19 01:03:00 2015

                         _i 0054                 __CFG_CP$OFF 0000                 _SSPSTATbits 0214  
                        _BF 10A0                          l86 0182                          l95 0195  
              ___ftadd@exp1 0036                ___ftadd@exp2 0035                 __CFG_LVP$ON 0000  
              ___ftadd@sign 0034                         l101 019E                         l110 01A6  
                       l130 01D6                         l107 01A4                         l124 01E6  
                       l118 01F6                         l134 01F8                         l170 0779  
                       l139 018D                         l434 03FD                         l435 0405  
                       l427 03EA                         l533 03A2                         l518 04ED  
                       l458 0659                         _PEN 10B2             __end_of_I2C_ACK 0199  
           __end_of_I2C_NAK 01C9                         _tb1 0059                         _tb2 005A  
              __CFG_BORV$LO 0000                         wreg 0009                __CFG_IESO$ON 0000  
               _RX_I2C_Data 01A2                        l1220 03D6                        l1212 03C0  
                      l1216 03C7                        l1304 022E                        l1226 03EF  
                      l1218 03D1                        l1314 05E2                        l1402 056F  
                      l1250 02EB                        l1228 03F7                        l1324 05F8  
                      l1252 02F7                        l1342 0625                        l1318 05E9  
                      l1414 058B                        l1406 0577                        l1262 0312  
                      l1360 066B                        l1344 062F                        l1336 0612  
                      l1280 02A7                        l1354 064B                        l1346 0634  
                      l1418 0593                        l1434 0499                        l1258 0309  
                      l1274 028F                        l1364 067D                        l1356 0655  
                      l1348 0638                        l1460 04E4                        l1452 04C9  
                      l1276 029B                        l1284 02B0                        l1374 0698  
                      l1390 0534                        l1462 04F0                        l1454 04D7  
                      l1614 01C0                        l1630 0247                        l1384 051E  
                      l1608 01B2                        l1472 035C                        l1466 04FE  
                      l1482 037A                        l1642 027D                        l1592 01DD  
                      l1584 01ED                        l1666 06DF                        l1598 01CD  
                      u1015 03CC                        u1035 03E5                        u1125 02EE  
                      u1055 03F2                        u1215 02A1                        u1145 02F8  
                      u1225 02A8                        u1155 0302                        u1165 030A  
                      u1095 040C                        u1425 0639                        u1195 0292  
                      u1365 0613                        u1605 059A                        u1525 0540  
                      u1455 064C                        u1535 0550                        u1395 0626  
                      u1555 0578                        u1635 04A0                        u1565 057E  
                      u1665 04CA                        u1595 0594                        u1907 0774  
                      u1917 078D                        u1695 04E5                        u1927 079D  
                      u1937 02C9                        u1887 06CF                        u1897 06F5  
                      _RCEN 10B3                        _RSEN 10B1           ?_I2C_Control_Read 0070  
              __CFG_WRT$OFF 0000               __CFG_FCMEN$ON 0000                        _main 06B0  
                      _byte 0056                ___ftpack@arg 0070                        _kirk 0057  
                      _itoa 0265                ___ftpack@exp 0073                        fsr1h 0007  
                      indf1 0001                        fsr1l 0006                        btemp 007E  
                      _utoa 0356          ??_I2C_Control_Read 0070               __CFG_BOREN$ON 0000  
                      ltemp 007E                        start 0002                        ttemp 007E  
                      wtemp 007E               __CFG_MCLRE$ON 0000                ___ftmul@cntr 0028  
              ___ftmul@sign 0029        __size_of_I2C_restart 0008               __CFG_LPBOR$ON 0000  
              ___fttol@exp1 007D                ___fttol@lval 0079       __size_of_I2C_Stop_Bit 000D  
                     ?_main 0070                       _ACKEN 10B4                       _ACKDT 10B5  
                     ?_itoa 0024             __end_of___ftadd 06B0               __CFG_WDTE$OFF 0000  
                     ?_utoa 0078             __end_of___ftmul 05BA             __end_of___fttol 0507  
           __end_of___lwdiv 0317             __end_of___lwmod 02B5           _I2C_Control_Write 01E8  
                     _TRISA 008C                       _TRISB 008D                       _TXREG 019A  
        ?_I2C_Control_Write 0070               ___awtoft@sign 007D                       _kirk2 0058  
           __end_of_init_io 0224               ___ftpack@sign 0074                       ltemp0 007E  
                     ltemp1 0082                       ltemp2 0086                       ltemp3 0080  
          __end_of_CalcTemp 0356         ??_I2C_Control_Write 0070                       ttemp0 007E  
                     ttemp1 0081                       ttemp2 0084                       ttemp3 0087  
                     ttemp4 007F                       utoa@c 0022                       utoa@v 0020  
                     status 0003                       wtemp0 007E                       wtemp1 0080  
                     wtemp2 0082                       wtemp3 0084                       wtemp4 0086  
                     wtemp5 0088                       wtemp6 007F          __size_of_CalcHumid 0065  
              _I2C_Stop_Bit 01AE             __initialization 07F2                __end_of_main 07F2  
              __end_of_itoa 0289                __end_of_utoa 03B8                   ??_I2C_ACK 0070  
                 ??_I2C_NAK 0070            CalcHumid@rcv_val 003E   __end_of_I2C_Control_Write 01F8  
                    ??_main 0045               ___fttol@sign1 0078                      ??_itoa 007D  
    __size_of_I2C_Start_Bit 000F                      ??_utoa 007C            __end_of___awtoft 0244  
                    _ANSELA 018C                      _ANSELB 018D                      _ANSELC 018E  
          __end_of___ftpack 041C                      _SPBRGH 019C                      _SPBRGL 019B  
                    _SSPADD 0212                      _SSPCON 0215                      _SSPBUF 0211  
            __CFG_PWRTE$OFF 0000                ?_UART_String 0070                ?_serial_init 0070  
    __size_of_Send_I2C_Data 0009                   ??___ftadd 0030              __CFG_STVREN$ON 0000  
                 ??___ftmul 0020                   ??___fttol 0074                   ??___lwdiv 0074  
           CalcTemp@rcv_val 0031                   ??___lwmod 0074                      main@ct 0050  
     ___ftmul@f3_as_product 0025                      itoa@cp 0028                   ??_init_io 0070  
         __end_of_CalcHumid 0481       Send_I2C_Data@databyte 0070     __end_of__initialization 07FD  
             _I2C_Start_Bit 01C9                  ___ftadd@f1 002A                  ___ftadd@f2 002D  
              CalcHumid@ans 0042                  ___awtoft@c 0078                  ___ftmul@f1 0078  
                ___ftmul@f2 007B                  ___fttol@f1 0070              __pcstackCOMMON 0070  
__size_of_I2C_Control_Write 0010                   ?_CalcTemp 002A              _OPTION_REGbits 0095  
             _Send_I2C_Data 0199                ?_RX_I2C_Data 0070                  __pbssBANK0 0052  
            ?_I2C_Start_Bit 0070                  __pmaintext 06B0                     _I2C_ACK 0190  
 __size_of_I2C_Control_Read 0010                     _I2C_NAK 01BB                   ?___awtoft 0078  
                 ?___ftpack 0070                     _ACK_bit 0052                  ??_CalcTemp 002C  
        __size_of_uart_xmit 0006              ?_Send_I2C_Data 0070                     _SSP1ADD 0212  
                   _SSP1BUF 0211                     _SSPCON2 0216                     _SSPSTAT 0214  
   __size_of_I2C_check_idle 0010               ??_I2C_restart 0073                     ___ftadd 05BA  
                   ___ftmul 0507                     ___fttol 0481        __size_of_UART_String 0021  
                   ___lwdiv 02E3                     ___lwmod 0289        __size_of_serial_init 002E  
                ??___awtoft 007B                  ??___ftpack 0075                     __ptext1 02B5  
                   __ptext2 0265                     __ptext3 0356                     __ptext4 0289  
                   __ptext5 02E3                     __ptext6 0208                     __ptext7 0244  
                   __ptext8 0182                     __ptext9 0199                     _init_io 0208  
                   main@buf 0048             ??_I2C_Start_Bit 0070        end_of_initialization 07FD  
                   itoa@buf 0029                     itoa@val 0024           __end_of_uart_xmit 0188  
                 _RCSTAbits 019D         __end_of_I2C_restart 0190                     utoa@buf 0023  
                   utoa@val 0078             ??_Send_I2C_Data 0072            __CFG_FOSC$INTOSC 0000  
                 _TRISAbits 008C                   _TRISBbits 008D                   _TRISCbits 008E  
                 _CalcHumid 041C        uart_xmit@mydata_byte 0070        __size_of_RX_I2C_Data 000C  
                 _TXSTAbits 019E                 ___ftmul@exp 0024            _I2C_Control_Read 01D8  
       start_initialization 07F2           __size_of_CalcTemp 003F                  ?_CalcHumid 0037  
            _I2C_check_idle 01F8         I2C_check_idle@byte1 0071         I2C_check_idle@byte2 0072  
               _I2C_restart 0188                    ?_I2C_ACK 0070                    ?_I2C_NAK 0070  
         __size_of___awtoft 0020           __size_of___ftpack 0064                 CalcHumid@b1 0041  
               CalcHumid@b2 0037                   ___latbits 0001               __pcstackBANK0 0020  
               CalcTemp@ans 0034      __end_of_I2C_check_idle 0208               ?_I2C_Stop_Bit 0070  
          ___lwdiv@dividend 0072                    ?___ftadd 002A                    ?___ftmul 0078  
                  ?___fttol 0070                    ?___lwdiv 0070                    ?___lwmod 0070  
                  ?_init_io 0070            ___lwdiv@quotient 0075                 ??_CalcHumid 0039  
           ?_I2C_check_idle 0070          UART_String@letters 0077                    _LATCbits 010E  
            ??_I2C_Stop_Bit 0070                    _PIE1bits 0091               ??_UART_String 0072  
                  _PIR1bits 0011               ??_serial_init 0072                   _tempbyte1 005B  
                 _tempbyte2 005C                   _uart_xmit 0182                    _SSP1STAT 0214  
          __size_of_I2C_ACK 0009            __size_of_I2C_NAK 000E                    _CalcTemp 0317  
  __end_of_I2C_Control_Read 01E8       __end_of_I2C_Start_Bit 01D8                  ?_uart_xmit 0070  
          __size_of___ftadd 00F6            __size_of___ftmul 00B3            __size_of___fttol 0086  
          __size_of___lwdiv 0034            __size_of___lwmod 002C                    ___awtoft 0224  
                  ___ftpack 03B8         __end_of_UART_String 0265                  CalcTemp@b1 0037  
                CalcTemp@b2 002A         __end_of_serial_init 02E3            __size_of_init_io 001C  
           ___lwdiv@divisor 0070       __end_of_Send_I2C_Data 01A2             ___lwdiv@counter 0077  
                  __ptext10 01A2                    __ptext11 0188                    __ptext20 041C  
                  __ptext12 01F8                    __ptext21 0481                    __ptext13 01AE  
                  __ptext22 0507                    __ptext14 01C9                    __ptext23 05BA  
                  __ptext15 01BB                    __ptext24 0224                    __ptext16 01E8  
                  __ptext25 03B8                    __ptext17 01D8                    __ptext18 0190  
                  __ptext19 0317               ??_RX_I2C_Data 0070                _SSP1CON2bits 0216  
             __size_of_main 0142               __size_of_itoa 0024               __size_of_utoa 0062  
              ?_I2C_restart 0070                UART_String@i 0075                _SSP1STATbits 0214  
                _INTCONbits 000B        __end_of_I2C_Stop_Bit 01BB                    itoa@base 0026  
          ___lwmod@dividend 0072           __CFG_CLKOUTEN$OFF 0000         __end_of_RX_I2C_Data 01AE  
                _OSCCONbits 0099                 _UART_String 0244                 _serial_init 02B5  
               ??_uart_xmit 0072                    utoa@base 007A             ___lwmod@divisor 0070  
          ??_I2C_check_idle 0070             ___lwmod@counter 0075                 _SSPCON2bits 0216  
                _SSPCONbits 0215  
